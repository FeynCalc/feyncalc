

(* :Title: OneLoop.test 	                                                *)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 1990-2016 Rolf Mertig
	Copyright (C) 1997-2016 Frederik Orellana
	Copyright (C) 2014-2016 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for OneLoop			*)

(* ------------------------------------------------------------------------ *)

Tests`LoopIntegrals`fcstOneLoop = {

{"fcstOneLoop-ID1","OneLoop[q, -I/Pi^ 2 FeynAmpDenominator[PropagatorDenominator[q, m]]]","A0[m^2]"},
{"fcstOneLoop-ID2","OneLoop[q, (I el^2)/(16 Pi^4)/(1 - D)*
	FeynAmpDenominator[PropagatorDenominator[q, mf],
		PropagatorDenominator[q - k, mf]]*
	DiracTrace[(mf + DiracSlash[q - k]).DiracMatrix[
		mu].(mf + DiracSlash[q]).DiracMatrix[mu]],
	Factoring -> True] /. ScalarProduct[k, k] -> k2 /.
	mf^2 -> mf2 // Simplify","-(el^2*(2*(-2 + D)*A0[mf2] - ((-2 + D)*k2 + 4*mf2)*B0[k2, mf2, mf2]))/(8*(-1 + D)*Pi^2)"},
{"fcstOneLoop-ID3","OneLoop[q, xxx + FAD[{q,m}]]","xxx + I \[Pi]^2 A0[m^2]"},
{"fcstOneLoop-ID4","OneLoop[k,
32 M FeynAmpDenominator[PropagatorDenominator[k, M],
PropagatorDenominator[k - q1 - q2, M],
PropagatorDenominator[k - q1, M]] Pair[Momentum[k],
Momentum[Polarization[q1, I, Transversality -> True]]] Pair[
Momentum[k],
Momentum[Polarization[q2, I, Transversality -> True]]]]","(32*I)*M*Pi^2*(-(Pair[Momentum[q1],
Momentum[Polarization[q2, I, Transversality -> True]]]*Pair[Momentum[q2],
Momentum[Polarization[q1, I, Transversality -> True]]]*PaVe[2, {Pair[Momentum[q1],
Momentum[q1]], Pair[Momentum[q1], Momentum[q1]] + 2*Pair[Momentum[q1], Momentum[q2]] +
Pair[Momentum[q2], Momentum[q2]], Pair[Momentum[q2], Momentum[q2]]}, {M^2, M^2, M^2},
PaVeAutoOrder -> True, PaVeAutoReduce -> True]) + Pair[Momentum[Polarization[q1, I,
Transversality -> True]], Momentum[Polarization[q2, I, Transversality -> True]]]*PaVe[0, 0,
{Pair[Momentum[q1], Momentum[q1]], Pair[Momentum[q1], Momentum[q1]] + 2*Pair[Momentum[q1],
Momentum[q2]] + Pair[Momentum[q2], Momentum[q2]], Pair[Momentum[q2], Momentum[q2]]},
{M^2, M^2, M^2}, PaVeAutoOrder -> True, PaVeAutoReduce -> True] - Pair[Momentum[q1],
Momentum[Polarization[q2, I, Transversality -> True]]]*Pair[Momentum[q2],
Momentum[Polarization[q1, I, Transversality -> True]]]*PaVe[1, 2, {Pair[Momentum[q1],
Momentum[q1]], Pair[Momentum[q1], Momentum[q1]] + 2*Pair[Momentum[q1], Momentum[q2]] +
Pair[Momentum[q2], Momentum[q2]], Pair[Momentum[q2], Momentum[q2]]}, {M^2, M^2, M^2},
PaVeAutoOrder -> True, PaVeAutoReduce -> True])"},
{"fcstOneLoop-ID5","OneLoop[q, FAD[q, q - p1]]","I Pi^2 B0[Pair[Momentum[p1], Momentum[p1]], 0, 0]"},
{"fcstOneLoop-ID6","OneLoop[q1, ((-I)*GA[mu]).(m + GS[q1]).GA[nu].(m +
GS[q1]).((-I)*GA[mu])*FAD[{q1, 0}, {q1, 0}, {-p + q1, 0}]]//FCE",
	"-I \[Pi]^2 (2 D m C0[0, SP[p, p], SP[p, p], 0, 0, 0] FV[p,
	nu] - (2 - D) B0[SP[p, p], 0, 0] GA[nu] + (2 - D) m^2 C0[0,
	SP[p, p], SP[p, p], 0, 0, 0] GA[nu] +
4 D m FV[p, nu] PaVe[1, {0, SP[p, p], SP[p, p]}, {0, 0, 0},
	PaVeAutoOrder -> True, PaVeAutoReduce -> True] +
2 (2 - D) GA[nu] PaVe[0, 0, {0, SP[p, p], SP[p, p]}, {0, 0, 0},
	PaVeAutoOrder -> True, PaVeAutoReduce -> True] +
2 (2 - D) FV[p, nu] GS[p] PaVe[2,
	2, {0, SP[p, p], SP[p, p]}, {0, 0, 0}, PaVeAutoOrder -> True,
	PaVeAutoReduce -> True])"},
{"fcstOneLoop-ID7","OneLoop[q, FAD[q, q, q, -p1 + q, {-p2 + q, m}]] // FCE",
"I Pi^2 PaVe[
0, {0, 0, SP[p1, p1], SP[p1, p1] - 2 SP[p1, p2] + SP[p2, p2],
SP[p2, p2], 0, SP[p1, p1], SP[p2, p2], SP[p1, p1], SP[p2, p2]}, {0,
	0, 0, 0, m^2}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]"},
{"fcstOneLoop-ID8","Simplify[ChangeDimension[
OneLoop[q,
	FVD[q, mu]  FAD[{q, 0}, {q + p1, 0}, {q + p2, 0}, {q + p3,
	0}, {q + p4, 0}]], D] -
TID[FVD[q,
	mu]  FAD[{q, 0}, {q + p1, 0}, {q + p2, 0}, {q + p3, 0}, {q + p4,
	0}], q, UsePaVeBasis -> True]]",
"0"},
{"fcstOneLoop-ID9","OneLoop[k, FVD[k1, al] FAD[k, m]]","0"}
}
