

(* :Title: ToPaVe.test                                          	    	*)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 1990-2021 Rolf Mertig
	Copyright (C) 1997-2021 Frederik Orellana
	Copyright (C) 2014-2021 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for ToPaVe			  		*)

(* ------------------------------------------------------------------------ *)

Tests`LoopIntegrals`ToPaVe = {
{"fcstToPaVe-ID1","FCClearScalarProducts[] \n ToPaVe[x, q]","x"},
{"fcstToPaVe-ID2","ToPaVe[0, q]","0"},
{"fcstToPaVe-ID3","ToPaVe[FAD[{q, m1}], q]","I*Pi^2*A0[m1^2]"},
{"fcstToPaVe-ID4","ToPaVe[FAD[{q, m1}, {q + p1, m2}], q]//FCE",
	"I*Pi^2*B0[SPD[p1, p1], m1^2, m2^2]"},
{"fcstToPaVe-ID5","ToPaVe[FAD[{q, m1}, {q + p1, m2}, {q + p2, m3}], q] // FCE",
	"I*Pi^2*C0[SPD[p1, p1], SPD[p2, p2], SPD[p1, p1] - 2*SPD[p1, p2] +
	SPD[p2, p2], m2^2, m1^2, m3^2]"},
{"fcstToPaVe-ID6","ToPaVe[FAD[{q, m1}, {q + p1, m2}, {q + p2, m3}, {q + p3, m4}], q]//FCE",
	"I*Pi^2*D0[SPD[p1, p1], SPD[p2, p2], SPD[p2, p2] - 2*SPD[p2, p3] +
	SPD[p3, p3], SPD[p1, p1] - 2*SPD[p1, p3] + SPD[p3, p3],
	SPD[p1, p1] - 2*SPD[p1, p2] + SPD[p2, p2], SPD[p3, p3], m2^2, m1^2,
	m3^2, m4^2]"},
{"fcstToPaVe-ID7","ToPaVe[SPD[q, p] FAD[{q + m1}, {q + p1, m2}], q] // FCE",
	"FAD[m1 + q, {p1 + q, m2}]*SPD[p, q]"},
{"fcstToPaVe-ID8","ToPaVe[FAD[{q, 0}], q, PaVeAutoReduce -> False]",
	"I*Pi^2*PaVe[0, {}, {0}, PaVeAutoOrder -> True, PaVeAutoReduce -> False]"},
{"fcstToPaVe-ID9","ToPaVe[FVD[q, mu] FAD[{q + m1}, {q + p1, m2}], q] // FCE",
	"FAD[m1 + q, {p1 + q, m2}]*FVD[q, mu]"},
{"fcstToPaVe-ID10","ToPaVe[FAD[{q}, {q + p1, m2}], q, OtherLoopMomenta -> {p1}] // FCE","FAD[q, {p1 + q, m2}]"},
{"fcstToPaVe-ID11","ToPaVe[a + b FAD[{q, m1}, {q + p1, m2}], q] // FCE","a + I*b*Pi^2*B0[SPD[p1, p1], m1^2, m2^2]"},
{"fcstToPaVe-ID12","ToPaVe[A0[m], p]","A0[m]"},
{"fcstToPaVe-ID13","ToPaVe[FAD[{q, 0}, {q + p1, 0}], q] // FCE","I*Pi^2*B0[SPD[p1, p1], 0, 0]"},
{"fcstToPaVe-ID14","ToPaVe[FAD[{q, m}, {q + p1, m}], q] // FCE","I*Pi^2*B0[SPD[p1, p1], m^2, m^2]"},
{"fcstToPaVe-ID15","ToPaVe[FAD[{q, m}, {q, m}], q] // FCE","I*Pi^2*B0[0, m^2, m^2]"},
{"fcstToPaVe-ID16","ToPaVe[FAD[{q, m}, {q}], q] // FCE","I*Pi^2*B0[0, 0, m^2]"},
{"fcstToPaVe-ID17","ToPaVe[FAD[{q, m1}, {q + p1, m2}, {q + p2, m3}, {q + p3, m4}, {q + p4,
	m5}], q] // FCE","I*Pi^2*PaVe[0, {SPD[p1, p1], SPD[p2, p2], SPD[p2, p2] - 2*SPD[p2, p3] + SPD[p3, p3],
	SPD[p3, p3] - 2*SPD[p3, p4] + SPD[p4, p4], SPD[p1, p1] - 2*SPD[p1, p4] + SPD[p4, p4],
	SPD[p1, p1] - 2*SPD[p1, p2] + SPD[p2, p2], SPD[p3, p3], SPD[p2, p2] - 2*SPD[p2, p4] +
	SPD[p4, p4], SPD[p1, p1] - 2*SPD[p1, p3] + SPD[p3, p3], SPD[p4, p4]},
	{m2^2, m1^2, m3^2, m4^2, m5^2}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]"},
{"fcstToPaVe-ID18","ToPaVe[FAD[{q, m1}, {q + p1, m2}, {q + p2, m3}, {q + p3, m4}, {q + p4,
	m5}, {q + p5, m6}], q] // FCE","I*Pi^2*PaVe[0, {SPD[p1, p1], SPD[p1, p1] - 2*SPD[p1, p2] + SPD[p2, p2],
SPD[p2, p2] - 2*SPD[p2, p3] + SPD[p3, p3], SPD[p3, p3] - 2*SPD[p3, p4] +
	SPD[p4, p4], SPD[p4, p4] - 2*SPD[p4, p5] + SPD[p5, p5], SPD[p5, p5],
SPD[p2, p2], SPD[p1, p1] - 2*SPD[p1, p3] + SPD[p3, p3],
SPD[p2, p2] - 2*SPD[p2, p4] + SPD[p4, p4], SPD[p3, p3] - 2*SPD[p3, p5] +
	SPD[p5, p5], SPD[p4, p4], SPD[p1, p1] - 2*SPD[p1, p5] + SPD[p5, p5],
SPD[p3, p3], SPD[p1, p1] - 2*SPD[p1, p4] + SPD[p4, p4],
SPD[p2, p2] - 2*SPD[p2, p5] + SPD[p5, p5]}, {m1^2, m2^2, m3^2, m4^2, m5^2, m6^2},
PaVeAutoOrder -> True, PaVeAutoReduce -> True]"},
{"fcstToPaVe-ID19","ToPaVe[FAD[{q, m1}, {q + p1, m2}, {q + p2, m3}, {q + p3, m4}, {q + p4,
	m5}, {q + p5, m6}, {q + p6, m7}], q] // FCE","I*Pi^2*PaVe[0, {SPD[p1, p1], SPD[p1, p1] - 2*SPD[p1, p2] + SPD[p2, p2],
SPD[p2, p2] - 2*SPD[p2, p3] + SPD[p3, p3], SPD[p3, p3] - 2*SPD[p3, p4] +
	SPD[p4, p4], SPD[p4, p4] - 2*SPD[p4, p5] + SPD[p5, p5],
SPD[p5, p5] - 2*SPD[p5, p6] + SPD[p6, p6], SPD[p6, p6], SPD[p2, p2],
SPD[p1, p1] - 2*SPD[p1, p3] + SPD[p3, p3], SPD[p2, p2] - 2*SPD[p2, p4] +
	SPD[p4, p4], SPD[p3, p3] - 2*SPD[p3, p5] + SPD[p5, p5],
SPD[p4, p4] - 2*SPD[p4, p6] + SPD[p6, p6], SPD[p5, p5],
SPD[p1, p1] - 2*SPD[p1, p6] + SPD[p6, p6], SPD[p3, p3],
SPD[p1, p1] - 2*SPD[p1, p4] + SPD[p4, p4], SPD[p2, p2] - 2*SPD[p2, p5] +
	SPD[p5, p5], SPD[p3, p3] - 2*SPD[p3, p6] + SPD[p6, p6], SPD[p4, p4],
SPD[p1, p1] - 2*SPD[p1, p5] + SPD[p5, p5], SPD[p2, p2] - 2*SPD[p2, p6] +
	SPD[p6, p6]}, {m1^2, m2^2, m3^2, m4^2, m5^2, m6^2, m7^2}, PaVeAutoOrder -> True,
PaVeAutoReduce -> True]"},
{"fcstToPaVe-ID20","FCClearScalarProducts[];\n SPD[p, p] = ma^2; \n ToPaVe[FAD[q, q + p], q]",
"I Pi^2 B0[ma^2, 0, 0]"},
{"fcstToPaVe-ID21","FCClearScalarProducts[];\n SPD[p, p] = mb^2; \n ToPaVe[FAD[q, q + p], q]",
"I Pi^2 B0[mb^2, 0, 0]"},
{"fcstToPaVe-ID22","ToPaVe[FAD[{l, m}, {l + p, m}] GFAD[{SPD[l, p], 1}], l] // FCE",
"FAD[{l, m}, {l + p, m}] GFAD[{{SPD[l, p], 1}, 1}]"},
{"fcstToPaVe-ID23","ToPaVe[FAD[{l, m}, {l + p, m}] CFAD[{{0, l.p}, m^2}], l] // FCE",
"CFAD[{{0, l.p}, {m^2, -1}, 1}] FAD[{l, m}, {l + p, m}]"},
{"fcstToPaVe-ID25", "ToPaVe[SFAD[{q,m1^2}],q,FCE->True]",
"I*Pi^2*A0[m1^2]"},
{"fcstToPaVe-ID26", "ToPaVe[SFAD[{q,m1^2,2}],q,FCE->True]",
"I*Pi^2*B0[0, m1^2, m1^2]"},
{"fcstToPaVe-ID27", "ToPaVe[SFAD[{{q,q.p},m^2}],q,FCE->True]",
"SFAD[{{q, p . q}, {m^2, 1}, 1}]"},
{"fcstToPaVe-ID28", "ToPaVe[SFAD[{q,m1^2},{q-p,m2^2}],q,FCE->True]",
	"I*Pi^2*B0[SPD[p, p], m1^2, m2^2]"},
{"fcstToPaVe-ID29",
"ToPaVe[SFAD[{q,m1^2},{q+p1,m2^2}],q,FCE->True]",
"I*Pi^2*B0[SPD[p1, p1], m1^2, m2^2]"},
{"fcstToPaVe-ID30",
"ToPaVe[SFAD[{q,mm1},{q+p1,mm2},{q+p2,mm3}],q,FCE->True]",
"I*Pi^2*C0[SPD[p1, p1], SPD[p2, p2], SPD[p1, p1] - 2*SPD[p1, p2] + \
SPD[p2, p2], mm2, mm1, mm3]"},
{"fcstToPaVe-ID31",
"ToPaVe[SFAD[{q, mm1}, {q + p1, mm2}, {q + p2, mm3}, {q + p3, \
mm4}], q,FCE->True]",
"I*Pi^2*D0[SPD[p1, p1], SPD[p2, p2], SPD[p2, p2] - 2*SPD[p2, p3] + \
SPD[p3, p3], SPD[p1, p1] - 2*SPD[p1, p3] + SPD[p3, p3], SPD[p1, p1] - \
2*SPD[p1, p2] + SPD[p2, p2], SPD[p3, p3], mm2, mm1, mm3, mm4]"},
{"fcstToPaVe-ID32", "ToPaVe[SFAD[{q,m1^2,2}],q,FCE->True]",
"I*Pi^2*B0[0, m1^2, m1^2]"},
{"fcstToPaVe-ID33", "ToPaVe[SFAD[{q,m1^2,3}],q,FCE->True]",
"I*Pi^2*C0[0, 0, 0, m1^2, m1^2, m1^2]"},
{"fcstToPaVe-ID34", "ToPaVe[SFAD[{q,m1^2,4}],q,FCE->True]",
"I*Pi^2*D0[0, 0, 0, 0, 0, 0, m1^2, m1^2, m1^2, m1^2]"},
{"fcstToPaVe-ID35",
"FCClearScalarProducts[]; \n ToPaVe[SFAD[{q,m1^2},{q-p,m2^2,3}],q,FCE->True]",
"I*Pi^2*D0[0, 0, SPD[p, p], SPD[p, p], 0, SPD[p, p], m2^2, m2^2, \
m2^2, m1^2]"},
{"fcstToPaVe-ID36", "ToPaVe[FAD[{q, m0}, {q - p1, m1}, {q - p2, m2}], q,
PaVeAutoOrder -> False, PaVeOrder -> False, FCE -> True]",
"I*Pi^2*C0[SPD[p1, p1], SPD[p1, p1] - 2*SPD[p1, p2] + SPD[p2, p2], SPD[p2, p2], m0^2, m1^2, m2^2]"},
{"fcstToPaVe-ID37", "ToPaVe[FAD[{q, m0}, {q - p1, m1}, {q - p2, m2}, {q - p2, m3}], q,
PaVeAutoOrder -> False, PaVeOrder -> False, FCE -> True]",
"I*Pi^2*D0[SPD[p1, p1], SPD[p1, p1] - 2*SPD[p1, p2] + SPD[p2, p2],
0, SPD[p2, p2], SPD[p2, p2], SPD[p1, p1] - 2*SPD[p1, p2] + SPD[p2, p2], m0^2, m1^2, m2^2, m3^2]"},
{"fcstToPaVe-ID33", "ToPaVe[FAD[{q1, m1}] A0[m2^2], q1]",
"I \[Pi]^2 A0[m1^2] A0[m2^2]"}
};
