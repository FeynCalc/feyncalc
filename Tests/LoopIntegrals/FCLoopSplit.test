

(* :Title: FCLoopSplit.test                                          	    *)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 1990-2021 Rolf Mertig
	Copyright (C) 1997-2021 Frederik Orellana
	Copyright (C) 2014-2021 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for FCLoopSplit		  		*)

(* ------------------------------------------------------------------------ *)

Tests`LoopIntegrals`fcstFCLoopSplit = {
{"fcstFCLoopSplit-ID1","FCLoopSplit[0, {q}] // FCE",
	"{0, 0, 0, 0}"},
{"fcstFCLoopSplit-ID2","FCLoopSplit[c, {q}] // FCE",
	"{c, 0, 0, 0}"},
{"fcstFCLoopSplit-ID3","FCLoopSplit[c FAD[{q, m}], {q}] // FCE",
	"{0, c*FAD[{q, m}], 0, 0}1"},
{"fcstFCLoopSplit-ID4",
	"FCLoopSplit[ SPD[q, p] FAD[{q, m}], {q}] // FCE",
	"{0, 0, FAD[{q, m}]*SPD[p, q], 0}"},
{"fcstFCLoopSplit-ID5",
	"FCLoopSplit[c SPD[q, p] FAD[{q, m}], {q}] // FCE",
	"{0, 0, c*FAD[{q, m}]*SPD[p, q], 0}"},
{"fcstFCLoopSplit-ID6",
	"FCLoopSplit[ FVD[q, mu] FAD[{q, m}], {q}] // FCE",
	"{0, 0, 0, FAD[{q, m}]*FVD[q, mu]}"},
{"fcstFCLoopSplit-ID7","FCLoopSplit[c FVD[q, mu] FAD[{q, m}], {q}] // FCE",
	"{0, 0, 0, c*FAD[{q, m}]*FVD[q, mu]}"},
{"fcstFCLoopSplit-ID8","FCLoopSplit[c + b FAD[{q, mu}] +
	SPD[q, k] SPD[q, l] FAD[{q, m}] + b FVD[q, mu] SPD[q, l]
	FAD[{q, m}], {q}] // FCE","{c, b*FAD[{q, mu}],
	FAD[{q, m}]*SPD[k, q]*SPD[l, q],
	b*FAD[{q, m}]*FVD[q, mu]*SPD[l, q]}"},
{"fcstFCLoopSplit-ID9","FCLoopSplit[(GS[x] + GA[j].(GSD[i] FVD[q, i] +
	GSD[p]).GA[5]).SUNT[a] FAD[{q, m}], {q}] // FCE",
	"{0, FAD[{q, m}]*(GA[j] . GSD[p] . GA[5] + GS[x])*SUNT[a], 0,
GA[j] . GSD[i] . GA[5]*FAD[{q, m}]*FVD[q, i]*SUNT[a]}"},
{"fcstFCLoopSplit-ID10","FCLoopSplit[(GS[x] +
	GA[j].(GSD[i] FVD[q, i] + GSD[p] + GSD[q + x]).GA[5]).SUNT[
	a] FAD[{q, m}], {q}] // FCE","{0, FAD[{q, m}]*(GA[j] . GSD[p] . GA[5] +
	GA[j] . GSD[x] . GA[5] + GS[x])*SUNT[a],
0, GA[j] . GSD[q] . GA[5]*FAD[{q, m}]*SUNT[a] + GA[j] . GSD[i] . GA[5]*FAD[{q, m}]*
FVD[q, i]*SUNT[a]}"},
{"fcstFCLoopSplit-ID11","FCLoopSplit[GSD[p + q] FAD[{q, m}], {q}]//FCE",
"{0, FAD[{q, m}] GSD[p], 0, FAD[{q, m}] GSD[q]}"},
{"fcstFCLoopSplit-ID12","FCLoopSplit[
1/6 (m1^2 + m2^2) + A0[m2^2]/6 + 1/3 m1^2 B0[0, m1^2, m2^2] +
1/6 (m1^2 - m2^2) B1[0, m1^2, m2^2], {}]",
"{(m1^2 + m2^2)/6, A0[m2^2]/6 + (m1^2*B0[0, m1^2, m2^2])/3 + ((m1^2 - m2^2)*B1[0, m1^2, m2^2])/6, 0, 0}"},
{"fcstFCLoopSplit-ID13","FCLoopSplit[Foobar[x], {},
PaVeIntegralHeads -> Join[OptionValue[FCLoopIsolate, PaVeIntegralHeads], {Foobar}]]",
"{0, Foobar[x], 0, 0}"},
{"fcstFCLoopSplit-ID14",
"FCLoopSplit[c CSPD[q,p] CFAD[{q,m}],{q},FCE\[Rule]True]",
"{0, 0, c*CFAD[{{q, 0}, {m, -1}, 1}]*CSPD[p, q], 0}"},
{"fcstFCLoopSplit-ID15",
"FCLoopSplit[CVD[q,mu] CFAD[{q,m}],{q},FCE\[Rule]True]",
"{0, 0, 0, CFAD[{{q, 0}, {m, -1}, 1}]*CVD[q, mu]}"},
{"fcstFCLoopSplit-ID16",
"FCLoopSplit[c CVD[q,mu] CFAD[{q,m}],{q},FCE->True]",
"{0, 0, 0, c*CFAD[{{q, 0}, {m, -1}, 1}]*CVD[q, mu]}"},
{"fcstFCLoopSplit-ID17",
"FCLoopSplit[c+b CFAD[{q,mu}]+CSPD[q,k] CSPD[q,l] CFAD[{q,m}]+b \
CVD[q,mu] CSPD[q,l] CFAD[{q,m}],{q},FCE\[Rule]True]",
"{c, b*CFAD[{{q, 0}, {mu, -1}, 1}], CFAD[{{q, 0}, {m, -1}, \
1}]*CSPD[k, q]*CSPD[l, q], b*CFAD[{{q, 0}, {m, -1}, 1}]*CSPD[l, \
q]*CVD[q, mu]}"},
{"fcstFCLoopSplit-ID18",
"FCLoopSplit[c SPD[q,p] SFAD[{q,m}],{q},FCE\[Rule]True]",
"{0, 0, c*SFAD[{{q, 0}, {m, 1}, 1}]*SPD[p, q], 0}"},
{"fcstFCLoopSplit-ID19",
"FCLoopSplit[FVD[q,mu] SFAD[{q,m}],{q},FCE\[Rule]True]",
"{0, 0, 0, FVD[q, mu]*SFAD[{{q, 0}, {m, 1}, 1}]}"},
{"fcstFCLoopSplit-ID20",
"FCLoopSplit[c FVD[q,mu] SFAD[{q,m}],{q},FCE->True]",
"{0, 0, 0, c*FVD[q, mu]*SFAD[{{q, 0}, {m, 1}, 1}]}"},
{"fcstFCLoopSplit-ID21",
"FCLoopSplit[c+b SFAD[{q,mu}]+SPD[q,k] SPD[q,l] SFAD[{q,m}]+b \
FVD[q,mu] SPD[q,l]SFAD[{q,m}],{q},FCE\[Rule]True]",
"{c, b*SFAD[{{q, 0}, {mu, 1}, 1}], SFAD[{{q, 0}, {m, 1}, \
1}]*SPD[k, q]*SPD[l, q], b*FVD[q, mu]*SFAD[{{q, 0}, {m, 1}, \
1}]*SPD[l, q]}"},
{"fcstFCLoopSplit-ID22","FCLoopSplit[PaVe[0, {}, {m1^2}], {}]",
"{0, PaVe[0, {}, {m1^2}], 0, 0}"}
};
