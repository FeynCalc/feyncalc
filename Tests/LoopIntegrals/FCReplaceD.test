

(* :Title: FCReplaceD.test                                   		            *)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 1990-2020 Rolf Mertig
	Copyright (C) 1997-2020 Frederik Orellana
	Copyright (C) 2014-2020 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for FCReplaceD			*)

(* ------------------------------------------------------------------------ *)

Tests`LoopIntegrals`fcstFCReplaceD = {
{"fcstFCReplaceD-ID1","FCReplaceD[SPD[p, p], D -> 4 - 2 Epsilon, FCE->True]","SPD[p, p]"},
{"fcstFCReplaceD-ID2","FCReplaceD[ScaleMu^(D - 4)  SPD[p, p]*D, D -> 4 - 2 Epsilon, FCE->True]",
"(4 - 2 Epsilon) ScaleMu^(-2 Epsilon)*SPD[p, p]"},
{"fcstFCReplaceD-ID3","FCReplaceD[MTD[mu, nu]*D, D -> 4 - 2 Epsilon,FCE->True]",
"(4 - 2 Epsilon) MTD[mu,nu]"},
{"fcstFCReplaceD-ID4","FCReplaceD[GAD[i] D, D -> 4 - 2 Eps,FCE->True]","(4 - 2 Eps) GAD[i]"},
{"fcstFCReplaceD-ID5","FCReplaceD[GSD[p] D, D -> 4 - 2 Eps,FCE->True]","(4 - 2 Eps) GSD[p]"},
{"fcstFCReplaceD-ID6","FCReplaceD[GA[x], D -> 4 - 2 Epsilon,FCE->True]","GA[x]"},
{"fcstFCReplaceD-ID7","FCReplaceD[FV[x, i], D -> 4 - 2 Eps,FCE->True] ","FV[x, i]"},
{"fcstFCReplaceD-ID8", "FCReplaceD[CSP[p,p],D\[Rule]4-2 Epsilon]",
"CartesianPair[CartesianMomentum[p], CartesianMomentum[p]]"},
{"fcstFCReplaceD-ID9",
"FCReplaceD[ScaleMu^(D-4) CSP[p,p]*D,D\[Rule]4-2 Epsilon]",
"((4 - 2*Epsilon)*CartesianPair[CartesianMomentum[p], \
CartesianMomentum[p]])/ScaleMu^(2*Epsilon)"},
{"fcstFCReplaceD-ID10",
"FCReplaceD[KD[mu,nu]*(D-1),D\[Rule]4-2 Epsilon]",
"(3 - 2*Epsilon)*CartesianPair[CartesianIndex[mu], CartesianIndex[nu]]"},
{"fcstFCReplaceD-ID11",
"FCReplaceD[CGAD[i] D,D\[Rule]4-2 Eps,FCE\[Rule]True]",
"(4 - 2*Eps)*CGAD[i]"},
{"fcstFCReplaceD-ID12",
"FCReplaceD[CGSD[p] D,D\[Rule]4-2 Eps,FCE\[Rule]True]",
"(4 - 2*Eps)*CGSD[p]"},
{"fcstFCReplaceD-ID13",
"FCReplaceD[SID[i] D,D\[Rule]4-2 Eps,FCE\[Rule]True]",
"(4 - 2*Eps)*SID[i]"},
{"fcstFCReplaceD-ID14",
"FCReplaceD[SISD[p] D,D\[Rule]4-2 Eps,FCE\[Rule]True]",
"(4 - 2*Eps)*SISD[p]"},
{"fcstFCReplaceD-ID15",
"FCReplaceD[CSID[i] D,D\[Rule]4-2 Eps,FCE\[Rule]True]",
"(4 - 2*Eps)*CSID[i]"},
{"fcstFCReplaceD-ID16",
"FCReplaceD[CSISD[p] D,D\[Rule]4-2 Eps,FCE\[Rule]True]",
"(4 - 2*Eps)*CSISD[p]"},
{"fcstFCReplaceD-ID17",
"FCReplaceD[CGA[x],D\[Rule]4-2 Epsilon,FCE\[Rule]True]",
"CGA[x]"},
{"fcstFCReplaceD-ID18",
"FCReplaceD[CV[x,i],D\[Rule]4-2 Eps,FCE\[Rule]True]", "CV[x, i]"},
{"fcstFCReplaceD-ID19",
"FCReplaceD[(D - 2) DiracChain[
D DiracGamma[LorentzIndex[mu1, D], D].DiracGamma[7], DiracIndex[i],
	DiracIndex[j]] DiracChain[
DiracGamma[LorentzIndex[mu1, D], D].DiracGamma[7], DiracIndex[k],
DiracIndex[l]], D -> 4 - 2 Epsilon, FCE -> True]", "(2 - 2 Epsilon) DCHN[GAD[mu1].GA[7], k,
l] DCHN[(4 - 2 Epsilon) GAD[mu1].GA[7], i, j]"},
{"fcstFCReplaceD-ID20",
"FCReplaceD[(D - 2) PauliChain[
D PauliSigma[CartesianIndex[a, D - 1], D - 1], PauliIndex[i],
PauliIndex[j]] PauliChain[
PauliSigma[CartesianIndex[a, D - 1], D - 1], PauliIndex[k],
PauliIndex[l]], D -> 4 - 2 Epsilon, FCE -> True]",
"(2 - 2*Epsilon)*PCHN[CSID[a], k, l]*PCHN[(4 - 2*Epsilon)*CSID[a], i, j]"}
}
