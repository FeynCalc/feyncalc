

(* :Title: Tdec.test                    	                                *)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 1990-2024 Rolf Mertig
	Copyright (C) 1997-2024 Frederik Orellana
	Copyright (C) 2014-2024 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for Tdec	                *)

(* ------------------------------------------------------------------------ *)

Tests`LoopIntegrals`fcstTdec = {
{"fcstTdec-ID1","Tdec[{{l, i1}, {l, i2}}, {p1}]",
	"{{X1 -> D, X2 -> SPD[l, l], X3 -> SPD[l, p1], X4 -> SPD[p1, p1]},
	-(((X1 X3^2 - X2 X4) FVD[p1, i1] FVD[p1,i2])/((1 - X1) X4^2)) + ((X3^2 - X2 X4) MTD[i1,	i2])/((1 - X1) X4)}"},
{"fcstTdec-ID2","Tdec[{{l, i1}, {l, i2}}, {p1},UseTIDL->False]",
	"{{X1 -> D, X2 -> SPD[l, l], X3 -> SPD[l, p1], X4 -> SPD[p1, p1]},
	-(((X1 X3^2 - X2 X4) FVD[p1, i1] FVD[p1,i2])/((1 - X1) X4^2)) + ((X3^2 - X2 X4) MTD[i1,	i2])/((1 - X1) X4)}"},
{"fcstTdec-ID3","Tdec[{{l, i1}, {l, i2}}, {p1}, List -> False]","(MTD[i1, i2] (SPD[l, p1]^2 - SPD[l, l] SPD[p1, p1]))/((1 - D) SPD[p1,
	p1]) - (FVD[p1, i1] FVD[p1, i2] (D SPD[l, p1]^2 - SPD[l, l] SPD[p1, p1]))/((1 - D) SPD[p1,p1]^2)"},
{"fcstTdec-ID4","Tdec[{{l, i1}, {l, i2}}, {p1}, UseTIDL->False,List -> False]","(MTD[i1, i2] (SPD[l, p1]^2 - SPD[l, l] SPD[p1, p1]))/((1 - D) SPD[p1,
	p1]) - (FVD[p1, i1] FVD[p1, i2] (D SPD[l, p1]^2 - SPD[l, l] SPD[p1, p1]))/((1 - D) SPD[p1,p1]^2)"},
{"fcstTdec-ID5","Tdec[{{l, i1}, {l, i2}}, {p1}, List -> False, FeynCalcExternal -> False]","(Pair[LorentzIndex[i1, D],
	LorentzIndex[i2, D]] (Pair[Momentum[l, D], Momentum[p1, D]]^2 - Pair[Momentum[l, D], Momentum[l, D]] Pair[Momentum[p1, D],
	Momentum[p1, D]]))/((1 - D) Pair[Momentum[p1, D], Momentum[p1, D]]) - (Pair[LorentzIndex[i1, D], Momentum[p1,
	D]] Pair[LorentzIndex[i2, D], Momentum[p1, D]] (D Pair[Momentum[l, D], Momentum[p1, D]]^2 - Pair[Momentum[l, D],
	Momentum[l, D]] Pair[Momentum[p1, D],  Momentum[p1, D]]))/((1 - D) Pair[Momentum[p1, D], Momentum[p1, D]]^2)"},
{"fcstTdec-ID6","Tdec[{{l, i1}, {l, i2}}, {p1}, UseTIDL->False, List -> False, FeynCalcExternal -> False]","(Pair[LorentzIndex[i1, D],
	LorentzIndex[i2, D]] (Pair[Momentum[l, D], Momentum[p1, D]]^2 - Pair[Momentum[l, D], Momentum[l, D]] Pair[Momentum[p1, D],
	Momentum[p1, D]]))/((1 - D) Pair[Momentum[p1, D], Momentum[p1, D]]) - (Pair[LorentzIndex[i1, D], Momentum[p1,
	D]] Pair[LorentzIndex[i2, D], Momentum[p1, D]] (D Pair[Momentum[l, D], Momentum[p1, D]]^2 - Pair[Momentum[l, D],
	Momentum[l, D]] Pair[Momentum[p1, D],  Momentum[p1, D]]))/((1 - D) Pair[Momentum[p1, D], Momentum[p1, D]]^2)"},
{"fcstTdec-ID7","Tdec[{{l, i1}, {l, i2}}, {p1}, List -> False, Dimension -> 4]","-((MT[i1, i2] (SP[l, p1]^2 -
	SP[l, l] SP[p1, p1]))/(3 SP[p1, p1])) + (FV[p1, i1] FV[p1, i2] (4 SP[l, p1]^2 - SP[l, l] SP[p1, p1]))/(3 SP[p1, p1]^2)"},
{"fcstTdec-ID8","Tdec[{{l, i1}, {l, i2}}, {p1}, UseTIDL->False, List -> False, Dimension -> 4]","-((MT[i1, i2] (SP[l, p1]^2 -
	SP[l, l] SP[p1, p1]))/(3 SP[p1, p1])) + (FV[p1, i1] FV[p1, i2] (4 SP[l, p1]^2 - SP[l, l] SP[p1, p1]))/(3 SP[p1, p1]^2)"},
{"fcstTdec-ID9","Tdec[{{l, i1}, {l, i2}}, {p1}, List -> False, Dimension -> 4,
FeynCalcExternal -> False]","-((Pair[LorentzIndex[i1], LorentzIndex[i2]] (Pair[Momentum[l], Momentum[p1]]^2 -
	Pair[Momentum[l], Momentum[l]] Pair[Momentum[p1], Momentum[p1]]))/(3 Pair[Momentum[p1], Momentum[p1]])) + (1/(
	3 Pair[Momentum[p1], Momentum[p1]]^2)) Pair[LorentzIndex[i1], Momentum[p1]] Pair[LorentzIndex[i2],
	Momentum[p1]] (4 Pair[Momentum[l], Momentum[p1]]^2 - Pair[Momentum[l], Momentum[l]] Pair[Momentum[p1], Momentum[p1]])"},

{"fcstTdec-ID10","Tdec[{{l, i1}, {l, i2}}, {p1}, UseTIDL->False, List -> False, Dimension -> 4,
FeynCalcExternal -> False]","-((Pair[LorentzIndex[i1], LorentzIndex[i2]] (Pair[Momentum[l], Momentum[p1]]^2 -
	Pair[Momentum[l], Momentum[l]] Pair[Momentum[p1], Momentum[p1]]))/(3 Pair[Momentum[p1], Momentum[p1]])) + (1/(
	3 Pair[Momentum[p1], Momentum[p1]]^2)) Pair[LorentzIndex[i1], Momentum[p1]] Pair[LorentzIndex[i2],
	Momentum[p1]] (4 Pair[Momentum[l], Momentum[p1]]^2 - Pair[Momentum[l], Momentum[l]] Pair[Momentum[p1], Momentum[p1]])"},
{"fcstTdec-ID11","Tdec[{{l, i1}, {l, i2}, {l, i3}}, {}, UseTIDL -> False]","{0,0}"},
{"fcstTdec-ID12","Tdec[{{l, i1}, {l, i2}, {l, i3}}, {}, UseTIDL -> False, List->False]","0"},
{"fcstTdec-ID13","Tdec[{{l1, i1}, {l1, i2}, {l2, i3}}, {}, UseTIDL -> False]","{0,0}"},
{"fcstTdec-ID14","Tdec[{{l1, i1}, {l1, i2}, {l2, i3}}, {}, UseTIDL -> False, List->False]","0"},
{"fcstTdec-ID15","Tdec[{{q2, mu1}, {q1, mu2}, {q1, mu3}, {q1, mu4}, {q1, mu5}}, {k1},
Parallelize -> False, List -> False]","-(((FVD[k1, mu1]*MTD[mu2, mu5]*MTD[mu3, mu4] + FVD[k1, mu1]*MTD[mu2, mu4]*MTD[mu3, mu5] + FVD[k1, mu1]*MTD[mu2, mu3]*MTD[mu4, mu5])*SPD[k1, q2]*(SPD[k1, q1]^2 - SPD[k1, k1]*SPD[q1, q1])^2)/
((1 - D^2)*SPD[k1, k1]^3)) + ((FVD[k1, mu3]*FVD[k1, mu4]*FVD[k1, mu5]*MTD[mu1, mu2] + FVD[k1, mu2]*FVD[k1, mu4]*FVD[k1, mu5]*MTD[mu1, mu3] + FVD[k1, mu2]*FVD[k1, mu3]*FVD[k1, mu5]*MTD[mu1, mu4] +
	FVD[k1, mu2]*FVD[k1, mu3]*FVD[k1, mu4]*MTD[mu1, mu5])*SPD[k1, q1]*(4*SPD[k1, q1]^2 + D*SPD[k1, q1]^2 - 3*SPD[k1, k1]*SPD[q1, q1])*(SPD[k1, q1]*SPD[k1, q2] - SPD[k1, k1]*SPD[q1, q2]))/
((1 - D^2)*SPD[k1, k1]^4) - ((FVD[k1, mu5]*MTD[mu1, mu4]*MTD[mu2, mu3] + FVD[k1, mu4]*MTD[mu1, mu5]*MTD[mu2, mu3] + FVD[k1, mu5]*MTD[mu1, mu3]*MTD[mu2, mu4] + FVD[k1, mu3]*MTD[mu1, mu5]*MTD[mu2, mu4] +
	FVD[k1, mu4]*MTD[mu1, mu3]*MTD[mu2, mu5] + FVD[k1, mu3]*MTD[mu1, mu4]*MTD[mu2, mu5] + FVD[k1, mu5]*MTD[mu1, mu2]*MTD[mu3, mu4] + FVD[k1, mu2]*MTD[mu1, mu5]*MTD[mu3, mu4] +
	FVD[k1, mu4]*MTD[mu1, mu2]*MTD[mu3, mu5] + FVD[k1, mu2]*MTD[mu1, mu4]*MTD[mu3, mu5] + FVD[k1, mu3]*MTD[mu1, mu2]*MTD[mu4, mu5] + FVD[k1, mu2]*MTD[mu1, mu3]*MTD[mu4, mu5])*SPD[k1, q1]*
(SPD[k1, q1]^2 - SPD[k1, k1]*SPD[q1, q1])*(SPD[k1, q1]*SPD[k1, q2] - SPD[k1, k1]*SPD[q1, q2]))/((1 - D^2)*SPD[k1, k1]^3) +
((FVD[k1, mu1]*FVD[k1, mu4]*FVD[k1, mu5]*MTD[mu2, mu3] + FVD[k1, mu1]*FVD[k1, mu3]*FVD[k1, mu5]*MTD[mu2, mu4] + FVD[k1, mu1]*FVD[k1, mu3]*FVD[k1, mu4]*MTD[mu2, mu5] +
	FVD[k1, mu1]*FVD[k1, mu2]*FVD[k1, mu5]*MTD[mu3, mu4] + FVD[k1, mu1]*FVD[k1, mu2]*FVD[k1, mu4]*MTD[mu3, mu5] + FVD[k1, mu1]*FVD[k1, mu2]*FVD[k1, mu3]*MTD[mu4, mu5])*(SPD[k1, q1]^2 - SPD[k1, k1]*SPD[q1, q1])*
(4*SPD[k1, q1]^2*SPD[k1, q2] + D*SPD[k1, q1]^2*SPD[k1, q2] - SPD[k1, k1]*SPD[k1, q2]*SPD[q1, q1] - 2*SPD[k1, k1]*SPD[k1, q1]*SPD[q1, q2]))/((1 - D^2)*SPD[k1, k1]^4) -
(FVD[k1, mu1]*FVD[k1, mu2]*FVD[k1, mu3]*FVD[k1, mu4]*FVD[k1, mu5]*(24*SPD[k1, q1]^4*SPD[k1, q2] + 10*D*SPD[k1, q1]^4*SPD[k1, q2] + D^2*SPD[k1, q1]^4*SPD[k1, q2] -
	24*SPD[k1, k1]*SPD[k1, q1]^2*SPD[k1, q2]*SPD[q1, q1] - 6*D*SPD[k1, k1]*SPD[k1, q1]^2*SPD[k1, q2]*SPD[q1, q1] + 3*SPD[k1, k1]^2*SPD[k1, q2]*SPD[q1, q1]^2 - 16*SPD[k1, k1]*SPD[k1, q1]^3*SPD[q1, q2] -
	4*D*SPD[k1, k1]*SPD[k1, q1]^3*SPD[q1, q2] + 12*SPD[k1, k1]^2*SPD[k1, q1]*SPD[q1, q1]*SPD[q1, q2]))/((1 - D^2)*SPD[k1, k1]^5)"},
{"fcstTdec-ID16","Tdec[{{q1, $3050}, {q1, $3489}, {q2, $3047}, {q2, $3488}}, {k1},
Dimension -> D, List -> False, UseTIDL -> False, FCE -> True]",
"-(((MTD[$3047, $3489]*MTD[$3050, $3488] +
		MTD[$3047, $3050]*MTD[$3488, $3489])*(2*SPD[k1, q1]^2*
		SPD[k1, q2]^2 - D*SPD[k1, q1]^2*SPD[k1, q2]^2 -
		SPD[k1, k1]*SPD[k1, q2]^2*SPD[q1, q1] -
		2*SPD[k1, k1]*SPD[k1, q1]*SPD[k1, q2]*SPD[q1, q2] +
		2*D*SPD[k1, k1]*SPD[k1, q1]*SPD[k1, q2]*SPD[q1, q2] +
		SPD[k1, k1]^2*SPD[q1, q2]^2 - D*SPD[k1, k1]^2*SPD[q1, q2]^2 -
		SPD[k1, k1]*SPD[k1, q1]^2*SPD[q2, q2] +
		SPD[k1, k1]^2*SPD[q1, q1]*SPD[q2, q2]))/((2 - D)*(1 - D^2)*
	SPD[k1, k1]^2)) + ((FVD[k1, $3488]*FVD[k1, $3489]*
	MTD[$3047, $3050] +
	FVD[k1, $3050]*FVD[k1, $3488]*MTD[$3047, $3489] +
	FVD[k1, $3047]*FVD[k1, $3489]*MTD[$3050, $3488] +
	FVD[k1, $3047]*FVD[k1, $3050]*MTD[$3488, $3489])*(4*
	SPD[k1, q1]^2*SPD[k1, q2]^2 - D^2*SPD[k1, q1]^2*SPD[k1, q2]^2 -
	SPD[k1, k1]*SPD[k1, q2]^2*SPD[q1, q1] -
	4*SPD[k1, k1]*SPD[k1, q1]*SPD[k1, q2]*SPD[q1, q2] +
	D*SPD[k1, k1]*SPD[k1, q1]*SPD[k1, q2]*SPD[q1, q2] +
	D^2*SPD[k1, k1]*SPD[k1, q1]*SPD[k1, q2]*SPD[q1, q2] +
	SPD[k1, k1]^2*SPD[q1, q2]^2 - D*SPD[k1, k1]^2*SPD[q1, q2]^2 -
	SPD[k1, k1]*SPD[k1, q1]^2*SPD[q2, q2] +
	SPD[k1, k1]^2*SPD[q1, q1]*SPD[q2, q2]))/((2 - D)*(1 - D^2)*
	SPD[k1, k1]^3) - (FVD[k1, $3047]*FVD[k1, $3050]*FVD[k1, $3488]*
	FVD[k1, $3489]*(8*SPD[k1, q1]^2*SPD[k1, q2]^2 +
	6*D*SPD[k1, q1]^2*SPD[k1, q2]^2 +
	D^2*SPD[k1, q1]^2*SPD[k1, q2]^2 -
	2*SPD[k1, k1]*SPD[k1, q2]^2*SPD[q1, q1] -
	D*SPD[k1, k1]*SPD[k1, q2]^2*SPD[q1, q1] -
	8*SPD[k1, k1]*SPD[k1, q1]*SPD[k1, q2]*SPD[q1, q2] -
	4*D*SPD[k1, k1]*SPD[k1, q1]*SPD[k1, q2]*SPD[q1, q2] +
	2*SPD[k1, k1]^2*SPD[q1, q2]^2 -
	2*SPD[k1, k1]*SPD[k1, q1]^2*SPD[q2, q2] -
	D*SPD[k1, k1]*SPD[k1, q1]^2*SPD[q2, q2] +
	SPD[k1, k1]^2*SPD[q1, q1]*SPD[q2, q2]))/((1 - D^2)*
	SPD[k1, k1]^4) - (MTD[$3047, $3488]*
	MTD[$3050, $3489]*(2*SPD[k1, q1]^2*SPD[k1, q2]^2 -
	D*SPD[k1, q1]^2*SPD[k1, q2]^2 +
	D*SPD[k1, k1]*SPD[k1, q2]^2*SPD[q1, q1] -
	4*SPD[k1, k1]*SPD[k1, q1]*SPD[k1, q2]*SPD[q1, q2] +
	2*SPD[k1, k1]^2*SPD[q1, q2]^2 +
	D*SPD[k1, k1]*SPD[k1, q1]^2*SPD[q2, q2] -
	D*SPD[k1, k1]^2*SPD[q1, q1]*SPD[q2, q2]))/((2 - D)*(1 - D^2)*
	SPD[k1, k1]^2) + (FVD[k1, $3047]*FVD[k1, $3488]*
	MTD[$3050, $3489]*(4*SPD[k1, q1]^2*SPD[k1, q2]^2 -
	D^2*SPD[k1, q1]^2*SPD[k1, q2]^2 -
	2*SPD[k1, k1]*SPD[k1, q2]^2*SPD[q1, q1] +
	D^2*SPD[k1, k1]*SPD[k1, q2]^2*SPD[q1, q1] -
	4*SPD[k1, k1]*SPD[k1, q1]*SPD[k1, q2]*SPD[q1, q2] +
	2*SPD[k1, k1]^2*SPD[q1, q2]^2 +
	D*SPD[k1, k1]*SPD[k1, q1]^2*SPD[q2, q2] -
	D*SPD[k1, k1]^2*SPD[q1, q1]*SPD[q2, q2]))/((2 - D)*(1 - D^2)*
	SPD[k1, k1]^3) + (FVD[k1, $3050]*FVD[k1, $3489]*
	MTD[$3047, $3488]*(4*SPD[k1, q1]^2*SPD[k1, q2]^2 -
	D^2*SPD[k1, q1]^2*SPD[k1, q2]^2 +
	D*SPD[k1, k1]*SPD[k1, q2]^2*SPD[q1, q1] -
	4*SPD[k1, k1]*SPD[k1, q1]*SPD[k1, q2]*SPD[q1, q2] +
	2*SPD[k1, k1]^2*SPD[q1, q2]^2 -
	2*SPD[k1, k1]*SPD[k1, q1]^2*SPD[q2, q2] +
	D^2*SPD[k1, k1]*SPD[k1, q1]^2*SPD[q2, q2] -
	D*SPD[k1, k1]^2*SPD[q1, q1]*SPD[q2, q2]))/((2 - D)*(1 - D^2)*
	SPD[k1, k1]^3)"},
{"fcstTdec-ID17","Tdec[{{l, i1}, {l, i2}}, {p1}, Head -> mom]",
	"{{X1 -> D, X2 -> SPD[l, l], X3 -> SPD[l, mom[p1]],
X4 -> SPD[mom[p1],
	mom[p1]]}, -(((X1 X3^2 - X2 X4) FVD[mom[p1], i1] FVD[mom[p1],
	i2])/((1 - X1) X4^2)) + ((X3^2 - X2 X4) MTD[i1,
	i2])/((1 - X1) X4)}"}
};

Tests`LoopIntegrals`fcstTdecNegativeMomenta = ({
{"fcstTdecNegativeMomenta-ID1",
"ExpandScalarProduct[(Tdec[{{q,mu}},{-p1}]/.{p1\[Rule]-p1})]===FCI[\
Tdec[{{q,mu}},{p1}]]", "True"},
{"fcstTdecNegativeMomenta-ID2",
"ExpandScalarProduct[(Tdec[{{q,mu}},{-p1,p2}]/.{p1\[Rule]-p1})]\
===FCI[Tdec[{{q,mu}},{p1,p2}]]", "True"},
{"fcstTdecNegativeMomenta-ID3",
"ExpandScalarProduct[(Tdec[{{q,mu}},{-p1,-p2}]/.{p1\[Rule]-p1,p2\
\[Rule]-p2})]===FCI[Tdec[{{q,mu}},{p1,p2}]]", "True"},
{"fcstTdecNegativeMomenta-ID4",
"ExpandScalarProduct[(Tdec[{{q,mu}},{-p1,-p2,p3}]/.{p1\[Rule]-p1,\
p2\[Rule]-p2})]===FCI[Tdec[{{q,mu}},{p1,p2,p3}]]", "True"},
{"fcstTdecNegativeMomenta-ID5",
"ExpandScalarProduct[(Tdec[{{q,mu}},{p1,-p2,p3}]/.{p2\[Rule]-p2})]\
===FCI[Tdec[{{q,mu}},{p1,p2,p3}]]", "True"},
{"fcstTdecNegativeMomenta-ID6",
"ExpandScalarProduct[(Tdec[{{q,mu}},{-p1,-p2,-p3}]/.{p1\[Rule]-p1,\
p2\[Rule]-p2,p3\[Rule]-p3})]===FCI[Tdec[{{q,mu}},{p1,p2,p3}]]",
"True"},
{"fcstTdecNegativeMomenta-ID7",
"ExpandScalarProduct[(Tdec[{{q,mu},{q,nu}},{-p1}]/.{p1\[Rule]-p1})]\
===FCI[Tdec[{{q,mu},{q,nu}},{p1}]]", "True"},
{"fcstTdecNegativeMomenta-ID8",
"ExpandScalarProduct[(Tdec[{{q,mu},{q,nu}},{-p1,p2}]/.{p1\[Rule]-\
p1})]===FCI[Tdec[{{q,mu},{q,nu}},{p1,p2}]]", "True"},
{"fcstTdecNegativeMomenta-ID9",
"ExpandScalarProduct[(Tdec[{{q,mu},{q,nu}},{-p1,-p2}]/.{p1\[Rule]-\
p1,p2\[Rule]-p2})]===FCI[Tdec[{{q,mu},{q,nu}},{p1,p2}]]", "True"},
{"fcstTdecNegativeMomenta-ID10",
"ExpandScalarProduct[(Tdec[{{q,mu},{q,nu}},{-p1,-p2,p3}]/.{p1\
\[Rule]-p1,p2\[Rule]-p2})]===FCI[Tdec[{{q,mu},{q,nu}},{p1,p2,p3}]]",
"True"},
{"fcstTdecNegativeMomenta-ID11",
"ExpandScalarProduct[(Tdec[{{q,mu},{q,nu}},{p1,-p2,p3}]/.{p2\[Rule]\
-p2})]===FCI[Tdec[{{q,mu},{q,nu}},{p1,p2,p3}]]", "True"},
{"fcstTdecNegativeMomenta-ID12",
"ExpandScalarProduct[(Tdec[{{q,mu},{q,nu}},{-p1,-p2,-p3}]/.{p1\
\[Rule]-p1,p2\[Rule]-p2,p3\[Rule]-p3})]===FCI[Tdec[{{q,mu},{q,nu}},{\
p1,p2,p3}]]", "True"},
{"fcstTdecNegativeMomenta-ID13",
"ExpandScalarProduct[(Tdec[{{q,mu},{q,nu},{q,rho}},{-p1}]/.{p1\
\[Rule]-p1})]===FCI[Tdec[{{q,mu},{q,nu},{q,rho}},{p1}]]", "True"},
{"fcstTdecNegativeMomenta-ID14",
"ExpandScalarProduct[(Tdec[{{q,mu},{q,nu},{q,rho}},{-p1,p2}]/.{p1\
\[Rule]-p1})]===FCI[Tdec[{{q,mu},{q,nu},{q,rho}},{p1,p2}]]", "True"},
{"fcstTdecNegativeMomenta-ID15",
"ExpandScalarProduct[(Tdec[{{q,mu},{q,nu},{q,rho}},{-p1,-p2}]/.{p1\
\[Rule]-p1,p2\[Rule]-p2})]===FCI[Tdec[{{q,mu},{q,nu},{q,rho}},{p1,p2}]\
]", "True"}
});


Tests`LoopIntegrals`fcstTdecVanishingGD = ({
{"fcstTdecVanishingGD-ID1",
"FCClearScalarProducts[];ScalarProduct[p1,p1]=0;ScalarProduct[p2,p2]=0;\
ScalarProduct[p1,p2]=0;Tdec[{{q,mu}},{p1}]", "{{}, FVD[q, mu]}"},
{"fcstTdecVanishingGD-ID2", "Tdec[{{q,mu}},{p1},List\[Rule]False]",
	"FVD[q, mu]"},
{"fcstTdecVanishingGD-ID3", "Tdec[{{q,mu},{q,nu}},{p1}]",
"{{}, FVD[q, mu]*FVD[q, nu]}"},
{"fcstTdecVanishingGD-ID4",
"Tdec[{{q,mu},{q,nu}},{p1},List\[Rule]False]",
"FVD[q, mu]*FVD[q, nu]"},
{"fcstTdecVanishingGD-ID5", "Tdec[{{q,mu}},{p1,p2}]",
"{{}, FVD[q, mu]}"},
{"fcstTdecVanishingGD-ID6",
"Tdec[{{q,mu}},{p1,p2},List\[Rule]False]", "FVD[q, mu]"},
{"fcstTdecVanishingGD-ID7", "Tdec[{{q,mu},{q,nu}},{p1,p2}]",
"{{}, FVD[q, mu]*FVD[q, nu]}"},
{"fcstTdecVanishingGD-ID8",
"Tdec[{{q,mu},{q,nu}},{p1,p2},List\[Rule]False]",
"FVD[q, mu]*FVD[q, nu]"},
{"fcstTdecVanishingGD-ID9",
"FCClearScalarProducts[]; ScalarProduct[p3,p3]=m^2; \
ScalarProduct[p4,p4]=m^2; ScalarProduct[p3,p4]=m^2; \
Tdec[{{q,mu}},{p3,p4}]", "{{}, FVD[q, mu]}"},
{"fcstTdecVanishingGD-ID10",
"Tdec[{{q,mu}},{p3,p4},List\[Rule]False]", "FVD[q, mu]"},
{"fcstTdecVanishingGD-ID11",
"Tdec[{{q,mu}},{p,p},List\[Rule]False]", "FVD[q, mu]"}
});


Tests`LoopIntegrals`fcstTdecVanishingMultiLoop =({
{"fcstTdecVanishingMultiLoop-ID1",
"Tdec[{{q1,mu},{q2,nu},{q2,rho}},{p},List\[Rule]False,UseTIDL\
\[Rule]False]//FCE",
"((FVD[p, rho]*MTD[mu, nu] + FVD[p, nu]*MTD[mu, rho])*SPD[p, \
q2]*(SPD[p, q1]*SPD[p, q2] - SPD[p, p]*SPD[q1, q2]))/((1 - D)*SPD[p, \
p]^2) + (FVD[p, mu]*MTD[nu, rho]*SPD[p, q1]*(SPD[p, q2]^2 - SPD[p, \
p]*SPD[q2, q2]))/((1 - D)*SPD[p, p]^2) - (FVD[p, mu]*FVD[p, \
nu]*FVD[p, rho]*(2*SPD[p, q1]*SPD[p, q2]^2 + D*SPD[p, q1]*SPD[p, \
q2]^2 - 2*SPD[p, p]*SPD[p, q2]*SPD[q1, q2] - SPD[p, p]*SPD[p, \
q1]*SPD[q2, q2]))/((1 - D)*SPD[p, p]^3)"},
{"fcstTdecVanishingMultiLoop-ID2",
"Tdec[{{q1,mu},{q2,nu},{q3,rho}},{p},List\[Rule]False,UseTIDL\
\[Rule]False]//FCE",
"(FVD[p, rho]*MTD[mu, nu]*SPD[p, q3]*(SPD[p, q1]*SPD[p, q2] - \
SPD[p, p]*SPD[q1, q2]))/((1 - D)*SPD[p, p]^2) + (FVD[p, nu]*MTD[mu, \
rho]*SPD[p, q2]*(SPD[p, q1]*SPD[p, q3] - SPD[p, p]*SPD[q1, q3]))/((1 \
- D)*SPD[p, p]^2) + (FVD[p, mu]*MTD[nu, rho]*SPD[p, q1]*(SPD[p, \
q2]*SPD[p, q3] - SPD[p, p]*SPD[q2, q3]))/((1 - D)*SPD[p, p]^2) - \
(FVD[p, mu]*FVD[p, nu]*FVD[p, rho]*(2*SPD[p, q1]*SPD[p, q2]*SPD[p, \
q3] + D*SPD[p, q1]*SPD[p, q2]*SPD[p, q3] - SPD[p, p]*SPD[p, \
q3]*SPD[q1, q2] - SPD[p, p]*SPD[p, q2]*SPD[q1, q3] - SPD[p, p]*SPD[p, \
q1]*SPD[q2, q3]))/((1 - D)*SPD[p, p]^3)"},
{"fcstTdecVanishingMultiLoop-ID3",
"Tdec[{{q1,mu},{q2,nu},{q3,rho},{q3,si}},{p},List\[Rule]False,\
UseTIDL\[Rule]False]//FCE",
"-(((MTD[mu, si]*MTD[nu, rho] +
		MTD[mu, rho]*MTD[nu, si])*(2*SPD[p, q1]*SPD[p, q2]*
		SPD[p, q3]^2 - D*SPD[p, q1]*SPD[p, q2]*SPD[p, q3]^2 -
		SPD[p, p]*SPD[p, q3]^2*SPD[q1, q2] -
		SPD[p, p]*SPD[p, q2]*SPD[p, q3]*SPD[q1, q3] +
		D*SPD[p, p]*SPD[p, q2]*SPD[p, q3]*SPD[q1, q3] -
		SPD[p, p]*SPD[p, q1]*SPD[p, q3]*SPD[q2, q3] +
		D*SPD[p, p]*SPD[p, q1]*SPD[p, q3]*SPD[q2, q3] +
		SPD[p, p]^2*SPD[q1, q3]*SPD[q2, q3] -
		D*SPD[p, p]^2*SPD[q1, q3]*SPD[q2, q3] -
		SPD[p, p]*SPD[p, q1]*SPD[p, q2]*SPD[q3, q3] +
		SPD[p, p]^2*SPD[q1, q2]*SPD[q3, q3]))/((2 - D)*(1 - D^2)*
	SPD[p, p]^2)) + ((FVD[p, nu]*FVD[p, si]*MTD[mu, rho] +
	FVD[p, nu]*FVD[p, rho]*MTD[mu, si])*(4*SPD[p, q1]*SPD[p, q2]*
	SPD[p, q3]^2 - D^2*SPD[p, q1]*SPD[p, q2]*SPD[p, q3]^2 -
	SPD[p, p]*SPD[p, q3]^2*SPD[q1, q2] -
	3*SPD[p, p]*SPD[p, q2]*SPD[p, q3]*SPD[q1, q3] +
	D^2*SPD[p, p]*SPD[p, q2]*SPD[p, q3]*SPD[q1, q3] -
	SPD[p, p]*SPD[p, q1]*SPD[p, q3]*SPD[q2, q3] +
	D*SPD[p, p]*SPD[p, q1]*SPD[p, q3]*SPD[q2, q3] +
	SPD[p, p]^2*SPD[q1, q3]*SPD[q2, q3] -
	D*SPD[p, p]^2*SPD[q1, q3]*SPD[q2, q3] -
	SPD[p, p]*SPD[p, q1]*SPD[p, q2]*SPD[q3, q3] +
	SPD[p, p]^2*SPD[q1, q2]*SPD[q3, q3]))/((2 - D)*(1 - D^2)*
	SPD[p, p]^3) + ((FVD[p, mu]*FVD[p, si]*MTD[nu, rho] +
	FVD[p, mu]*FVD[p, rho]*MTD[nu, si])*(4*SPD[p, q1]*SPD[p, q2]*
	SPD[p, q3]^2 - D^2*SPD[p, q1]*SPD[p, q2]*SPD[p, q3]^2 -
	SPD[p, p]*SPD[p, q3]^2*SPD[q1, q2] -
	SPD[p, p]*SPD[p, q2]*SPD[p, q3]*SPD[q1, q3] +
	D*SPD[p, p]*SPD[p, q2]*SPD[p, q3]*SPD[q1, q3] -
	3*SPD[p, p]*SPD[p, q1]*SPD[p, q3]*SPD[q2, q3] +
	D^2*SPD[p, p]*SPD[p, q1]*SPD[p, q3]*SPD[q2, q3] +
	SPD[p, p]^2*SPD[q1, q3]*SPD[q2, q3] -
	D*SPD[p, p]^2*SPD[q1, q3]*SPD[q2, q3] -
	SPD[p, p]*SPD[p, q1]*SPD[p, q2]*SPD[q3, q3] +
	SPD[p, p]^2*SPD[q1, q2]*SPD[q3, q3]))/((2 - D)*(1 - D^2)*
	SPD[p, p]^3) - (FVD[p, mu]*FVD[p, nu]*FVD[p, rho]*
	FVD[p, si]*(8*SPD[p, q1]*SPD[p, q2]*SPD[p, q3]^2 +
	6*D*SPD[p, q1]*SPD[p, q2]*SPD[p, q3]^2 +
	D^2*SPD[p, q1]*SPD[p, q2]*SPD[p, q3]^2 -
	2*SPD[p, p]*SPD[p, q3]^2*SPD[q1, q2] -
	D*SPD[p, p]*SPD[p, q3]^2*SPD[q1, q2] -
	4*SPD[p, p]*SPD[p, q2]*SPD[p, q3]*SPD[q1, q3] -
	2*D*SPD[p, p]*SPD[p, q2]*SPD[p, q3]*SPD[q1, q3] -
	4*SPD[p, p]*SPD[p, q1]*SPD[p, q3]*SPD[q2, q3] -
	2*D*SPD[p, p]*SPD[p, q1]*SPD[p, q3]*SPD[q2, q3] +
	2*SPD[p, p]^2*SPD[q1, q3]*SPD[q2, q3] -
	2*SPD[p, p]*SPD[p, q1]*SPD[p, q2]*SPD[q3, q3] -
	D*SPD[p, p]*SPD[p, q1]*SPD[p, q2]*SPD[q3, q3] +
	SPD[p, p]^2*SPD[q1, q2]*SPD[q3, q3]))/((1 - D^2)*
	SPD[p, p]^4) - (MTD[mu, nu]*
	MTD[rho,
	si]*(2*SPD[p, q1]*SPD[p, q2]*SPD[p, q3]^2 -
	D*SPD[p, q1]*SPD[p, q2]*SPD[p, q3]^2 +
	D*SPD[p, p]*SPD[p, q3]^2*SPD[q1, q2] -
	2*SPD[p, p]*SPD[p, q2]*SPD[p, q3]*SPD[q1, q3] -
	2*SPD[p, p]*SPD[p, q1]*SPD[p, q3]*SPD[q2, q3] +
	2*SPD[p, p]^2*SPD[q1, q3]*SPD[q2, q3] +
	D*SPD[p, p]*SPD[p, q1]*SPD[p, q2]*SPD[q3, q3] -
	D*SPD[p, p]^2*SPD[q1, q2]*SPD[q3, q3]))/((2 - D)*(1 - D^2)*
	SPD[p, p]^2) + (FVD[p, rho]*FVD[p, si]*
	MTD[mu, nu]*(4*SPD[p, q1]*SPD[p, q2]*SPD[p, q3]^2 -
	D^2*SPD[p, q1]*SPD[p, q2]*SPD[p, q3]^2 -
	2*SPD[p, p]*SPD[p, q3]^2*SPD[q1, q2] +
	D^2*SPD[p, p]*SPD[p, q3]^2*SPD[q1, q2] -
	2*SPD[p, p]*SPD[p, q2]*SPD[p, q3]*SPD[q1, q3] -
	2*SPD[p, p]*SPD[p, q1]*SPD[p, q3]*SPD[q2, q3] +
	2*SPD[p, p]^2*SPD[q1, q3]*SPD[q2, q3] +
	D*SPD[p, p]*SPD[p, q1]*SPD[p, q2]*SPD[q3, q3] -
	D*SPD[p, p]^2*SPD[q1, q2]*SPD[q3, q3]))/((2 - D)*(1 - D^2)*
	SPD[p, p]^3) + (FVD[p, mu]*FVD[p, nu]*
	MTD[rho,
	si]*(4*SPD[p, q1]*SPD[p, q2]*SPD[p, q3]^2 -
	D^2*SPD[p, q1]*SPD[p, q2]*SPD[p, q3]^2 +
	D*SPD[p, p]*SPD[p, q3]^2*SPD[q1, q2] -
	2*SPD[p, p]*SPD[p, q2]*SPD[p, q3]*SPD[q1, q3] -
	2*SPD[p, p]*SPD[p, q1]*SPD[p, q3]*SPD[q2, q3] +
	2*SPD[p, p]^2*SPD[q1, q3]*SPD[q2, q3] -
	2*SPD[p, p]*SPD[p, q1]*SPD[p, q2]*SPD[q3, q3] +
	D^2*SPD[p, p]*SPD[p, q1]*SPD[p, q2]*SPD[q3, q3] -
	D*SPD[p, p]^2*SPD[q1, q2]*SPD[q3, q3]))/((2 - D)*(1 - D^2)*
	SPD[p, p]^3)"}
})

Tests`LoopIntegrals`fcstTdecGrc =
({
{"fcstTdecGrc-ID1",
"Tdec[{{k,i1},{k,i2}},{},List\[Rule]False,UseTIDL\[Rule]False]",
"(MTD[i1, i2]*SPD[k, k])/D"},
{"fcstTdecGrc-ID2",
"Tdec[{{k1,i1},{k2,i2},{k3,i3},{k4,i4}},{},List\[Rule]False,\
UseTIDL\[Rule]False]",
"-((MTD[i1, i4]*MTD[i2, i3]*(SPD[k1, k4]*SPD[k2, k3] + D*SPD[k1, \
k4]*SPD[k2, k3] - SPD[k1, k3]*SPD[k2, k4] - SPD[k1, k2]*SPD[k3, \
k4]))/((1 - D)*D*(2 + D))) + (MTD[i1, i3]*MTD[i2, i4]*(SPD[k1, \
k4]*SPD[k2, k3] - SPD[k1, k3]*SPD[k2, k4] - D*SPD[k1, k3]*SPD[k2, k4] \
+ SPD[k1, k2]*SPD[k3, k4]))/((1 - D)*D*(2 + D)) + (MTD[i1, \
i2]*MTD[i3, i4]*(SPD[k1, k4]*SPD[k2, k3] + SPD[k1, k3]*SPD[k2, k4] - \
SPD[k1, k2]*SPD[k3, k4] - D*SPD[k1, k2]*SPD[k3, k4]))/((1 - D)*D*(2 + \
D))"},
{"fcstTdecGrc-ID3",
"Tdec[{{k1,i1},{k2,i2},{k3,i3},{k4,i4},{k5,i5},{k6,i6}},{},List\
\[Rule]False,UseTIDL\[Rule]False]",
"-((MTD[i1, i6]*MTD[i2, i3]*MTD[i4, i5]*(2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] + D*SPD[k1, k6]*SPD[k2, k5]*SPD[k3, k4] - 2*SPD[k1, \
k5]*SPD[k2, k6]*SPD[k3, k4] + 2*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] + \
D*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] - 2*SPD[k1, k4]*SPD[k2, \
k6]*SPD[k3, k5] - 2*SPD[k1, k5]*SPD[k2, k4]*SPD[k3, k6] - 2*SPD[k1, \
k4]*SPD[k2, k5]*SPD[k3, k6] + 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] - \
3*D*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] - D^2*SPD[k1, k6]*SPD[k2, \
k3]*SPD[k4, k5] + 2*SPD[k1, k3]*SPD[k2, k6]*SPD[k4, k5] + D*SPD[k1, \
k3]*SPD[k2, k6]*SPD[k4, k5] + 2*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] + \
D*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] + 2*SPD[k1, k5]*SPD[k2, \
k3]*SPD[k4, k6] + D*SPD[k1, k5]*SPD[k2, k3]*SPD[k4, k6] - 2*SPD[k1, \
k3]*SPD[k2, k5]*SPD[k4, k6] - 2*SPD[k1, k2]*SPD[k3, k5]*SPD[k4, k6] + \
2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] + D*SPD[k1, k4]*SPD[k2, \
k3]*SPD[k5, k6] - 2*SPD[k1, k3]*SPD[k2, k4]*SPD[k5, k6] - 2*SPD[k1, \
k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - D^2))) - \
(MTD[i1, i4]*MTD[i2, i5]*MTD[i3, i6]*(2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] + D*SPD[k1, k6]*SPD[k2, k5]*SPD[k3, k4] - 2*SPD[k1, \
k5]*SPD[k2, k6]*SPD[k3, k4] - 2*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] + \
2*SPD[k1, k4]*SPD[k2, k6]*SPD[k3, k5] + D*SPD[k1, k4]*SPD[k2, \
k6]*SPD[k3, k5] + 2*SPD[k1, k5]*SPD[k2, k4]*SPD[k3, k6] + D*SPD[k1, \
k5]*SPD[k2, k4]*SPD[k3, k6] + 2*SPD[k1, k4]*SPD[k2, k5]*SPD[k3, k6] - \
3*D*SPD[k1, k4]*SPD[k2, k5]*SPD[k3, k6] - D^2*SPD[k1, k4]*SPD[k2, \
k5]*SPD[k3, k6] - 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] - 2*SPD[k1, \
k3]*SPD[k2, k6]*SPD[k4, k5] + 2*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] + \
D*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] - 2*SPD[k1, k5]*SPD[k2, \
k3]*SPD[k4, k6] + 2*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] + D*SPD[k1, \
k3]*SPD[k2, k5]*SPD[k4, k6] - 2*SPD[k1, k2]*SPD[k3, k5]*SPD[k4, k6] + \
2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] + D*SPD[k1, k4]*SPD[k2, \
k3]*SPD[k5, k6] - 2*SPD[k1, k3]*SPD[k2, k4]*SPD[k5, k6] - 2*SPD[k1, \
k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - D^2)) - \
(MTD[i1, i5]*MTD[i2, i4]*MTD[i3, i6]*(-2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] + 2*SPD[k1, k5]*SPD[k2, k6]*SPD[k3, k4] + D*SPD[k1, \
k5]*SPD[k2, k6]*SPD[k3, k4] + 2*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] + \
D*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] - 2*SPD[k1, k4]*SPD[k2, \
k6]*SPD[k3, k5] + 2*SPD[k1, k5]*SPD[k2, k4]*SPD[k3, k6] - 3*D*SPD[k1, \
k5]*SPD[k2, k4]*SPD[k3, k6] - D^2*SPD[k1, k5]*SPD[k2, k4]*SPD[k3, k6] \
+ 2*SPD[k1, k4]*SPD[k2, k5]*SPD[k3, k6] + D*SPD[k1, k4]*SPD[k2, \
k5]*SPD[k3, k6] - 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] - 2*SPD[k1, \
k3]*SPD[k2, k6]*SPD[k4, k5] + 2*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] + \
D*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] + 2*SPD[k1, k5]*SPD[k2, \
k3]*SPD[k4, k6] + D*SPD[k1, k5]*SPD[k2, k3]*SPD[k4, k6] - 2*SPD[k1, \
k3]*SPD[k2, k5]*SPD[k4, k6] - 2*SPD[k1, k2]*SPD[k3, k5]*SPD[k4, k6] - \
2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] + 2*SPD[k1, k3]*SPD[k2, \
k4]*SPD[k5, k6] + D*SPD[k1, k3]*SPD[k2, k4]*SPD[k5, k6] - 2*SPD[k1, \
k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - D^2)) - \
(MTD[i1, i3]*MTD[i2, i6]*MTD[i4, i5]*(-2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] + 2*SPD[k1, k5]*SPD[k2, k6]*SPD[k3, k4] + D*SPD[k1, \
k5]*SPD[k2, k6]*SPD[k3, k4] - 2*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] + \
2*SPD[k1, k4]*SPD[k2, k6]*SPD[k3, k5] + D*SPD[k1, k4]*SPD[k2, \
k6]*SPD[k3, k5] - 2*SPD[k1, k5]*SPD[k2, k4]*SPD[k3, k6] - 2*SPD[k1, \
k4]*SPD[k2, k5]*SPD[k3, k6] + 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] + \
D*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] + 2*SPD[k1, k3]*SPD[k2, \
k6]*SPD[k4, k5] - 3*D*SPD[k1, k3]*SPD[k2, k6]*SPD[k4, k5] - \
D^2*SPD[k1, k3]*SPD[k2, k6]*SPD[k4, k5] + 2*SPD[k1, k2]*SPD[k3, \
k6]*SPD[k4, k5] + D*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] - 2*SPD[k1, \
k5]*SPD[k2, k3]*SPD[k4, k6] + 2*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] + \
D*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] - 2*SPD[k1, k2]*SPD[k3, \
k5]*SPD[k4, k6] - 2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] + 2*SPD[k1, \
k3]*SPD[k2, k4]*SPD[k5, k6] + D*SPD[k1, k3]*SPD[k2, k4]*SPD[k5, k6] - \
2*SPD[k1, k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - D^2)) \
+ (MTD[i1, i4]*MTD[i2, i6]*MTD[i3, i5]*(2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] - 2*SPD[k1, k5]*SPD[k2, k6]*SPD[k3, k4] - D*SPD[k1, \
k5]*SPD[k2, k6]*SPD[k3, k4] - 2*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] - \
D*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] - 2*SPD[k1, k4]*SPD[k2, \
k6]*SPD[k3, k5] + 3*D*SPD[k1, k4]*SPD[k2, k6]*SPD[k3, k5] + \
D^2*SPD[k1, k4]*SPD[k2, k6]*SPD[k3, k5] + 2*SPD[k1, k5]*SPD[k2, \
k4]*SPD[k3, k6] - 2*SPD[k1, k4]*SPD[k2, k5]*SPD[k3, k6] - D*SPD[k1, \
k4]*SPD[k2, k5]*SPD[k3, k6] + 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] - \
2*SPD[k1, k3]*SPD[k2, k6]*SPD[k4, k5] - D*SPD[k1, k3]*SPD[k2, \
k6]*SPD[k4, k5] + 2*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] + 2*SPD[k1, \
k5]*SPD[k2, k3]*SPD[k4, k6] + 2*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] - \
2*SPD[k1, k2]*SPD[k3, k5]*SPD[k4, k6] - D*SPD[k1, k2]*SPD[k3, \
k5]*SPD[k4, k6] - 2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] - D*SPD[k1, \
k4]*SPD[k2, k3]*SPD[k5, k6] + 2*SPD[k1, k3]*SPD[k2, k4]*SPD[k5, k6] + \
2*SPD[k1, k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - D^2)) \
+ (MTD[i1, i5]*MTD[i2, i3]*MTD[i4, i6]*(2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] - 2*SPD[k1, k5]*SPD[k2, k6]*SPD[k3, k4] - D*SPD[k1, \
k5]*SPD[k2, k6]*SPD[k3, k4] + 2*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] + \
2*SPD[k1, k4]*SPD[k2, k6]*SPD[k3, k5] - 2*SPD[k1, k5]*SPD[k2, \
k4]*SPD[k3, k6] - D*SPD[k1, k5]*SPD[k2, k4]*SPD[k3, k6] + 2*SPD[k1, \
k4]*SPD[k2, k5]*SPD[k3, k6] - 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] - \
D*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] + 2*SPD[k1, k3]*SPD[k2, \
k6]*SPD[k4, k5] + 2*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] - 2*SPD[k1, \
k5]*SPD[k2, k3]*SPD[k4, k6] + 3*D*SPD[k1, k5]*SPD[k2, k3]*SPD[k4, k6] \
+ D^2*SPD[k1, k5]*SPD[k2, k3]*SPD[k4, k6] - 2*SPD[k1, k3]*SPD[k2, \
k5]*SPD[k4, k6] - D*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] - 2*SPD[k1, \
k2]*SPD[k3, k5]*SPD[k4, k6] - D*SPD[k1, k2]*SPD[k3, k5]*SPD[k4, k6] - \
2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] - D*SPD[k1, k4]*SPD[k2, \
k3]*SPD[k5, k6] + 2*SPD[k1, k3]*SPD[k2, k4]*SPD[k5, k6] + 2*SPD[k1, \
k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - D^2)) + \
(MTD[i1, i6]*MTD[i2, i4]*MTD[i3, i5]*(-2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] - D*SPD[k1, k6]*SPD[k2, k5]*SPD[k3, k4] + 2*SPD[k1, \
k5]*SPD[k2, k6]*SPD[k3, k4] - 2*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] + \
3*D*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] + D^2*SPD[k1, k6]*SPD[k2, \
k4]*SPD[k3, k5] - 2*SPD[k1, k4]*SPD[k2, k6]*SPD[k3, k5] - D*SPD[k1, \
k4]*SPD[k2, k6]*SPD[k3, k5] - 2*SPD[k1, k5]*SPD[k2, k4]*SPD[k3, k6] - \
D*SPD[k1, k5]*SPD[k2, k4]*SPD[k3, k6] + 2*SPD[k1, k4]*SPD[k2, \
k5]*SPD[k3, k6] - 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] - D*SPD[k1, \
k6]*SPD[k2, k3]*SPD[k4, k5] + 2*SPD[k1, k3]*SPD[k2, k6]*SPD[k4, k5] + \
2*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] + 2*SPD[k1, k5]*SPD[k2, \
k3]*SPD[k4, k6] + 2*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] - 2*SPD[k1, \
k2]*SPD[k3, k5]*SPD[k4, k6] - D*SPD[k1, k2]*SPD[k3, k5]*SPD[k4, k6] + \
2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] - 2*SPD[k1, k3]*SPD[k2, \
k4]*SPD[k5, k6] - D*SPD[k1, k3]*SPD[k2, k4]*SPD[k5, k6] + 2*SPD[k1, \
k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - D^2)) + \
(MTD[i1, i3]*MTD[i2, i5]*MTD[i4, i6]*(-2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] - D*SPD[k1, k6]*SPD[k2, k5]*SPD[k3, k4] + 2*SPD[k1, \
k5]*SPD[k2, k6]*SPD[k3, k4] + 2*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] + \
2*SPD[k1, k4]*SPD[k2, k6]*SPD[k3, k5] + 2*SPD[k1, k5]*SPD[k2, \
k4]*SPD[k3, k6] - 2*SPD[k1, k4]*SPD[k2, k5]*SPD[k3, k6] - D*SPD[k1, \
k4]*SPD[k2, k5]*SPD[k3, k6] + 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] - \
2*SPD[k1, k3]*SPD[k2, k6]*SPD[k4, k5] - D*SPD[k1, k3]*SPD[k2, \
k6]*SPD[k4, k5] + 2*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] - 2*SPD[k1, \
k5]*SPD[k2, k3]*SPD[k4, k6] - D*SPD[k1, k5]*SPD[k2, k3]*SPD[k4, k6] - \
2*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] + 3*D*SPD[k1, k3]*SPD[k2, \
k5]*SPD[k4, k6] + D^2*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] - 2*SPD[k1, \
k2]*SPD[k3, k5]*SPD[k4, k6] - D*SPD[k1, k2]*SPD[k3, k5]*SPD[k4, k6] + \
2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] - 2*SPD[k1, k3]*SPD[k2, \
k4]*SPD[k5, k6] - D*SPD[k1, k3]*SPD[k2, k4]*SPD[k5, k6] + 2*SPD[k1, \
k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - D^2)) + \
(MTD[i1, i5]*MTD[i2, i6]*MTD[i3, i4]*(-2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] - D*SPD[k1, k6]*SPD[k2, k5]*SPD[k3, k4] - 2*SPD[k1, \
k5]*SPD[k2, k6]*SPD[k3, k4] + 3*D*SPD[k1, k5]*SPD[k2, k6]*SPD[k3, k4] \
+ D^2*SPD[k1, k5]*SPD[k2, k6]*SPD[k3, k4] + 2*SPD[k1, k6]*SPD[k2, \
k4]*SPD[k3, k5] - 2*SPD[k1, k4]*SPD[k2, k6]*SPD[k3, k5] - D*SPD[k1, \
k4]*SPD[k2, k6]*SPD[k3, k5] - 2*SPD[k1, k5]*SPD[k2, k4]*SPD[k3, k6] - \
D*SPD[k1, k5]*SPD[k2, k4]*SPD[k3, k6] + 2*SPD[k1, k4]*SPD[k2, \
k5]*SPD[k3, k6] + 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] - 2*SPD[k1, \
k3]*SPD[k2, k6]*SPD[k4, k5] - D*SPD[k1, k3]*SPD[k2, k6]*SPD[k4, k5] + \
2*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] - 2*SPD[k1, k5]*SPD[k2, \
k3]*SPD[k4, k6] - D*SPD[k1, k5]*SPD[k2, k3]*SPD[k4, k6] + 2*SPD[k1, \
k3]*SPD[k2, k5]*SPD[k4, k6] + 2*SPD[k1, k2]*SPD[k3, k5]*SPD[k4, k6] + \
2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] + 2*SPD[k1, k3]*SPD[k2, \
k4]*SPD[k5, k6] - 2*SPD[k1, k2]*SPD[k3, k4]*SPD[k5, k6] - D*SPD[k1, \
k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - D^2)) + \
(MTD[i1, i6]*MTD[i2, i5]*MTD[i3, i4]*(-2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] + 3*D*SPD[k1, k6]*SPD[k2, k5]*SPD[k3, k4] + \
D^2*SPD[k1, k6]*SPD[k2, k5]*SPD[k3, k4] - 2*SPD[k1, k5]*SPD[k2, \
k6]*SPD[k3, k4] - D*SPD[k1, k5]*SPD[k2, k6]*SPD[k3, k4] - 2*SPD[k1, \
k6]*SPD[k2, k4]*SPD[k3, k5] - D*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] + \
2*SPD[k1, k4]*SPD[k2, k6]*SPD[k3, k5] + 2*SPD[k1, k5]*SPD[k2, \
k4]*SPD[k3, k6] - 2*SPD[k1, k4]*SPD[k2, k5]*SPD[k3, k6] - D*SPD[k1, \
k4]*SPD[k2, k5]*SPD[k3, k6] - 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] - \
D*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] + 2*SPD[k1, k3]*SPD[k2, \
k6]*SPD[k4, k5] + 2*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] + 2*SPD[k1, \
k5]*SPD[k2, k3]*SPD[k4, k6] - 2*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] - \
D*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] + 2*SPD[k1, k2]*SPD[k3, \
k5]*SPD[k4, k6] + 2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] + 2*SPD[k1, \
k3]*SPD[k2, k4]*SPD[k5, k6] - 2*SPD[k1, k2]*SPD[k3, k4]*SPD[k5, k6] - \
D*SPD[k1, k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - D^2)) \
+ (MTD[i1, i4]*MTD[i2, i3]*MTD[i5, i6]*(2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] + 2*SPD[k1, k5]*SPD[k2, k6]*SPD[k3, k4] + 2*SPD[k1, \
k6]*SPD[k2, k4]*SPD[k3, k5] - 2*SPD[k1, k4]*SPD[k2, k6]*SPD[k3, k5] - \
D*SPD[k1, k4]*SPD[k2, k6]*SPD[k3, k5] + 2*SPD[k1, k5]*SPD[k2, \
k4]*SPD[k3, k6] - 2*SPD[k1, k4]*SPD[k2, k5]*SPD[k3, k6] - D*SPD[k1, \
k4]*SPD[k2, k5]*SPD[k3, k6] - 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] - \
D*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] + 2*SPD[k1, k3]*SPD[k2, \
k6]*SPD[k4, k5] + 2*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] - 2*SPD[k1, \
k5]*SPD[k2, k3]*SPD[k4, k6] - D*SPD[k1, k5]*SPD[k2, k3]*SPD[k4, k6] + \
2*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] + 2*SPD[k1, k2]*SPD[k3, \
k5]*SPD[k4, k6] - 2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] + 3*D*SPD[k1, \
k4]*SPD[k2, k3]*SPD[k5, k6] + D^2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] \
- 2*SPD[k1, k3]*SPD[k2, k4]*SPD[k5, k6] - D*SPD[k1, k3]*SPD[k2, \
k4]*SPD[k5, k6] - 2*SPD[k1, k2]*SPD[k3, k4]*SPD[k5, k6] - D*SPD[k1, \
k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - D^2)) + \
(MTD[i1, i3]*MTD[i2, i4]*MTD[i5, i6]*(2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] + 2*SPD[k1, k5]*SPD[k2, k6]*SPD[k3, k4] - 2*SPD[k1, \
k6]*SPD[k2, k4]*SPD[k3, k5] - D*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] + \
2*SPD[k1, k4]*SPD[k2, k6]*SPD[k3, k5] - 2*SPD[k1, k5]*SPD[k2, \
k4]*SPD[k3, k6] - D*SPD[k1, k5]*SPD[k2, k4]*SPD[k3, k6] + 2*SPD[k1, \
k4]*SPD[k2, k5]*SPD[k3, k6] + 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] - \
2*SPD[k1, k3]*SPD[k2, k6]*SPD[k4, k5] - D*SPD[k1, k3]*SPD[k2, \
k6]*SPD[k4, k5] + 2*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] + 2*SPD[k1, \
k5]*SPD[k2, k3]*SPD[k4, k6] - 2*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] - \
D*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] + 2*SPD[k1, k2]*SPD[k3, \
k5]*SPD[k4, k6] - 2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] - D*SPD[k1, \
k4]*SPD[k2, k3]*SPD[k5, k6] - 2*SPD[k1, k3]*SPD[k2, k4]*SPD[k5, k6] + \
3*D*SPD[k1, k3]*SPD[k2, k4]*SPD[k5, k6] + D^2*SPD[k1, k3]*SPD[k2, \
k4]*SPD[k5, k6] - 2*SPD[k1, k2]*SPD[k3, k4]*SPD[k5, k6] - D*SPD[k1, \
k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - D^2)) - \
(MTD[i1, i2]*MTD[i3, i6]*MTD[i4, i5]*(-2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] - 2*SPD[k1, k5]*SPD[k2, k6]*SPD[k3, k4] - 2*SPD[k1, \
k6]*SPD[k2, k4]*SPD[k3, k5] - 2*SPD[k1, k4]*SPD[k2, k6]*SPD[k3, k5] + \
2*SPD[k1, k5]*SPD[k2, k4]*SPD[k3, k6] + D*SPD[k1, k5]*SPD[k2, \
k4]*SPD[k3, k6] + 2*SPD[k1, k4]*SPD[k2, k5]*SPD[k3, k6] + D*SPD[k1, \
k4]*SPD[k2, k5]*SPD[k3, k6] + 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] + \
D*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] + 2*SPD[k1, k3]*SPD[k2, \
k6]*SPD[k4, k5] + D*SPD[k1, k3]*SPD[k2, k6]*SPD[k4, k5] + 2*SPD[k1, \
k2]*SPD[k3, k6]*SPD[k4, k5] - 3*D*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] \
- D^2*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] - 2*SPD[k1, k5]*SPD[k2, \
k3]*SPD[k4, k6] - 2*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] + 2*SPD[k1, \
k2]*SPD[k3, k5]*SPD[k4, k6] + D*SPD[k1, k2]*SPD[k3, k5]*SPD[k4, k6] - \
2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] - 2*SPD[k1, k3]*SPD[k2, \
k4]*SPD[k5, k6] + 2*SPD[k1, k2]*SPD[k3, k4]*SPD[k5, k6] + D*SPD[k1, \
k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - D^2)) - \
(MTD[i1, i2]*MTD[i3, i5]*MTD[i4, i6]*(-2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] - 2*SPD[k1, k5]*SPD[k2, k6]*SPD[k3, k4] + 2*SPD[k1, \
k6]*SPD[k2, k4]*SPD[k3, k5] + D*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] + \
2*SPD[k1, k4]*SPD[k2, k6]*SPD[k3, k5] + D*SPD[k1, k4]*SPD[k2, \
k6]*SPD[k3, k5] - 2*SPD[k1, k5]*SPD[k2, k4]*SPD[k3, k6] - 2*SPD[k1, \
k4]*SPD[k2, k5]*SPD[k3, k6] - 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] - \
2*SPD[k1, k3]*SPD[k2, k6]*SPD[k4, k5] + 2*SPD[k1, k2]*SPD[k3, \
k6]*SPD[k4, k5] + D*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] + 2*SPD[k1, \
k5]*SPD[k2, k3]*SPD[k4, k6] + D*SPD[k1, k5]*SPD[k2, k3]*SPD[k4, k6] + \
2*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] + D*SPD[k1, k3]*SPD[k2, \
k5]*SPD[k4, k6] + 2*SPD[k1, k2]*SPD[k3, k5]*SPD[k4, k6] - 3*D*SPD[k1, \
k2]*SPD[k3, k5]*SPD[k4, k6] - D^2*SPD[k1, k2]*SPD[k3, k5]*SPD[k4, k6] \
- 2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] - 2*SPD[k1, k3]*SPD[k2, \
k4]*SPD[k5, k6] + 2*SPD[k1, k2]*SPD[k3, k4]*SPD[k5, k6] + D*SPD[k1, \
k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - D^2)) - \
(MTD[i1, i2]*MTD[i3, i4]*MTD[i5, i6]*(2*SPD[k1, k6]*SPD[k2, \
k5]*SPD[k3, k4] + D*SPD[k1, k6]*SPD[k2, k5]*SPD[k3, k4] + 2*SPD[k1, \
k5]*SPD[k2, k6]*SPD[k3, k4] + D*SPD[k1, k5]*SPD[k2, k6]*SPD[k3, k4] - \
2*SPD[k1, k6]*SPD[k2, k4]*SPD[k3, k5] - 2*SPD[k1, k4]*SPD[k2, \
k6]*SPD[k3, k5] - 2*SPD[k1, k5]*SPD[k2, k4]*SPD[k3, k6] - 2*SPD[k1, \
k4]*SPD[k2, k5]*SPD[k3, k6] - 2*SPD[k1, k6]*SPD[k2, k3]*SPD[k4, k5] - \
2*SPD[k1, k3]*SPD[k2, k6]*SPD[k4, k5] + 2*SPD[k1, k2]*SPD[k3, \
k6]*SPD[k4, k5] + D*SPD[k1, k2]*SPD[k3, k6]*SPD[k4, k5] - 2*SPD[k1, \
k5]*SPD[k2, k3]*SPD[k4, k6] - 2*SPD[k1, k3]*SPD[k2, k5]*SPD[k4, k6] + \
2*SPD[k1, k2]*SPD[k3, k5]*SPD[k4, k6] + D*SPD[k1, k2]*SPD[k3, \
k5]*SPD[k4, k6] + 2*SPD[k1, k4]*SPD[k2, k3]*SPD[k5, k6] + D*SPD[k1, \
k4]*SPD[k2, k3]*SPD[k5, k6] + 2*SPD[k1, k3]*SPD[k2, k4]*SPD[k5, k6] + \
D*SPD[k1, k3]*SPD[k2, k4]*SPD[k5, k6] + 2*SPD[k1, k2]*SPD[k3, \
k4]*SPD[k5, k6] - 3*D*SPD[k1, k2]*SPD[k3, k4]*SPD[k5, k6] - \
D^2*SPD[k1, k2]*SPD[k3, k4]*SPD[k5, k6]))/((1 - D)*D*(4 + D)*(4 - \
D^2))"},
{"fcstTdecGrc-ID4",
"Tdec[{{l, mu}, {l, nu}}, {p1, p2},
FinalSubstitutions -> {SPD[p1] -> 0, SPD[p2] -> 0}, FCE -> True]",
"{{X1 -> D, X2 -> SPD[l, l], X3 -> SPD[l, p1], X4 -> SPD[l, p2],
X5 -> SPD[p1, p2]}, ((2*X4^2*X5^2 - X1*X4^2*X5^2)*FVD[p1,
mu]*FVD[p1, nu])/((2 - X1)*X5^4) -
((X1*X3*X4*X5^2 - X2*X5^3)*FVD[p1, nu]*FVD[p2, mu])/((2 - X1)*X5^4) -
((X1*X3*X4*X5^2 - X2*X5^3)*FVD[p1, mu]*FVD[p2, nu])/((2 - X1)*X5^4) +
((2*X3^2*X5^2 - X1*X3^2*X5^2)*FVD[p2, mu]*FVD[p2, nu])/((2 - X1)*X5^4) -
((-2*X3*X4*X5 + X2*X5^2)*MTD[mu, nu])/((2 - X1)*X5^2)}"}
});





