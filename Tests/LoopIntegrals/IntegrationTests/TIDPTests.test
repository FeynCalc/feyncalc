Tests`LoopIntegrals`fcitTIDPTests =
({
{"fcitTIDPTests-ID1","
FCSetDiracGammaScheme[\"Larin\"]; \n exp =
Spinor[-Momentum[pv1, D], 0, 1].GAD[i1].GA[5].Spinor[
	Momentum[pv2, D], 0, 1] Spinor[Momentum[pv4, D], 0, 1].GAD[
	i2].GSD[q].GAD[i1].GA[5].GSD[q].GAD[i2].Spinor[-Momentum[pv3, D],
	0, 1] FAD[q, pv3 + q, -(pv1 + pv2 - pv3) + q] Spinor[Momentum[pv2, D], 0,
	1].GAD[n2].Spinor[-Momentum[pv1, D], 0, 1] Spinor[-Momentum[pv3, D], 0, 1].GAD[n2].Spinor[Momentum[pv4, D], 0, 1]; \n
Factor2[TID[((FermionSpinSum[exp]//DiracSimplify) /. pv4 -> pv1 + pv2 - pv3), q, ToPaVe -> True] //FeynAmpDenominatorExplicit // Simplify] -
Factor2[((((FermionSpinSum[TID[exp, q, ToPaVe -> True]]//DiracSimplify) /. pv4 -> pv1 + pv2 - pv3) // Contract)) // Simplify]", "0"},
{"fcitTIDPTests-ID2","FCSetDiracGammaScheme[\"BMHV\"]; \n
exp = Spinor[-Momentum[pv1, D], 0, 1].GAD[i1].GA[5].Spinor[Momentum[pv2, D], 0, 1] Spinor[Momentum[pv4, D], 0,
1].GAD[i2].GSD[q].GAD[i1].GA[5].GSD[q].GAD[i2].Spinor[-Momentum[pv3, D],0, 1] FAD[q,pv3 + q,
-(pv1 + pv2 - pv3) + q] Spinor[Momentum[pv2, D], 0,1].GAD[n2].Spinor[-Momentum[pv1, D], 0,1] Spinor[-Momentum[pv3, D],
0, 1].GAD[n2].Spinor[Momentum[pv4, D], 0, 1]; Factor2[TID[((FermionSpinSum[exp]//DiracSimplify) /.
pv4 -> pv1 + pv2 - pv3), q, ToPaVe -> True] // FeynAmpDenominatorExplicit // Simplify] - Factor2[((((FermionSpinSum[TID[exp, q, ToPaVe -> True]]//
		DiracSimplify) /. pv4 -> pv1 + pv2 - pv3) // Contract) /. Momentum[(a : pv1 | pv2 | pv3 | pv4), D] :> Momentum[a] /.
Momentum[(a : pv1 | pv2 | pv3 | pv4), D - 4] :> 0) // Simplify]", "0"},


{"fcitTIDPTests-ID3","
FCSetDiracGammaScheme[\"NDR\"]; \n OneLoop[q,(CA*gc^2*SD[b, c]*(-(FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, p]^3) + FAD[q, q, q, -p + q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*
	SPD[p, p]^4 + 3*FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*SPD[p, p]^2*SPD[p, q] + 3*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*
	SPD[p, p]^2*SPD[p, q] - 2*FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, p]^2*SPD[p, q] -
FAD[q, q, q, -p + q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*SPD[p, p]^3*SPD[p, q] - FAD[q, q, q, -p + q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*
	SPD[p, p]^3*SPD[p, q] - 6*FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*SPD[p, p]*SPD[p, q]^2 -
6*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*SPD[p, p]*SPD[p, q]^2 + 8*FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, p]*
	SPD[p, q]^2 + FAD[q, q, q, -p + q, -p + q, -p + q]*FVD[p, mu]*FVD[p, nu]*SPD[p, p]^2*SPD[p, q]^2 -
4*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, p]^2*SPD[p, q]^2 + 4*FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*SPD[p, q]^3 +
4*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*SPD[p, q]^3 - 8*FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, q]^3 +
8*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, p]*SPD[p, q]^3 - 4*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, q]^4 -
FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[p, nu]*SPD[p, p]^2*SPD[q, q] - FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*SPD[p, p]^2*SPD[q, q] -
FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*SPD[p, p]^2*SPD[q, q] + FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, p]^2*SPD[q, q] +
4*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[p, nu]*SPD[p, p]*SPD[p, q]*SPD[q, q] + 5*FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*SPD[p, p]*
	SPD[p, q]*SPD[q, q] + 5*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*SPD[p, p]*SPD[p, q]*SPD[q, q] -
8*FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, p]*SPD[p, q]*SPD[q, q] + 4*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, p]^2*SPD[p, q]*
	SPD[q, q] - 4*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[p, nu]*SPD[p, q]^2*SPD[q, q] - 4*FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*
	SPD[p, q]^2*SPD[q, q] - 4*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*SPD[p, q]^2*SPD[q, q] +
12*FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, q]^2*SPD[q, q] - 16*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, p]*SPD[p, q]^2*
	SPD[q, q] + 12*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, q]^3*SPD[q, q] - 2*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[p, nu]*SPD[p, p]*
	SPD[q, q]^2 - FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*SPD[p, p]*SPD[q, q]^2 - FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*SPD[p, p]*
	SPD[q, q]^2 + 2*FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, p]*SPD[q, q]^2 - FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, p]^2*
	SPD[q, q]^2 + 4*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[p, nu]*SPD[p, q]*SPD[q, q]^2 + FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*
	SPD[p, q]*SPD[q, q]^2 + FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*SPD[p, q]*SPD[q, q]^2 -
6*FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, q]*SPD[q, q]^2 + 10*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, p]*SPD[p, q]*
	SPD[q, q]^2 - 13*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, q]^2*SPD[q, q]^2 - FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[p, nu]*SPD[q, q]^3 +
FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[q, q]^3 - 2*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, p]*SPD[q, q]^3 +
6*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, q]*SPD[q, q]^3 - FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[q, q]^4 +
FAD[q, q, -p + q, -p + q, -p + q]*(-(MTD[mu, nu]*(SPD[p, p] - SPD[q, q])^2*(SPD[p, p] - SPD[p, q] + SPD[q, q])^2) +
	FVD[q, mu]*(-(FVD[q, nu]*(SPD[p, p]^3 + SPD[p, p]*SPD[q, q]^2 - SPD[q, q]^3)) +
	FVD[p, nu]*(SPD[p, p]^2*SPD[p, q] + (SPD[p, q] - SPD[q, q])*SPD[q, q]^2 + SPD[p, p]*SPD[q, q]*(-SPD[p, q] + SPD[q, q]))) +
	FVD[p, mu]*(FVD[p, nu]*SPD[p, p]*(SPD[p, p]^2 - 2*SPD[p, p]*SPD[p, q] + 2*(SPD[p, q] - SPD[q, q])*SPD[q, q]) +
	FVD[q, nu]*(SPD[p, p]^2*SPD[p, q] + (SPD[p, q] - SPD[q, q])*SPD[q, q]^2 + SPD[p, p]*SPD[q, q]*(-SPD[p, q] + SPD[q, q])))) +
FAD[q, q, -p + q, -p + q]*(MTD[mu, nu]*(5*SPD[p, p]^3 + SPD[p, p]^2*(-12*SPD[p, q] + 5*SPD[q, q]) +
	SPD[p, p]*(16*SPD[p, q]^2 - 12*SPD[p, q]*SPD[q, q] + 3*SPD[q, q]^2) + 2*(-4*SPD[p, q]^3 + 6*SPD[p, q]^2*SPD[q, q] - 3*SPD[p, q]*SPD[q, q]^2 +
		SPD[q, q]^3)) + FVD[p, mu]*(FVD[p, nu]*((-6 + D)*SPD[p, p]^2 - 2*(-3 + D)*SPD[p, p]*(2*SPD[p, q] - SPD[q, q]) +
		(-2 + D)*(-2*SPD[p, q] + SPD[q, q])^2) + FVD[q, nu]*(-((-3 + D)*SPD[p, p]^2) + SPD[p, p]*(2*(-5 + 2*D)*SPD[p, q] + (5 - 3*D)*SPD[q, q]) -
		(2*SPD[p, q] - SPD[q, q])*(2*(-2 + D)*SPD[p, q] + (3 - 2*D)*SPD[q, q]))) +
	FVD[q, mu]*(FVD[p, nu]*(-((-3 + D)*SPD[p, p]^2) + SPD[p, p]*(2*(-5 + 2*D)*SPD[p, q] + (5 - 3*D)*SPD[q, q]) -
		(2*SPD[p, q] - SPD[q, q])*(2*(-2 + D)*SPD[p, q] + (3 - 2*D)*SPD[q, q])) + FVD[q, nu]*((-2 + D)*SPD[p, p]^2 + 4*(-2 + D)*SPD[p, q]^2 +
		4*(3 - 2*D)*SPD[p, q]*SPD[q, q] + 2*(-3 + 2*D)*SPD[q, q]^2 + SPD[p, p]*(-4*(-2 + D)*SPD[p, q] + 2*(-3 + 2*D)*SPD[q, q]))))))/2]//FCE",
"I*Pi^2*(-(CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[1, {SP[p, p], SP[p, p], 0}, {0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]) +
(CA*gc^2*D0[0, 0, SP[p, p], SP[p, p], 0, SP[p, p], 0, 0, 0, 0]*FV[p, mu]*FV[p, nu]*SD[b, c]*SP[p, p]^2)/4 - 2*CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[1, {0, SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0}, PaVeAutoOrder -> True,
	PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^2 - 4*CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[1, {0, SP[p, p], 0, 0, SP[p, p], SP[p, p], SP[p, p], 0, SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*
SP[p, p]^3 - CA*gc^2*MT[mu, nu]*PaVe[0, 0, {0, 0, SP[p, p], 0, SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^3 -
2*CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[1, 1, {0, SP[p, p], 0, 0, SP[p, p], SP[p, p], SP[p, p], 0, SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^3 -
2*CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[1, 2, {SP[p, p], 0, SP[p, p], 0, 0, SP[p, p], SP[p, p], SP[p, p], 0, SP[p, p]}, {0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^3 +
(CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[0, {0, 0, SP[p, p], 0, 0, SP[p, p], 0, SP[p, p], SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^4)/8 +
(CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[3, {0, 0, SP[p, p], 0, 0, SP[p, p], 0, SP[p, p], SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^4)/2 +
(CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[4, {0, 0, SP[p, p], 0, 0, SP[p, p], 0, SP[p, p], SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^4)/2 +
(CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[5, {0, 0, SP[p, p], 0, 0, SP[p, p], 0, SP[p, p], SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^4)/2 +
(CA*gc^2*MT[mu, nu]*PaVe[0, 0, {0, 0, SP[p, p], 0, 0, SP[p, p], 0, SP[p, p], SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^4)/2 +
(CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[3, 3, {0, 0, SP[p, p], 0, 0, SP[p, p], 0, SP[p, p], SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^4)/2 +
CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[3, 4, {0, 0, SP[p, p], 0, 0, SP[p, p], 0, SP[p, p], SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^4 +
CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[3, 5, {0, 0, SP[p, p], 0, 0, SP[p, p], 0, SP[p, p], SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^4 +
(CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[4, 4, {0, 0, SP[p, p], 0, 0, SP[p, p], 0, SP[p, p], SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^4)/2 +
CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[4, 5, {0, 0, SP[p, p], 0, 0, SP[p, p], 0, SP[p, p], SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^4 +
(CA*gc^2*FV[p, mu]*FV[p, nu]*PaVe[5, 5, {0, 0, SP[p, p], 0, 0, SP[p, p], 0, SP[p, p], SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^4)/2 -
(CA*gc^2*C0[0, SP[p, p], SP[p, p], 0, 0, 0]*SD[b, c]*SP[p, p]*(8*FV[p, mu]*FV[p, nu] - 5*MT[mu, nu]*SP[p, p]))/4 + (CA*gc^2*B0[SP[p, p], 0, 0]*SD[b, c]*(2*FV[p, mu]*FV[p, nu] - D*FV[p, mu]*FV[p, nu] - 3*MT[mu, nu]*SP[p, p]))/4 -
(CA*gc^2*D0[0, SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], 0, 0, 0, 0]*SD[b, c]*SP[p, p]^2*(5*FV[p, mu]*FV[p, nu] - 2*MT[mu, nu]*SP[p, p]))/4 -
(CA*gc^2*PaVe[0, {0, 0, SP[p, p], 0, SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^3*(2*FV[p, mu]*FV[p, nu] + MT[mu, nu]*SP[p, p]))/4)"},

{"fcitTIDPTests-ID4","OneLoop[q,(CA*gc^2*SD[b, c]*(-(FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, p]^3) + FAD[q, q, q, -p + q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*
	SPD[p, p]^4 + 3*FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*SPD[p, p]^2*SPD[p, q] + 3*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*
	SPD[p, p]^2*SPD[p, q] - 2*FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, p]^2*SPD[p, q] -
FAD[q, q, q, -p + q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*SPD[p, p]^3*SPD[p, q] - FAD[q, q, q, -p + q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*
	SPD[p, p]^3*SPD[p, q] - 6*FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*SPD[p, p]*SPD[p, q]^2 -
6*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*SPD[p, p]*SPD[p, q]^2 + 8*FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, p]*
	SPD[p, q]^2 + FAD[q, q, q, -p + q, -p + q, -p + q]*FVD[p, mu]*FVD[p, nu]*SPD[p, p]^2*SPD[p, q]^2 -
4*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, p]^2*SPD[p, q]^2 + 4*FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*SPD[p, q]^3 +
4*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*SPD[p, q]^3 - 8*FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, q]^3 +
8*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, p]*SPD[p, q]^3 - 4*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, q]^4 -
FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[p, nu]*SPD[p, p]^2*SPD[q, q] - FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*SPD[p, p]^2*SPD[q, q] -
FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*SPD[p, p]^2*SPD[q, q] + FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, p]^2*SPD[q, q] +
4*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[p, nu]*SPD[p, p]*SPD[p, q]*SPD[q, q] + 5*FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*SPD[p, p]*
	SPD[p, q]*SPD[q, q] + 5*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*SPD[p, p]*SPD[p, q]*SPD[q, q] -
8*FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, p]*SPD[p, q]*SPD[q, q] + 4*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, p]^2*SPD[p, q]*
	SPD[q, q] - 4*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[p, nu]*SPD[p, q]^2*SPD[q, q] - 4*FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*
	SPD[p, q]^2*SPD[q, q] - 4*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*SPD[p, q]^2*SPD[q, q] +
12*FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, q]^2*SPD[q, q] - 16*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, p]*SPD[p, q]^2*
	SPD[q, q] + 12*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, q]^3*SPD[q, q] - 2*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[p, nu]*SPD[p, p]*
	SPD[q, q]^2 - FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*SPD[p, p]*SPD[q, q]^2 - FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*SPD[p, p]*
	SPD[q, q]^2 + 2*FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, p]*SPD[q, q]^2 - FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, p]^2*
	SPD[q, q]^2 + 4*FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[p, nu]*SPD[p, q]*SPD[q, q]^2 + FAD[q, q, q, -p + q, -p + q]*FVD[p, nu]*FVD[q, mu]*
	SPD[p, q]*SPD[q, q]^2 + FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[q, nu]*SPD[p, q]*SPD[q, q]^2 -
6*FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[p, q]*SPD[q, q]^2 + 10*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, p]*SPD[p, q]*
	SPD[q, q]^2 - 13*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, q]^2*SPD[q, q]^2 - FAD[q, q, q, -p + q, -p + q]*FVD[p, mu]*FVD[p, nu]*SPD[q, q]^3 +
FAD[q, q, q, -p + q, -p + q]*FVD[q, mu]*FVD[q, nu]*SPD[q, q]^3 - 2*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, p]*SPD[q, q]^3 +
6*FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[p, q]*SPD[q, q]^3 - FAD[q, q, q, -p + q, -p + q]*MTD[mu, nu]*SPD[q, q]^4 +
FAD[q, q, -p + q, -p + q, -p + q]*(-(MTD[mu, nu]*(SPD[p, p] - SPD[q, q])^2*(SPD[p, p] - SPD[p, q] + SPD[q, q])^2) +
	FVD[q, mu]*(-(FVD[q, nu]*(SPD[p, p]^3 + SPD[p, p]*SPD[q, q]^2 - SPD[q, q]^3)) +
	FVD[p, nu]*(SPD[p, p]^2*SPD[p, q] + (SPD[p, q] - SPD[q, q])*SPD[q, q]^2 + SPD[p, p]*SPD[q, q]*(-SPD[p, q] + SPD[q, q]))) +
	FVD[p, mu]*(FVD[p, nu]*SPD[p, p]*(SPD[p, p]^2 - 2*SPD[p, p]*SPD[p, q] + 2*(SPD[p, q] - SPD[q, q])*SPD[q, q]) +
	FVD[q, nu]*(SPD[p, p]^2*SPD[p, q] + (SPD[p, q] - SPD[q, q])*SPD[q, q]^2 + SPD[p, p]*SPD[q, q]*(-SPD[p, q] + SPD[q, q])))) +
FAD[q, q, -p + q, -p + q]*(MTD[mu, nu]*(5*SPD[p, p]^3 + SPD[p, p]^2*(-12*SPD[p, q] + 5*SPD[q, q]) +
	SPD[p, p]*(16*SPD[p, q]^2 - 12*SPD[p, q]*SPD[q, q] + 3*SPD[q, q]^2) + 2*(-4*SPD[p, q]^3 + 6*SPD[p, q]^2*SPD[q, q] - 3*SPD[p, q]*SPD[q, q]^2 +
		SPD[q, q]^3)) + FVD[p, mu]*(FVD[p, nu]*((-6 + D)*SPD[p, p]^2 - 2*(-3 + D)*SPD[p, p]*(2*SPD[p, q] - SPD[q, q]) +
		(-2 + D)*(-2*SPD[p, q] + SPD[q, q])^2) + FVD[q, nu]*(-((-3 + D)*SPD[p, p]^2) + SPD[p, p]*(2*(-5 + 2*D)*SPD[p, q] + (5 - 3*D)*SPD[q, q]) -
		(2*SPD[p, q] - SPD[q, q])*(2*(-2 + D)*SPD[p, q] + (3 - 2*D)*SPD[q, q]))) +
	FVD[q, mu]*(FVD[p, nu]*(-((-3 + D)*SPD[p, p]^2) + SPD[p, p]*(2*(-5 + 2*D)*SPD[p, q] + (5 - 3*D)*SPD[q, q]) -
		(2*SPD[p, q] - SPD[q, q])*(2*(-2 + D)*SPD[p, q] + (3 - 2*D)*SPD[q, q])) + FVD[q, nu]*((-2 + D)*SPD[p, p]^2 + 4*(-2 + D)*SPD[p, q]^2 +
		4*(3 - 2*D)*SPD[p, q]*SPD[q, q] + 2*(-3 + 2*D)*SPD[q, q]^2 + SPD[p, p]*(-4*(-2 + D)*SPD[p, q] + 2*(-3 + 2*D)*SPD[q, q]))))))/2,
		OneLoopSimplify->True]//FCE",
"I*Pi^2*((CA*gc^2*B0[SP[p, p], 0, 0]*SD[b, c]*(4*FV[p, mu]*FV[p, nu] - D*FV[p, mu]*FV[p, nu] -
3*MT[mu, nu]*SP[p, p]))/4 - (CA*(6 - 5*D)*gc^2*C0[0, SP[p, p], SP[p, p], 0, 0, 0]*SD[b, c]*SP[p, p]*(FV[p, mu]*FV[p, nu] -
MT[mu, nu]*SP[p, p]))/(4*(1 - D)) - (3*CA*gc^2*D0[0, 0, SP[p, p], SP[p, p], 0, SP[p, p], 0, 0, 0,
0]*SD[b, c]*SP[p, p]^2*(FV[p, mu]*FV[p, nu] - MT[mu, nu]*SP[p, p]))/(4*(1 - D)) -
(CA*(3 - 2*D)*gc^2*D0[0, SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], 0, 0, 0, 0]*SD[b,
c]*SP[p, p]^2*(FV[p, mu]*FV[p, nu] - MT[mu, nu]*SP[p, p]))/(4*(1 - D)) + (CA*(4 -
D)*gc^2*PaVe[0, {0, 0, SP[p, p], 0, SP[p, p], 0, SP[p, p], SP[p, p], SP[p, p], SP[p, p]},
{0, 0, 0, 0, 0}, PaVeAutoOrder -> True, PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^3*(FV[p, mu]*FV[p, nu] -
MT[mu, nu]*SP[p, p]))/(4*(1 - D)) - (CA*gc^2*PaVe[0, {0, 0, SP[p, p], 0, 0, SP[p, p], 0, SP[p, p], SP[p, p],
0, SP[p, p], SP[p, p], SP[p, p], SP[p, p], SP[p, p]}, {0, 0, 0, 0, 0, 0}, PaVeAutoOrder -> True,
PaVeAutoReduce -> True]*SD[b, c]*SP[p, p]^4*(FV[p, mu]*FV[p, nu] - MT[mu, nu]*SP[p, p]))/(8*(1 - D)))"}
})
