(* :Title: FCRenameDummyIndices.test													*)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 1990-2019 Rolf Mertig
	Copyright (C) 1997-2019 Frederik Orellana
	Copyright (C) 2014-2019 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for FCRenameDummyIndices					*)

(* ------------------------------------------------------------------------ *)

Tests`Lorentz`fcstFCRenameDummyIndices =
{
{"FCRenameDummyIndices-ID1",
	"MatchQ[FieldStrength[a,b].FieldStrength[a,b]\
	//Explicit//ChangeDimension[#,D]&//Expand//FCRenameDummyIndices,(QuantumField[FCPartialD[\
	LorentzIndex[$AL[i_],D]],GaugeField,LorentzIndex[$AL[j_],D]]-\
	QuantumField[FCPartialD[LorentzIndex[$AL[j_],D]],GaugeField,\
	LorentzIndex[$AL[i_],D]]).(QuantumField[FCPartialD[LorentzIndex[$AL[$i_]\
	,D]],GaugeField,LorentzIndex[$AL[j_],D]]-QuantumField[FCPartialD[\
	LorentzIndex[$AL[j_],D]],GaugeField,LorentzIndex[$AL[i_],D]])]",
	"True"},
{"FCRenameDummyIndices-ID2",
	"MatchQ[GA[mu].GA[nu].GA[mu]//FCRenameDummyIndices,DiracGamma[\
	LorentzIndex[$AL[i_]]].DiracGamma[LorentzIndex[nu]].DiracGamma[\
	LorentzIndex[$AL[i_\[IndentingNewLine]]]]]", "True"},
{"FCRenameDummyIndices-ID3",
	"MatchQ[SUNT[a].SUNT[b].SUNT[a]//FCRenameDummyIndices,SUNT[\
	SUNIndex[$AL[i_]]].SUNT[SUNIndex[b]].SUNT[SUNIndex[$AL[i_]]]]",
	"True"},
{"FCRenameDummyIndices-ID4",
	"MatchQ[SUNTF[a,i,j].SUNT[b].SUNT[a,j,k]//FCRenameDummyIndices,\
	SUNTF[{SUNIndex[$AL[x_]]},SUNFIndex[i],SUNFIndex[$AL[y_]]].SUNT[\
	SUNIndex[b]].SUNT[SUNIndex[$AL[$x_]]].SUNT[SUNIndex[$AL[y_]]].SUNT[\
	SUNIndex[k]]]", "True"},
{"FCRenameDummyIndices-ID5",
	"MatchQ[FCRenameDummyIndices[FVD[p, mu] FVD[q, mu], FCE -> True],
FVD[p, $AL[a_]] FVD[q, $AL[a_]]]", "True"},
{"FCRenameDummyIndices-ID6",
	"MatchQ[FCRenameDummyIndices[CVD[p, i] CVD[q, i], FCE -> True],
CVD[p, $AL[a_]] CVD[q, $AL[a_]]]", "True"},
{"FCRenameDummyIndices-ID7",
	"MatchQ[
FCRenameDummyIndices[
Spinor[Momentum[k], m, 1].GA[k].Spinor[Momentum[k], m, 1] Spinor[
	Momentum[p], m, 1].GA[k].Spinor[Momentum[p], m, 1],
FCE -> True],
Spinor[Momentum[k], m, 1].GA[a_].Spinor[Momentum[k], m, 1] Spinor[
	Momentum[p], m, 1].GA[a_].Spinor[Momentum[p], m, 1]]", "True"},
{"FCRenameDummyIndices-ID8","MatchQ[FCRenameDummyIndices[
DCHN[SpinorUBar[p1], i] DCHN[SpinorV[p1], j] DIDelta[i, j],
FCE -> True],
DIDelta[$AL[a_], $AL[b_]] DCHN[
Spinor[-Momentum[p1], 0, 1], $AL[b_]] DCHN[
Spinor[Momentum[p1], 0, 1], $AL[a_]]]","True"}
};
