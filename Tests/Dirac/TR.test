

(* :Title: TR.test                                                          *)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 1990-2024 Rolf Mertig
	Copyright (C) 1997-2024 Frederik Orellana
	Copyright (C) 2014-2024 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for TR                       *)

(* ------------------------------------------------------------------------ *)

Tests`Dirac`fcstTR = {

{"fcstTR-ID1",
	"TR[DiracMatrix[a, b]]", "4*Pair[LorentzIndex[a], LorentzIndex[b]]"},
{"fcstTR-ID2",
	"TR[DiracSlash[a, b, c, d]]","4*(Pair[Momentum[a], Momentum[d]]*Pair[Momentum[b],
	Momentum[c]] - Pair[Momentum[a], Momentum[c]]*
	Pair[Momentum[b], Momentum[d]] + Pair[Momentum[a],
	Momentum[b]]*Pair[Momentum[c], Momentum[d]])"},
{"fcstTR-ID3",
	"TR[DiracMatrix[a, b, c, d, 5]]",
	"(-4*I)*Eps[LorentzIndex[a], LorentzIndex[b],
	LorentzIndex[c], LorentzIndex[d]]"},
{"fcstTR-ID4",
	"TR[MetricTensor[a, b]/4 DiracMatrix[mu].DiracMatrix[a] FourVector[p,mu]]//Contract",
	"Pair[LorentzIndex[b], Momentum[p]]"},
{"fcstTR-ID5",
	"TR[(DiracSlash[p'] + m).DiracMatrix[a].(DiracSlash[p] + DiracSlash[k] +
	m).DiracMatrix[b].(DiracSlash[p] + m).DiracMatrix[b].(DiracSlash[p] +
	DiracSlash[k] + m).DiracMatrix[a]/
	16] // Expand","4*m^4 + 4*m^2*Pair[Momentum[k], Momentum[k]] +
	4*m^2*Pair[Momentum[k], Momentum[p]] -
	4*m^2*Pair[Momentum[k], Momentum[Derivative[1][p]]] +
	2*Pair[Momentum[k], Momentum[p]]*
	Pair[Momentum[k], Momentum[Derivative[1][p]]] +
	2*Pair[Momentum[k], Momentum[Derivative[1][p]]]*
	Pair[Momentum[p], Momentum[p]] - 3*m^2*Pair[Momentum[p],
	Momentum[Derivative[1][p]]] -
	Pair[Momentum[k], Momentum[k]]*Pair[Momentum[p],
	Momentum[Derivative[1][p]]] +
	Pair[Momentum[p], Momentum[p]]*Pair[Momentum[p],
	Momentum[Derivative[1][p]]]"},
{"fcstTR-ID6",
	"FCSetDiracGammaScheme[\"BMHV\"]; \n tmp = TR[DiracMatrix[b, Dimension -> D].DiracMatrix[a,
	Dimension -> D].DiracGamma[Momentum[p1]].DiracGamma[
	Momentum[p2]].DiracMatrix[nu, Dimension -> D].DiracMatrix[b,
	Dimension -> D].DiracGamma[Momentum[p2]].DiracGamma[
	Momentum[p3]].DiracMatrix[a, Dimension -> D].DiracGamma[
	Momentum[p1]].DiracMatrix[nu, Dimension -> D].DiracGamma[
	Momentum[p3]].DiracGamma[Momentum[p1]].DiracGamma[Momentum[p2]],
	PairCollect -> TRue]; \n FCSetDiracGammaScheme[\"NDR\"]; \n tmp",
	"-4*((288 - 224*D + 56*D^2 - 4*D^3)*Pair[Momentum[p1], Momentum[p2]]*Pair[Momentum[p1],
	Momentum[p3]]^2*Pair[Momentum[p2], Momentum[p2]] + (-256 + 128*D - 16*D^2)*Pair[Momentum[p1],
	Momentum[p2]]^2*Pair[Momentum[p1], Momentum[p3]]*Pair[Momentum[p2], Momentum[p3]] +
	(-112 + 104*D - 28*D^2 + 2*D^3)*Pair[Momentum[p1], Momentum[p1]]*Pair[Momentum[p1],
	Momentum[p3]]*Pair[Momentum[p2], Momentum[p2]]*Pair[Momentum[p2], Momentum[p3]] +
	(128 - 64*D + 8*D^2)*Pair[Momentum[p1], Momentum[p1]]*Pair[Momentum[p1],
	Momentum[p2]]*Pair[Momentum[p2], Momentum[p3]]^2 + (128 - 64*D + 8*D^2)*Pair[Momentum[p1],
	Momentum[p2]]^3*Pair[Momentum[p3], Momentum[p3]] + (-168 + 104*D -
	20*D^2 + D^3)*Pair[Momentum[p1], Momentum[p1]]*Pair[Momentum[p1],
	Momentum[p2]]*Pair[Momentum[p2], Momentum[p2]]*Pair[Momentum[p3],
	Momentum[p3]])"},
{"fcstTR-ID7",
	"TR[DiracMatrix[b, Dimension -> D].DiracMatrix[a,
	Dimension -> D].DiracGamma[Momentum[p1]].DiracGamma[
	Momentum[p2]].DiracMatrix[nu, Dimension -> D].DiracMatrix[b,
	Dimension -> D].DiracGamma[Momentum[p2]].DiracGamma[
	Momentum[p3]].DiracMatrix[a, Dimension -> D].DiracGamma[
	Momentum[p1]].DiracMatrix[nu, Dimension -> D].DiracGamma[
	Momentum[p3]].DiracGamma[Momentum[p1]].DiracGamma[
	Momentum[p2]] /. D -> 4, PairCollect -> TRue]",
	"32*Pair[Momentum[p2], Momentum[p2]]*(-4*Pair[Momentum[p1], Momentum[p2]]*Pair[Momentum[p1],
	Momentum[p3]]^2 + 2*Pair[Momentum[p1], Momentum[p1]]*Pair[Momentum[p1], Momentum[p3]]*Pair[Momentum[p2],
	Momentum[p3]] + Pair[Momentum[p1], Momentum[p1]]*Pair[Momentum[p1],
	Momentum[p2]]*Pair[Momentum[p3], Momentum[p3]])"},
{"fcstTR-ID8",
	"Contract[DiracTRace[DiracMatrix[a, b, rho,
	sigma]] MetricTensor[a,b]] /. DiracTRace -> TR",
	"16*Pair[LorentzIndex[rho], LorentzIndex[sigma]]"},
{"fcstTR-ID9",
	"SetMandelstam[s, t, u, k1, k2, -p1, -p2, 0, 0, m,
	m];\nTR[(PolarizationSum[a, rho, k1, p1 - p2] PolarizationSum[b, sigma, k2,
	p1 - p2] FourVector[p1, a] FourVector[p2, b] DiracMatrix[sigma]). (DiracSlash[k1] -
	DiracSlash[p1] - m).DiracMatrix[rho].(DiracSlash[p1] + m).(DiracSlash[p2] - m),
	Mandelstam -> {s, t, u, 2 m^2}]","(-2*m*s*(m^4 - t*u)*(8*m^4 - t^2 -
	6*t*u - u^2))/(t - u)^3"},
{"fcstTR-ID10",
	"TR[DiracMatrix[sigma].(DiracSlash[k1] - DiracSlash[p1] -
	m).DiracMatrix[rho].(DiracSlash[p1] + m).(DiracSlash[p2] - m),
	PairCollect -> TRue]","-2*m*((t - u)*Pair[LorentzIndex[rho], LorentzIndex[sigma]] +
	2*Pair[LorentzIndex[rho], Momentum[p1]]*Pair[LorentzIndex[sigma], Momentum[k1]] -
	2*Pair[LorentzIndex[rho], Momentum[p2]]*Pair[LorentzIndex[sigma], Momentum[k1]] +
	2*Pair[LorentzIndex[rho], Momentum[k1]]*Pair[LorentzIndex[sigma], Momentum[p1]] -
	4*Pair[LorentzIndex[rho], Momentum[p1]]*Pair[LorentzIndex[sigma], Momentum[p1]] -
	2*Pair[LorentzIndex[rho], Momentum[k1]]*Pair[LorentzIndex[sigma], Momentum[p2]] +
	4*Pair[LorentzIndex[rho], Momentum[p1]]*Pair[LorentzIndex[sigma], Momentum[p2]])"},
{"fcstTR-ID11",
	"FCSetDiracGammaScheme[\"BMHV\"]; \n  FCClearScalarProducts[]; \n TR[DiracMatrix[a[1], Dimension -> (d - 4)].DiracMatrix[a[2],
	Dimension -> (d - 4)].DiracMatrix[a[3], Dimension -> (d - 4)].
	DiracMatrix[a[4], Dimension -> (d - 4)].DiracMatrix[a[5],
	Dimension -> (d - 4)].DiracMatrix[a[6],
	Dimension -> (d - 4)].DiracMatrix[a[7],
	Dimension -> (d - 4)].DiracMatrix[a[8],
	Dimension -> (d - 4)].DiracMatrix[a[1],
	Dimension -> (d - 4)].DiracMatrix[a[2],
	Dimension -> (d - 4)].DiracMatrix[a[3], Dimension -> (d - 4)].
	DiracMatrix[a[4], Dimension -> (d - 4)].DiracMatrix[a[5],
	Dimension -> (d - 4)].DiracMatrix[a[6],
	Dimension -> (d - 4)].DiracMatrix[a[7],
	Dimension -> (d - 4)].DiracMatrix[a[8],
	Dimension -> (d - 4)]] // Expand","123469824 - 135962624*d +
	63224832*d^2 - 16145920*d^3 + 2461760*d^4 - 227584*d^5 +
	12320*d^6 - 352*d^7 + 4*d^8"},
{"fcstTR-ID12","TR[DiracMatrix[a[1], Dimension -> (d - 4)].DiracMatrix[a[2],
	Dimension -> (d - 4)].DiracMatrix[a[3], Dimension -> (d - 4)].
	DiracMatrix[a[4], Dimension -> (d - 4)].DiracMatrix[a[5],
	Dimension -> (d - 4)].DiracMatrix[a[6],
	Dimension -> (d - 4)].DiracMatrix[a[7],
	Dimension -> (d - 4)].DiracMatrix[a[8],
	Dimension -> (d - 4)].DiracMatrix[a[9],
	Dimension -> (d - 4)].DiracMatrix[a[1],
	Dimension -> (d - 4)].DiracMatrix[a[2],
	Dimension -> (d - 4)].DiracMatrix[a[3], Dimension -> (d - 4)].
	DiracMatrix[a[4], Dimension -> (d - 4)].DiracMatrix[a[5],
	Dimension -> (d - 4)].DiracMatrix[a[6],
	Dimension -> (d - 4)].DiracMatrix[a[7],
	Dimension -> (d - 4)].DiracMatrix[a[8],
	Dimension -> (d - 4)].DiracMatrix[a[9],
	Dimension -> (d - 4)]] // Expand",
	"-1879576576 + 2220901376*d - 1127626752*d^2 +
	321806848*d^3 - 56625408*d^4 + 6331584*d^5 -
	446208*d^6 + 18912*d^7 - 432*d^8 + 4*d^9"},
{"fcstTR-ID13",
	"TR[DiracMatrix[a[1], Dimension -> (d - 4)].DiracMatrix[a[2],
	Dimension -> (d - 4)].DiracMatrix[a[3], Dimension -> (d - 4)].
	DiracMatrix[a[4], Dimension -> (d - 4)].DiracMatrix[a[5],
	Dimension -> (d - 4)].DiracMatrix[a[6],
	Dimension -> (d - 4)].DiracMatrix[a[7],
	Dimension -> (d - 4)].DiracMatrix[a[8],
	Dimension -> (d - 4)].DiracMatrix[a[9],
	Dimension -> (d - 4)].DiracMatrix[a[10],
	Dimension -> (d - 4)].DiracMatrix[a[1],
	Dimension -> (d - 4)].DiracMatrix[a[2],
	Dimension -> (d - 4)].DiracMatrix[a[3], Dimension -> (d - 4)].
	DiracMatrix[a[4], Dimension -> (d - 4)].DiracMatrix[a[5],
	Dimension -> (d - 4)].DiracMatrix[a[6],
	Dimension -> (d - 4)].DiracMatrix[a[7],
	Dimension -> (d - 4)].DiracMatrix[a[8],
	Dimension -> (d - 4)].DiracMatrix[a[9],
	Dimension -> (d - 4)].DiracMatrix[a[10],
	Dimension -> (d - 4)]] // Expand",
	"-31023169536 + 38971179008*d - 21328977920*d^2 +
	6679521280*d^3 - 1320732160*d^4 + 171464832*d^5 -
	14710080*d^6 + 816960*d^7 - 27840*d^8 + 520*d^9 - 4*d^10"},
{"fcstTR-ID14",
	"TR[DiracMatrix[a[1], Dimension -> (d - 4)].DiracMatrix[a[2],
	Dimension -> (d - 4)].DiracMatrix[a[3], Dimension -> (d - 4)].
	DiracMatrix[a[4], Dimension -> (d - 4)].DiracMatrix[a[5],
	Dimension -> (d - 4)].DiracMatrix[a[6],
	Dimension -> (d - 4)].DiracMatrix[a[7],
	Dimension -> (d - 4)].DiracMatrix[a[8],
	Dimension -> (d - 4)].DiracMatrix[a[9],
	Dimension -> (d - 4)].DiracMatrix[a[10],
	Dimension -> (d - 4)].DiracMatrix[a[11],
	Dimension -> (d - 4)].DiracMatrix[a[1],
	Dimension -> (d - 4)].DiracMatrix[a[2],
	Dimension -> (d - 4)].DiracMatrix[a[3], Dimension -> (d - 4)].
	DiracMatrix[a[4], Dimension -> (d - 4)].DiracMatrix[a[5],
	Dimension -> (d - 4)].DiracMatrix[a[6],
	Dimension -> (d - 4)].DiracMatrix[a[7],
	Dimension -> (d - 4)].DiracMatrix[a[8],
	Dimension -> (d - 4)].DiracMatrix[a[9],
	Dimension -> (d - 4)].DiracMatrix[a[10],
	Dimension -> (d - 4)].DiracMatrix[a[11],
	Dimension -> (d - 4)]] // Expand","551768735744 - 731506905088*d +
	427299186688*d^2 - 144858475520*d^3 + 31576821760*d^4 -
	4629805312*d^5 + 463655808*d^6 - 31521600*d^7 +
	1415040*d^8 - 39600*d^9 + 616*d^10 - 4*d^11"},
{"fcstTR-ID15","TR[DiracTRace[GA[i, j]]] // FCE","16 MT[i, j]"},
{"fcstTR-ID16","TR[GSD[pv3].GAD[n2].GSD[pv4].GAE[i1].GA[5]]","0"},
{"fcstTR-ID17","TR[GSD[pv3, pv4, pv5].GAD[n2].GSD[pv4].GAE[i1].GA[5]]","0"},
{"fcstTR-ID18","TR[CGA[i, j]]","-4 CartesianPair[CartesianIndex[i], CartesianIndex[j]]"},
{"fcstTR-ID19"," {$LeviCivitaSign = 1;\n FCE[TR[GA[i1, i2, i3, i4, 5]]],
$LeviCivitaSign = -1;\n FCE[TR[GA[i1, i2, i3, i4, 5]]],
$LeviCivitaSign = 1;\n FCE[TR[GA[i1, i2, i3, i4, 5]]],
$LeviCivitaSign = -1;\n FCE[TR[GA[i1, i2, i3, i4, 5]]]}",
"{4 I LC[i1, i2, i3, i4], -4 I LC[i1, i2, i3, i4],
4 I LC[i1, i2, i3, i4], -4 I LC[i1, i2, i3, i4]}"},

{"fcstTR-ID20","{$LeviCivitaSign = 1; \n
FCE[TR[GA[i1, i2, i3, i4, i5, i6, 5]]],
$LeviCivitaSign = -1;  \n
FCE[TR[GA[i1, i2, i3, i4, i5, i6, 5]]],
$LeviCivitaSign = 1;  \n
FCE[TR[GA[i1, i2, i3, i4, i5, i6, 5]]],
$LeviCivitaSign = -1;  \n
FCE[TR[GA[i1, i2, i3, i4, i5, i6, 5]]]}",
"{4 I (LC[i3, i4, i5, i6] MT[i1, i2] - LC[i2, i4, i5, i6] MT[i1, i3] +
	LC[i1, i4, i5, i6] MT[i2, i3] + LC[i1, i2, i3, i6] MT[i4, i5] -
	LC[i1, i2, i3, i5] MT[i4, i6] +
	LC[i1, i2, i3, i4] MT[i5, i6]), -4 I (LC[i3, i4, i5, i6] MT[i1,
	i2] - LC[i2, i4, i5, i6] MT[i1, i3] +
	LC[i1, i4, i5, i6] MT[i2, i3] + LC[i1, i2, i3, i6] MT[i4, i5] -
	LC[i1, i2, i3, i5] MT[i4, i6] + LC[i1, i2, i3, i4] MT[i5, i6]),
4 I (LC[i3, i4, i5, i6] MT[i1, i2] - LC[i2, i4, i5, i6] MT[i1, i3] +
	LC[i1, i4, i5, i6] MT[i2, i3] + LC[i1, i2, i3, i6] MT[i4, i5] -
	LC[i1, i2, i3, i5] MT[i4, i6] +
	LC[i1, i2, i3, i4] MT[i5, i6]), -4 I (LC[i3, i4, i5, i6] MT[i1,
	i2] - LC[i2, i4, i5, i6] MT[i1, i3] +
	LC[i1, i4, i5, i6] MT[i2, i3] + LC[i1, i2, i3, i6] MT[i4, i5] -
	LC[i1, i2, i3, i5] MT[i4, i6] + LC[i1, i2, i3, i4] MT[i5, i6])}"},
{"fcstTR-ID21","TR[(L1 GA[7] + R1 GA[6]).(GS[p2] + m2).(L2 GA[7] + R2 GA[6]).(GS[p1] -
	m1)] // FCE","-2 (L1 L2 m1 m2 + m1 m2 R1 R2 - L2 R1 SP[p1, p2] - L1 R2 SP[p1, p2])"},
{"fcstTR-ID22","TR[(L1 GA[7] + R1 GA[6]).(m2).(L2 GA[7] + R2 GA[6]).(-m1)] // FCE",
"-2 m1 m2 (L1 L2 + R1 R2)"},
{"fcstTR-ID23","TR[(L1 GA[7] + R1 GA[6]).(GS[p2] + m2 (GA[6] + GA[7])).(L2 GA[7] +
	R2 GA[6]).(GS[p1] - m1 (GA[6] + GA[7]))] // FCE",
"-2 (L1 L2 m1 m2 + m1 m2 R1 R2 - L2 R1 SP[p1, p2] - L1 R2 SP[p1, p2])"},
{"fcstTR-ID24",
"FCClearScalarProducts[]; \n
ClearAll[R, L, ID, yiPR, ys1, ys2]; \n
R = GA[6]; \n
L = GA[7]; \n
yiPR = YiPR L + YiPRCC R; \n
ys1 = Ys1 L + Ys1CC R; \n
ys2 = Ys2 L +Ys2CC R;  \n
SetMandelstam[s, t, u, p1, p2, -q1, -q2, mc1, mc2, ms1, ms2]; \n
TR[yiPR.(GS[p1] - mc1 (GA[6] + GA[7])).ys1.(GS[p2 - q2] +
mb (GA[6] + GA[7]) ).ys2.(GS[p2] + mc2 (GA[6] + GA[7]) )] //Simplify ",
"-mc1 (mc2^2 - ms2^2 + t) (YiPRCC Ys1CC Ys2 + YiPR Ys1 Ys2CC) -
2 mc1^2 mc2 (YiPR Ys1CC Ys2 + YiPRCC Ys1 Ys2CC) -
mc2 (mc2^2 + ms2^2 - s - u) (YiPR Ys1CC Ys2 + YiPRCC Ys1 Ys2CC) -
mb (mc1^2 (YiPRCC Ys1 Ys2 + YiPR Ys1CC Ys2CC) + (mc2^2 - s) *
(YiPRCC Ys1 Ys2 + YiPR Ys1CC Ys2CC) +
2 mc1 mc2 (YiPR Ys1 Ys2 + YiPRCC Ys1CC Ys2CC))"},
{"fcstTR-ID25",
"FCClearScalarProducts[]; \n
ClearAll[R, L, ID, yiPR, ys1, ys2]; \n
R = GA[6]; \n
L = GA[7]; \n
yiPR = YiPR L + YiPRCC R; \n
ys1 = Ys1 L + Ys1CC R; \n
ys2 = Ys2 L + Ys2CC R;
SetMandelstam[s, t, u, p1, p2, -q1, -q2, mc1, mc2, ms1, ms2];  \n
TR[yiPR.(GS[p1] - mc1 ).ys1.(GS[p2 - q2] + mb ).ys2.(GS[p2] + mc2 )] //
Simplify",
"-mc1 (mc2^2 - ms2^2 + t) (YiPRCC Ys1CC Ys2 + YiPR Ys1 Ys2CC) -
2 mc1^2 mc2 (YiPR Ys1CC Ys2 + YiPRCC Ys1 Ys2CC) -
mc2 (mc2^2 + ms2^2 - s - u) (YiPR Ys1CC Ys2 + YiPRCC Ys1 Ys2CC) -
mb (mc1^2 (YiPRCC Ys1 Ys2 + YiPR Ys1CC Ys2CC) + (mc2^2 - s) *
(YiPRCC Ys1 Ys2 + YiPR Ys1CC Ys2CC) +
2 mc1 mc2 (YiPR Ys1 Ys2 + YiPRCC Ys1CC Ys2CC))"},
{"fcstTR-ID26",
"FCClearScalarProducts[]; \n
ClearAll[R, L, ID, yiPR, ys1, ys2]; \n
R = GA[6]; \n
L = GA[7]; \n
yiPR = YiPR L + YiPRCC R; \n
ys1 = Ys1 L + Ys1CC R; \n
ys2 = Ys2 L + Ys2CC R;
SetMandelstam[s, t, u, p1, p2, -q1, -q2, mc1, mc2, ms1, ms2];  \n
DeclareNonCommutative[ID]; \n
tmp=(TR[yiPR.(GS[p1] - mc1 ID).ys1.(GS[p2 - q2] + mb ID).ys2.(GS[p2] +
mc2 ID)] /. ID -> 1 /. DiracTRace -> TR) // Simplify; \n
ClearAll[R, L, ID, yiPR, ys1, ys2]; \n
tmp",
"-mc1 (mc2^2 - ms2^2 + t) (YiPRCC Ys1CC Ys2 + YiPR Ys1 Ys2CC) -
2 mc1^2 mc2 (YiPR Ys1CC Ys2 + YiPRCC Ys1 Ys2CC) -
mc2 (mc2^2 + ms2^2 - s - u) (YiPR Ys1CC Ys2 + YiPRCC Ys1 Ys2CC) -
mb (mc1^2 (YiPRCC Ys1 Ys2 + YiPR Ys1CC Ys2CC) + (mc2^2 - s) *
(YiPRCC Ys1 Ys2 + YiPR Ys1CC Ys2CC) +
2 mc1 mc2 (YiPR Ys1 Ys2 + YiPRCC Ys1CC Ys2CC))"},
{"fcstTR-ID27",
	"FCSetDiracGammaScheme[\"BMHV\"]; \n tmp = FCE[Simplify[TR[GAD[al].GA[5].GAD[al, la, mu, nu, rho]] +
	TR[GA[5].GAD[al].GAD[al, la, mu, nu, rho]]]]; \n tmp",
	"-8 I (-4 + D) LC[la, mu, nu, rho]"},
{"fcstTR-ID28", "TR[GS[p].GS[p].GS[r]]", "0"},
{"fcstTR-ID29", "TR[GS[p].GS[q].GS[r]]", "0"},
{"fcstTR-ID30",
	"FCSetDiracGammaScheme[\"BMHV\"]; \n FCClearScalarProducts[]; \n ScalarProduct[p, p, SetDimensions -> {4, D, D - 4}] = 0; \n ScalarProduct[l, l, SetDimensions -> {4, D, D - 4}] = 0; \n
	ScalarProduct[o, o, SetDimensions -> {4, D, D - 4}] = 0; \n
	tmp = (SelectFree[
		Expand[Contract[
			(-1)TR[GAD[rho].GSD[o].GAD[rho].(GSD[l] + GSD[o]).GAD[
				mu].(1 - GA[5]).GSD[p].GAD[
				nu].(1 - GA[5]).(GSD[l] + GSD[o])]*I*
			LCD[mu, nu, al, bet] FVD[p, al] FVD[o + l - p,
				bet]] /.
			Pair[h1_[a1_, d_Symbol], h2_[a2_, d_Symbol]] :>
			Pair[h1[a1], h2[a2]] -
			Pair[h1[a1, d - 4], h2[a2, d - 4]]], D - 4]/4/2/
		SP[l, o]/2/SP[l, o]) /. D -> 4 + 2*eps //
ExpandScalarProduct // Expand // FCE; \n FCClearScalarProducts[]; \n tmp",
	"-((4 SP[l, p]^2)/SP[l, o]) - (4 eps SP[l, p]^2)/SP[l, o] - (4 SP[l, p] SP[o, p])/SP[l, o] - (4 eps SP[l, p] SP[o, p])/SP[l, o]"},
{"fcstTR-ID31",
	"FCSetDiracGammaScheme[\"BMHV\"]; \n FCClearScalarProducts[]; \n ScalarProduct[p, p, SetDimensions -> {4, D, D - 4}] = 0; \n ScalarProduct[l, l, SetDimensions -> {4, D, D - 4}] = 0; \n
	ScalarProduct[o, o, SetDimensions -> {4, D, D - 4}] = 0; \n
	tmp = (SelectFree[
			Expand[Contract[(-1) TR[
				GSD[o].GAD[rho].(GSD[l] + GSD[o]).GAD[
				mu].(1 - GA[5]).GSD[p].GAD[
				nu].(1 - GA[5]).(GSD[l] + GSD[o]).GAD[rho]]*I*
				LCD[mu, nu, al, bet] FVD[p, al] FVD[o + l - p,
				bet]] /.
			Pair[h1_[a1_, d_Symbol], h2_[a2_, d_Symbol]] :>
			Pair[h1[a1], h2[a2]] -
				Pair[h1[a1, d - 4], h2[a2, d - 4]]], D - 4]/4/2/
		SP[l, o]/2/SP[l, o]) /. D -> 4 + 2*eps //
	ExpandScalarProduct // Expand // FCE; \n FCClearScalarProducts[]; \n tmp",
	"-((4 SP[l, p]^2)/SP[l, o]) - (4 eps SP[l, p]^2)/SP[l, o] - (4 SP[l, p] SP[o, p])/SP[l, o] - (4 eps SP[l, p] SP[o, p])/SP[l, o]"},
{"fcstTR-ID32", "TR[FV[k1 + k2, mu] (GA[al] FV[k1, al] + m).(GA[mu] f1 - 1/2 I/m 1/2 I (GA[mu, nu] - GA[nu, mu]) FV[k1 - k2, nu] f2).(GS[k1] + m)]//FCE",
"(4*(2*f1*m^2*SP[k1, k1] - f2*SP[k1, k1]*SP[k1, k1 - k2] + \
2*f1*m^2*SP[k1, k2] - f2*SP[k1, k1 - k2]*SP[k1, k2] + f2*SP[k1, \
k1]*SP[k1, k1 + k2] - f2*SP[k1, k2]*SP[k1, k1 + k2]))/m"},
{"fcstTR-ID33", "TR[1/32 GA[m].(1 - GA[5]).GS[k].(1 + GA[5]).GA[n].(1 - GA[5]).GS[p].(1 + GA[5])] // FCE",
"FV[k, n] FV[p, m] + FV[k, m] FV[p, n] - MT[m, n] SP[k, p] +I LC[m, n][k, p]"},
{"fcstTR-ID34", "TR[GA[5].(GA[5] + GS[p]).GA[5].GS[q]]//FCE", "-4 SP[p, q]"},
{"fcstTR-ID35", "TR[(1 + GA[5].GS[p]).GA[5].GS[q]]//FCE", "-4 SP[p, q]"},
{"fcstTR-ID36", "TR[(GA[j].GS[q] - GS[q].GA[j]).(GA[i].GS[q] - GS[q].GA[i])] // FCE", "16*(FV[q, i]*FV[q, j] - MT[i, j]*SP[q, q])"},
{"fcstTR-ID37", "TR[DiracSimplify[(GA[j].GS[q] - GS[q].GA[j]).(GA[i].GS[q] -
GS[q].GA[i])]] // FCE", "16*FV[q, i]*FV[q, j] - 16*MT[i, j]*SP[q, q]"},
{"fcstTR-ID38", "TR[(GS[p1] + m).(GA[mu].GS[k].GA[nu] + 2 GA[mu] FV[p2, nu]).(GS[p2] +
	m).(GA[nu].GS[k].GA[mu] +
	2 GA[mu] FV[p2, nu]), FCE -> TRue]", "16 (4 m^2 SP[k, k] + 4 m^2 SP[k, p2] + 2 SP[k, p1] SP[k, p2] -
SP[k, k] SP[p1, p2] + 4 m^2 SP[p2, p2] - 2 SP[k, p1] SP[p2, p2] -
2 SP[p1, p2] SP[p2, p2])"},
{"fcstTR-ID39", "TR[GA[m].(GA[n].GA[6] + GA[n].GA[7])] // FCE", "4 MT[m, n]"},
{"fcstTR-ID40", "TR[GA[i1, i2, 5, i3, i4, i5, i6]] - TR[GA[i1, i2, i3, i4, i5, i6, 5]]", "0"}
};

(*--------------------------------------------------------------------------------------------------*)
Tests`Dirac`fcstTR4AllFreeNoGamma5 =
({
{"fcstTRAllFreeNoGamma5-ID1", "TR[GA[i1]]//FCE", "0"},
{"fcstTRAllFreeNoGamma5-ID2", "TR[GA[i1,i2]]//FCE",
"4*MT[i1, i2]"},
{"fcstTRAllFreeNoGamma5-ID3", "TR[GA[i1,i2,i3]]//FCE", "0"},
{"fcstTRAllFreeNoGamma5-ID4", "TR[GA[i1,i2,i3,i4]]//FCE",
"4*(MT[i1, i4]*MT[i2, i3] - MT[i1, i3]*MT[i2, i4] + MT[i1, \
i2]*MT[i3, i4])"},
{"fcstTRAllFreeNoGamma5-ID5", "TR[GA[i1,i2,i3,i4,i5]]//FCE", "0"},
{"fcstTRAllFreeNoGamma5-ID6", "TR[GA[i1,i2,i3,i4,i5,i6]]//FCE",
"4*(MT[i1, i6]*MT[i2, i5]*MT[i3, i4] - MT[i1, i5]*MT[i2, \
i6]*MT[i3, i4] - MT[i1, i6]*MT[i2, i4]*MT[i3, i5] + MT[i1, i4]*MT[i2, \
i6]*MT[i3, i5] + MT[i1, i5]*MT[i2, i4]*MT[i3, i6] - MT[i1, i4]*MT[i2, \
i5]*MT[i3, i6] + MT[i1, i6]*MT[i2, i3]*MT[i4, i5] - MT[i1, i3]*MT[i2, \
i6]*MT[i4, i5] + MT[i1, i2]*MT[i3, i6]*MT[i4, i5] - MT[i1, i5]*MT[i2, \
i3]*MT[i4, i6] + MT[i1, i3]*MT[i2, i5]*MT[i4, i6] - MT[i1, i2]*MT[i3, \
i5]*MT[i4, i6] + MT[i1, i4]*MT[i2, i3]*MT[i5, i6] - MT[i1, i3]*MT[i2, \
i4]*MT[i5, i6] + MT[i1, i2]*MT[i3, i4]*MT[i5, i6])"},
{"fcstTRAllFreeNoGamma5-ID7",
"TR[GA[i1,i2,i3,i4,i5,i6,i7,i8]]//FCE",
"4*(MT[i1, i8]*MT[i2, i7]*MT[i3, i6]*MT[i4, i5] - MT[i1, \
i7]*MT[i2, i8]*MT[i3, i6]*MT[i4, i5] - MT[i1, i8]*MT[i2, i6]*MT[i3, \
i7]*MT[i4, i5] + MT[i1, i6]*MT[i2, i8]*MT[i3, i7]*MT[i4, i5] + MT[i1, \
i7]*MT[i2, i6]*MT[i3, i8]*MT[i4, i5] - MT[i1, i6]*MT[i2, i7]*MT[i3, \
i8]*MT[i4, i5] - MT[i1, i8]*MT[i2, i7]*MT[i3, i5]*MT[i4, i6] + MT[i1, \
i7]*MT[i2, i8]*MT[i3, i5]*MT[i4, i6] + MT[i1, i8]*MT[i2, i5]*MT[i3, \
i7]*MT[i4, i6] - MT[i1, i5]*MT[i2, i8]*MT[i3, i7]*MT[i4, i6] - MT[i1, \
i7]*MT[i2, i5]*MT[i3, i8]*MT[i4, i6] + MT[i1, i5]*MT[i2, i7]*MT[i3, \
i8]*MT[i4, i6] + MT[i1, i8]*MT[i2, i6]*MT[i3, i5]*MT[i4, i7] - MT[i1, \
i6]*MT[i2, i8]*MT[i3, i5]*MT[i4, i7] - MT[i1, i8]*MT[i2, i5]*MT[i3, \
i6]*MT[i4, i7] + MT[i1, i5]*MT[i2, i8]*MT[i3, i6]*MT[i4, i7] + MT[i1, \
i6]*MT[i2, i5]*MT[i3, i8]*MT[i4, i7] - MT[i1, i5]*MT[i2, i6]*MT[i3, \
i8]*MT[i4, i7] - MT[i1, i7]*MT[i2, i6]*MT[i3, i5]*MT[i4, i8] + MT[i1, \
i6]*MT[i2, i7]*MT[i3, i5]*MT[i4, i8] + MT[i1, i7]*MT[i2, i5]*MT[i3, \
i6]*MT[i4, i8] - MT[i1, i5]*MT[i2, i7]*MT[i3, i6]*MT[i4, i8] - MT[i1, \
i6]*MT[i2, i5]*MT[i3, i7]*MT[i4, i8] + MT[i1, i5]*MT[i2, i6]*MT[i3, \
i7]*MT[i4, i8] + MT[i1, i8]*MT[i2, i7]*MT[i3, i4]*MT[i5, i6] - MT[i1, \
i7]*MT[i2, i8]*MT[i3, i4]*MT[i5, i6] - MT[i1, i8]*MT[i2, i4]*MT[i3, \
i7]*MT[i5, i6] + MT[i1, i4]*MT[i2, i8]*MT[i3, i7]*MT[i5, i6] + MT[i1, \
i7]*MT[i2, i4]*MT[i3, i8]*MT[i5, i6] - MT[i1, i4]*MT[i2, i7]*MT[i3, \
i8]*MT[i5, i6] + MT[i1, i8]*MT[i2, i3]*MT[i4, i7]*MT[i5, i6] - MT[i1, \
i3]*MT[i2, i8]*MT[i4, i7]*MT[i5, i6] + MT[i1, i2]*MT[i3, i8]*MT[i4, \
i7]*MT[i5, i6] - MT[i1, i7]*MT[i2, i3]*MT[i4, i8]*MT[i5, i6] + MT[i1, \
i3]*MT[i2, i7]*MT[i4, i8]*MT[i5, i6] - MT[i1, i2]*MT[i3, i7]*MT[i4, \
i8]*MT[i5, i6] - MT[i1, i8]*MT[i2, i6]*MT[i3, i4]*MT[i5, i7] + MT[i1, \
i6]*MT[i2, i8]*MT[i3, i4]*MT[i5, i7] + MT[i1, i8]*MT[i2, i4]*MT[i3, \
i6]*MT[i5, i7] - MT[i1, i4]*MT[i2, i8]*MT[i3, i6]*MT[i5, i7] - MT[i1, \
i6]*MT[i2, i4]*MT[i3, i8]*MT[i5, i7] + MT[i1, i4]*MT[i2, i6]*MT[i3, \
i8]*MT[i5, i7] - MT[i1, i8]*MT[i2, i3]*MT[i4, i6]*MT[i5, i7] + MT[i1, \
i3]*MT[i2, i8]*MT[i4, i6]*MT[i5, i7] - MT[i1, i2]*MT[i3, i8]*MT[i4, \
i6]*MT[i5, i7] + MT[i1, i6]*MT[i2, i3]*MT[i4, i8]*MT[i5, i7] - MT[i1, \
i3]*MT[i2, i6]*MT[i4, i8]*MT[i5, i7] + MT[i1, i2]*MT[i3, i6]*MT[i4, \
i8]*MT[i5, i7] + MT[i1, i7]*MT[i2, i6]*MT[i3, i4]*MT[i5, i8] - MT[i1, \
i6]*MT[i2, i7]*MT[i3, i4]*MT[i5, i8] - MT[i1, i7]*MT[i2, i4]*MT[i3, \
i6]*MT[i5, i8] + MT[i1, i4]*MT[i2, i7]*MT[i3, i6]*MT[i5, i8] + MT[i1, \
i6]*MT[i2, i4]*MT[i3, i7]*MT[i5, i8] - MT[i1, i4]*MT[i2, i6]*MT[i3, \
i7]*MT[i5, i8] + MT[i1, i7]*MT[i2, i3]*MT[i4, i6]*MT[i5, i8] - MT[i1, \
i3]*MT[i2, i7]*MT[i4, i6]*MT[i5, i8] + MT[i1, i2]*MT[i3, i7]*MT[i4, \
i6]*MT[i5, i8] - MT[i1, i6]*MT[i2, i3]*MT[i4, i7]*MT[i5, i8] + MT[i1, \
i3]*MT[i2, i6]*MT[i4, i7]*MT[i5, i8] - MT[i1, i2]*MT[i3, i6]*MT[i4, \
i7]*MT[i5, i8] + MT[i1, i8]*MT[i2, i5]*MT[i3, i4]*MT[i6, i7] - MT[i1, \
i5]*MT[i2, i8]*MT[i3, i4]*MT[i6, i7] - MT[i1, i8]*MT[i2, i4]*MT[i3, \
i5]*MT[i6, i7] + MT[i1, i4]*MT[i2, i8]*MT[i3, i5]*MT[i6, i7] + MT[i1, \
i5]*MT[i2, i4]*MT[i3, i8]*MT[i6, i7] - MT[i1, i4]*MT[i2, i5]*MT[i3, \
i8]*MT[i6, i7] + MT[i1, i8]*MT[i2, i3]*MT[i4, i5]*MT[i6, i7] - MT[i1, \
i3]*MT[i2, i8]*MT[i4, i5]*MT[i6, i7] + MT[i1, i2]*MT[i3, i8]*MT[i4, \
i5]*MT[i6, i7] - MT[i1, i5]*MT[i2, i3]*MT[i4, i8]*MT[i6, i7] + MT[i1, \
i3]*MT[i2, i5]*MT[i4, i8]*MT[i6, i7] - MT[i1, i2]*MT[i3, i5]*MT[i4, \
i8]*MT[i6, i7] + MT[i1, i4]*MT[i2, i3]*MT[i5, i8]*MT[i6, i7] - MT[i1, \
i3]*MT[i2, i4]*MT[i5, i8]*MT[i6, i7] + MT[i1, i2]*MT[i3, i4]*MT[i5, \
i8]*MT[i6, i7] - MT[i1, i7]*MT[i2, i5]*MT[i3, i4]*MT[i6, i8] + MT[i1, \
i5]*MT[i2, i7]*MT[i3, i4]*MT[i6, i8] + MT[i1, i7]*MT[i2, i4]*MT[i3, \
i5]*MT[i6, i8] - MT[i1, i4]*MT[i2, i7]*MT[i3, i5]*MT[i6, i8] - MT[i1, \
i5]*MT[i2, i4]*MT[i3, i7]*MT[i6, i8] + MT[i1, i4]*MT[i2, i5]*MT[i3, \
i7]*MT[i6, i8] - MT[i1, i7]*MT[i2, i3]*MT[i4, i5]*MT[i6, i8] + MT[i1, \
i3]*MT[i2, i7]*MT[i4, i5]*MT[i6, i8] - MT[i1, i2]*MT[i3, i7]*MT[i4, \
i5]*MT[i6, i8] + MT[i1, i5]*MT[i2, i3]*MT[i4, i7]*MT[i6, i8] - MT[i1, \
i3]*MT[i2, i5]*MT[i4, i7]*MT[i6, i8] + MT[i1, i2]*MT[i3, i5]*MT[i4, \
i7]*MT[i6, i8] - MT[i1, i4]*MT[i2, i3]*MT[i5, i7]*MT[i6, i8] + MT[i1, \
i3]*MT[i2, i4]*MT[i5, i7]*MT[i6, i8] - MT[i1, i2]*MT[i3, i4]*MT[i5, \
i7]*MT[i6, i8] + MT[i1, i6]*MT[i2, i5]*MT[i3, i4]*MT[i7, i8] - MT[i1, \
i5]*MT[i2, i6]*MT[i3, i4]*MT[i7, i8] - MT[i1, i6]*MT[i2, i4]*MT[i3, \
i5]*MT[i7, i8] + MT[i1, i4]*MT[i2, i6]*MT[i3, i5]*MT[i7, i8] + MT[i1, \
i5]*MT[i2, i4]*MT[i3, i6]*MT[i7, i8] - MT[i1, i4]*MT[i2, i5]*MT[i3, \
i6]*MT[i7, i8] + MT[i1, i6]*MT[i2, i3]*MT[i4, i5]*MT[i7, i8] - MT[i1, \
i3]*MT[i2, i6]*MT[i4, i5]*MT[i7, i8] + MT[i1, i2]*MT[i3, i6]*MT[i4, \
i5]*MT[i7, i8] - MT[i1, i5]*MT[i2, i3]*MT[i4, i6]*MT[i7, i8] + MT[i1, \
i3]*MT[i2, i5]*MT[i4, i6]*MT[i7, i8] - MT[i1, i2]*MT[i3, i5]*MT[i4, \
i6]*MT[i7, i8] + MT[i1, i4]*MT[i2, i3]*MT[i5, i6]*MT[i7, i8] - MT[i1, \
i3]*MT[i2, i4]*MT[i5, i6]*MT[i7, i8] + MT[i1, i2]*MT[i3, i4]*MT[i5, \
i6]*MT[i7, i8])"},
{"fcstTRAllFreeNoGamma5-ID8",
"TR[GA[i1,i2,i3,i4,i5,i6,i7,i8,i9]]//FCE", "0"},
{"fcstTRAllFreeNoGamma5-ID9",
"TR[GA[i1,i2,i3,i4,i5,i6,i7,i8,i9,i10]]//FCE",
"4*(-(MT[i1, i9]*MT[i10, i8]*MT[i2, i7]*MT[i3, i6]*MT[i4, i5]) + \
MT[i1, i8]*MT[i10, i9]*MT[i2, i7]*MT[i3, i6]*MT[i4, i5] + MT[i1, \
i9]*MT[i10, i7]*MT[i2, i8]*MT[i3, i6]*MT[i4, i5] - MT[i1, i7]*MT[i10, \
i9]*MT[i2, i8]*MT[i3, i6]*MT[i4, i5] - MT[i1, i8]*MT[i10, i7]*MT[i2, \
i9]*MT[i3, i6]*MT[i4, i5] + MT[i1, i7]*MT[i10, i8]*MT[i2, i9]*MT[i3, \
i6]*MT[i4, i5] + MT[i1, i9]*MT[i10, i8]*MT[i2, i6]*MT[i3, i7]*MT[i4, \
i5] - MT[i1, i8]*MT[i10, i9]*MT[i2, i6]*MT[i3, i7]*MT[i4, i5] - \
MT[i1, i9]*MT[i10, i6]*MT[i2, i8]*MT[i3, i7]*MT[i4, i5] + MT[i1, \
i6]*MT[i10, i9]*MT[i2, i8]*MT[i3, i7]*MT[i4, i5] + MT[i1, i8]*MT[i10, \
i6]*MT[i2, i9]*MT[i3, i7]*MT[i4, i5] - MT[i1, i6]*MT[i10, i8]*MT[i2, \
i9]*MT[i3, i7]*MT[i4, i5] - MT[i1, i9]*MT[i10, i7]*MT[i2, i6]*MT[i3, \
i8]*MT[i4, i5] + MT[i1, i7]*MT[i10, i9]*MT[i2, i6]*MT[i3, i8]*MT[i4, \
i5] + MT[i1, i9]*MT[i10, i6]*MT[i2, i7]*MT[i3, i8]*MT[i4, i5] - \
MT[i1, i6]*MT[i10, i9]*MT[i2, i7]*MT[i3, i8]*MT[i4, i5] - MT[i1, \
i7]*MT[i10, i6]*MT[i2, i9]*MT[i3, i8]*MT[i4, i5] + MT[i1, i6]*MT[i10, \
i7]*MT[i2, i9]*MT[i3, i8]*MT[i4, i5] + MT[i1, i8]*MT[i10, i7]*MT[i2, \
i6]*MT[i3, i9]*MT[i4, i5] - MT[i1, i7]*MT[i10, i8]*MT[i2, i6]*MT[i3, \
i9]*MT[i4, i5] - MT[i1, i8]*MT[i10, i6]*MT[i2, i7]*MT[i3, i9]*MT[i4, \
i5] + MT[i1, i6]*MT[i10, i8]*MT[i2, i7]*MT[i3, i9]*MT[i4, i5] + \
MT[i1, i7]*MT[i10, i6]*MT[i2, i8]*MT[i3, i9]*MT[i4, i5] - MT[i1, \
i6]*MT[i10, i7]*MT[i2, i8]*MT[i3, i9]*MT[i4, i5] + MT[i1, i9]*MT[i10, \
i8]*MT[i2, i7]*MT[i3, i5]*MT[i4, i6] - MT[i1, i8]*MT[i10, i9]*MT[i2, \
i7]*MT[i3, i5]*MT[i4, i6] - MT[i1, i9]*MT[i10, i7]*MT[i2, i8]*MT[i3, \
i5]*MT[i4, i6] + MT[i1, i7]*MT[i10, i9]*MT[i2, i8]*MT[i3, i5]*MT[i4, \
i6] + MT[i1, i8]*MT[i10, i7]*MT[i2, i9]*MT[i3, i5]*MT[i4, i6] - \
MT[i1, i7]*MT[i10, i8]*MT[i2, i9]*MT[i3, i5]*MT[i4, i6] - MT[i1, \
i9]*MT[i10, i8]*MT[i2, i5]*MT[i3, i7]*MT[i4, i6] + MT[i1, i8]*MT[i10, \
i9]*MT[i2, i5]*MT[i3, i7]*MT[i4, i6] + MT[i1, i9]*MT[i10, i5]*MT[i2, \
i8]*MT[i3, i7]*MT[i4, i6] - MT[i1, i5]*MT[i10, i9]*MT[i2, i8]*MT[i3, \
i7]*MT[i4, i6] - MT[i1, i8]*MT[i10, i5]*MT[i2, i9]*MT[i3, i7]*MT[i4, \
i6] + MT[i1, i5]*MT[i10, i8]*MT[i2, i9]*MT[i3, i7]*MT[i4, i6] + \
MT[i1, i9]*MT[i10, i7]*MT[i2, i5]*MT[i3, i8]*MT[i4, i6] - MT[i1, \
i7]*MT[i10, i9]*MT[i2, i5]*MT[i3, i8]*MT[i4, i6] - MT[i1, i9]*MT[i10, \
i5]*MT[i2, i7]*MT[i3, i8]*MT[i4, i6] + MT[i1, i5]*MT[i10, i9]*MT[i2, \
i7]*MT[i3, i8]*MT[i4, i6] + MT[i1, i7]*MT[i10, i5]*MT[i2, i9]*MT[i3, \
i8]*MT[i4, i6] - MT[i1, i5]*MT[i10, i7]*MT[i2, i9]*MT[i3, i8]*MT[i4, \
i6] - MT[i1, i8]*MT[i10, i7]*MT[i2, i5]*MT[i3, i9]*MT[i4, i6] + \
MT[i1, i7]*MT[i10, i8]*MT[i2, i5]*MT[i3, i9]*MT[i4, i6] + MT[i1, \
i8]*MT[i10, i5]*MT[i2, i7]*MT[i3, i9]*MT[i4, i6] - MT[i1, i5]*MT[i10, \
i8]*MT[i2, i7]*MT[i3, i9]*MT[i4, i6] - MT[i1, i7]*MT[i10, i5]*MT[i2, \
i8]*MT[i3, i9]*MT[i4, i6] + MT[i1, i5]*MT[i10, i7]*MT[i2, i8]*MT[i3, \
i9]*MT[i4, i6] - MT[i1, i9]*MT[i10, i8]*MT[i2, i6]*MT[i3, i5]*MT[i4, \
i7] + MT[i1, i8]*MT[i10, i9]*MT[i2, i6]*MT[i3, i5]*MT[i4, i7] + \
MT[i1, i9]*MT[i10, i6]*MT[i2, i8]*MT[i3, i5]*MT[i4, i7] - MT[i1, \
i6]*MT[i10, i9]*MT[i2, i8]*MT[i3, i5]*MT[i4, i7] - MT[i1, i8]*MT[i10, \
i6]*MT[i2, i9]*MT[i3, i5]*MT[i4, i7] + MT[i1, i6]*MT[i10, i8]*MT[i2, \
i9]*MT[i3, i5]*MT[i4, i7] + MT[i1, i9]*MT[i10, i8]*MT[i2, i5]*MT[i3, \
i6]*MT[i4, i7] - MT[i1, i8]*MT[i10, i9]*MT[i2, i5]*MT[i3, i6]*MT[i4, \
i7] - MT[i1, i9]*MT[i10, i5]*MT[i2, i8]*MT[i3, i6]*MT[i4, i7] + \
MT[i1, i5]*MT[i10, i9]*MT[i2, i8]*MT[i3, i6]*MT[i4, i7] + MT[i1, \
i8]*MT[i10, i5]*MT[i2, i9]*MT[i3, i6]*MT[i4, i7] - MT[i1, i5]*MT[i10, \
i8]*MT[i2, i9]*MT[i3, i6]*MT[i4, i7] - MT[i1, i9]*MT[i10, i6]*MT[i2, \
i5]*MT[i3, i8]*MT[i4, i7] + MT[i1, i6]*MT[i10, i9]*MT[i2, i5]*MT[i3, \
i8]*MT[i4, i7] + MT[i1, i9]*MT[i10, i5]*MT[i2, i6]*MT[i3, i8]*MT[i4, \
i7] - MT[i1, i5]*MT[i10, i9]*MT[i2, i6]*MT[i3, i8]*MT[i4, i7] - \
MT[i1, i6]*MT[i10, i5]*MT[i2, i9]*MT[i3, i8]*MT[i4, i7] + MT[i1, \
i5]*MT[i10, i6]*MT[i2, i9]*MT[i3, i8]*MT[i4, i7] + MT[i1, i8]*MT[i10, \
i6]*MT[i2, i5]*MT[i3, i9]*MT[i4, i7] - MT[i1, i6]*MT[i10, i8]*MT[i2, \
i5]*MT[i3, i9]*MT[i4, i7] - MT[i1, i8]*MT[i10, i5]*MT[i2, i6]*MT[i3, \
i9]*MT[i4, i7] + MT[i1, i5]*MT[i10, i8]*MT[i2, i6]*MT[i3, i9]*MT[i4, \
i7] + MT[i1, i6]*MT[i10, i5]*MT[i2, i8]*MT[i3, i9]*MT[i4, i7] - \
MT[i1, i5]*MT[i10, i6]*MT[i2, i8]*MT[i3, i9]*MT[i4, i7] + MT[i1, \
i9]*MT[i10, i7]*MT[i2, i6]*MT[i3, i5]*MT[i4, i8] - MT[i1, i7]*MT[i10, \
i9]*MT[i2, i6]*MT[i3, i5]*MT[i4, i8] - MT[i1, i9]*MT[i10, i6]*MT[i2, \
i7]*MT[i3, i5]*MT[i4, i8] + MT[i1, i6]*MT[i10, i9]*MT[i2, i7]*MT[i3, \
i5]*MT[i4, i8] + MT[i1, i7]*MT[i10, i6]*MT[i2, i9]*MT[i3, i5]*MT[i4, \
i8] - MT[i1, i6]*MT[i10, i7]*MT[i2, i9]*MT[i3, i5]*MT[i4, i8] - \
MT[i1, i9]*MT[i10, i7]*MT[i2, i5]*MT[i3, i6]*MT[i4, i8] + MT[i1, \
i7]*MT[i10, i9]*MT[i2, i5]*MT[i3, i6]*MT[i4, i8] + MT[i1, i9]*MT[i10, \
i5]*MT[i2, i7]*MT[i3, i6]*MT[i4, i8] - MT[i1, i5]*MT[i10, i9]*MT[i2, \
i7]*MT[i3, i6]*MT[i4, i8] - MT[i1, i7]*MT[i10, i5]*MT[i2, i9]*MT[i3, \
i6]*MT[i4, i8] + MT[i1, i5]*MT[i10, i7]*MT[i2, i9]*MT[i3, i6]*MT[i4, \
i8] + MT[i1, i9]*MT[i10, i6]*MT[i2, i5]*MT[i3, i7]*MT[i4, i8] - \
MT[i1, i6]*MT[i10, i9]*MT[i2, i5]*MT[i3, i7]*MT[i4, i8] - MT[i1, \
i9]*MT[i10, i5]*MT[i2, i6]*MT[i3, i7]*MT[i4, i8] + MT[i1, i5]*MT[i10, \
i9]*MT[i2, i6]*MT[i3, i7]*MT[i4, i8] + MT[i1, i6]*MT[i10, i5]*MT[i2, \
i9]*MT[i3, i7]*MT[i4, i8] - MT[i1, i5]*MT[i10, i6]*MT[i2, i9]*MT[i3, \
i7]*MT[i4, i8] - MT[i1, i7]*MT[i10, i6]*MT[i2, i5]*MT[i3, i9]*MT[i4, \
i8] + MT[i1, i6]*MT[i10, i7]*MT[i2, i5]*MT[i3, i9]*MT[i4, i8] + \
MT[i1, i7]*MT[i10, i5]*MT[i2, i6]*MT[i3, i9]*MT[i4, i8] - MT[i1, \
i5]*MT[i10, i7]*MT[i2, i6]*MT[i3, i9]*MT[i4, i8] - MT[i1, i6]*MT[i10, \
i5]*MT[i2, i7]*MT[i3, i9]*MT[i4, i8] + MT[i1, i5]*MT[i10, i6]*MT[i2, \
i7]*MT[i3, i9]*MT[i4, i8] - MT[i1, i8]*MT[i10, i7]*MT[i2, i6]*MT[i3, \
i5]*MT[i4, i9] + MT[i1, i7]*MT[i10, i8]*MT[i2, i6]*MT[i3, i5]*MT[i4, \
i9] + MT[i1, i8]*MT[i10, i6]*MT[i2, i7]*MT[i3, i5]*MT[i4, i9] - \
MT[i1, i6]*MT[i10, i8]*MT[i2, i7]*MT[i3, i5]*MT[i4, i9] - MT[i1, \
i7]*MT[i10, i6]*MT[i2, i8]*MT[i3, i5]*MT[i4, i9] + MT[i1, i6]*MT[i10, \
i7]*MT[i2, i8]*MT[i3, i5]*MT[i4, i9] + MT[i1, i8]*MT[i10, i7]*MT[i2, \
i5]*MT[i3, i6]*MT[i4, i9] - MT[i1, i7]*MT[i10, i8]*MT[i2, i5]*MT[i3, \
i6]*MT[i4, i9] - MT[i1, i8]*MT[i10, i5]*MT[i2, i7]*MT[i3, i6]*MT[i4, \
i9] + MT[i1, i5]*MT[i10, i8]*MT[i2, i7]*MT[i3, i6]*MT[i4, i9] + \
MT[i1, i7]*MT[i10, i5]*MT[i2, i8]*MT[i3, i6]*MT[i4, i9] - MT[i1, \
i5]*MT[i10, i7]*MT[i2, i8]*MT[i3, i6]*MT[i4, i9] - MT[i1, i8]*MT[i10, \
i6]*MT[i2, i5]*MT[i3, i7]*MT[i4, i9] + MT[i1, i6]*MT[i10, i8]*MT[i2, \
i5]*MT[i3, i7]*MT[i4, i9] + MT[i1, i8]*MT[i10, i5]*MT[i2, i6]*MT[i3, \
i7]*MT[i4, i9] - MT[i1, i5]*MT[i10, i8]*MT[i2, i6]*MT[i3, i7]*MT[i4, \
i9] - MT[i1, i6]*MT[i10, i5]*MT[i2, i8]*MT[i3, i7]*MT[i4, i9] + \
MT[i1, i5]*MT[i10, i6]*MT[i2, i8]*MT[i3, i7]*MT[i4, i9] + MT[i1, \
i7]*MT[i10, i6]*MT[i2, i5]*MT[i3, i8]*MT[i4, i9] - MT[i1, i6]*MT[i10, \
i7]*MT[i2, i5]*MT[i3, i8]*MT[i4, i9] - MT[i1, i7]*MT[i10, i5]*MT[i2, \
i6]*MT[i3, i8]*MT[i4, i9] + MT[i1, i5]*MT[i10, i7]*MT[i2, i6]*MT[i3, \
i8]*MT[i4, i9] + MT[i1, i6]*MT[i10, i5]*MT[i2, i7]*MT[i3, i8]*MT[i4, \
i9] - MT[i1, i5]*MT[i10, i6]*MT[i2, i7]*MT[i3, i8]*MT[i4, i9] - \
MT[i1, i9]*MT[i10, i8]*MT[i2, i7]*MT[i3, i4]*MT[i5, i6] + MT[i1, \
i8]*MT[i10, i9]*MT[i2, i7]*MT[i3, i4]*MT[i5, i6] + MT[i1, i9]*MT[i10, \
i7]*MT[i2, i8]*MT[i3, i4]*MT[i5, i6] - MT[i1, i7]*MT[i10, i9]*MT[i2, \
i8]*MT[i3, i4]*MT[i5, i6] - MT[i1, i8]*MT[i10, i7]*MT[i2, i9]*MT[i3, \
i4]*MT[i5, i6] + MT[i1, i7]*MT[i10, i8]*MT[i2, i9]*MT[i3, i4]*MT[i5, \
i6] + MT[i1, i9]*MT[i10, i8]*MT[i2, i4]*MT[i3, i7]*MT[i5, i6] - \
MT[i1, i8]*MT[i10, i9]*MT[i2, i4]*MT[i3, i7]*MT[i5, i6] - MT[i1, \
i9]*MT[i10, i4]*MT[i2, i8]*MT[i3, i7]*MT[i5, i6] + MT[i1, i4]*MT[i10, \
i9]*MT[i2, i8]*MT[i3, i7]*MT[i5, i6] + MT[i1, i8]*MT[i10, i4]*MT[i2, \
i9]*MT[i3, i7]*MT[i5, i6] - MT[i1, i4]*MT[i10, i8]*MT[i2, i9]*MT[i3, \
i7]*MT[i5, i6] - MT[i1, i9]*MT[i10, i7]*MT[i2, i4]*MT[i3, i8]*MT[i5, \
i6] + MT[i1, i7]*MT[i10, i9]*MT[i2, i4]*MT[i3, i8]*MT[i5, i6] + \
MT[i1, i9]*MT[i10, i4]*MT[i2, i7]*MT[i3, i8]*MT[i5, i6] - MT[i1, \
i4]*MT[i10, i9]*MT[i2, i7]*MT[i3, i8]*MT[i5, i6] - MT[i1, i7]*MT[i10, \
i4]*MT[i2, i9]*MT[i3, i8]*MT[i5, i6] + MT[i1, i4]*MT[i10, i7]*MT[i2, \
i9]*MT[i3, i8]*MT[i5, i6] + MT[i1, i8]*MT[i10, i7]*MT[i2, i4]*MT[i3, \
i9]*MT[i5, i6] - MT[i1, i7]*MT[i10, i8]*MT[i2, i4]*MT[i3, i9]*MT[i5, \
i6] - MT[i1, i8]*MT[i10, i4]*MT[i2, i7]*MT[i3, i9]*MT[i5, i6] + \
MT[i1, i4]*MT[i10, i8]*MT[i2, i7]*MT[i3, i9]*MT[i5, i6] + MT[i1, \
i7]*MT[i10, i4]*MT[i2, i8]*MT[i3, i9]*MT[i5, i6] - MT[i1, i4]*MT[i10, \
i7]*MT[i2, i8]*MT[i3, i9]*MT[i5, i6] - MT[i1, i9]*MT[i10, i8]*MT[i2, \
i3]*MT[i4, i7]*MT[i5, i6] + MT[i1, i8]*MT[i10, i9]*MT[i2, i3]*MT[i4, \
i7]*MT[i5, i6] + MT[i1, i9]*MT[i10, i3]*MT[i2, i8]*MT[i4, i7]*MT[i5, \
i6] - MT[i1, i3]*MT[i10, i9]*MT[i2, i8]*MT[i4, i7]*MT[i5, i6] - \
MT[i1, i8]*MT[i10, i3]*MT[i2, i9]*MT[i4, i7]*MT[i5, i6] + MT[i1, \
i3]*MT[i10, i8]*MT[i2, i9]*MT[i4, i7]*MT[i5, i6] - MT[i1, i9]*MT[i10, \
i2]*MT[i3, i8]*MT[i4, i7]*MT[i5, i6] + MT[i1, i2]*MT[i10, i9]*MT[i3, \
i8]*MT[i4, i7]*MT[i5, i6] + MT[i1, i10]*MT[i2, i9]*MT[i3, i8]*MT[i4, \
i7]*MT[i5, i6] + MT[i1, i8]*MT[i10, i2]*MT[i3, i9]*MT[i4, i7]*MT[i5, \
i6] - MT[i1, i2]*MT[i10, i8]*MT[i3, i9]*MT[i4, i7]*MT[i5, i6] - \
MT[i1, i10]*MT[i2, i8]*MT[i3, i9]*MT[i4, i7]*MT[i5, i6] + MT[i1, \
i9]*MT[i10, i7]*MT[i2, i3]*MT[i4, i8]*MT[i5, i6] - MT[i1, i7]*MT[i10, \
i9]*MT[i2, i3]*MT[i4, i8]*MT[i5, i6] - MT[i1, i9]*MT[i10, i3]*MT[i2, \
i7]*MT[i4, i8]*MT[i5, i6] + MT[i1, i3]*MT[i10, i9]*MT[i2, i7]*MT[i4, \
i8]*MT[i5, i6] + MT[i1, i7]*MT[i10, i3]*MT[i2, i9]*MT[i4, i8]*MT[i5, \
i6] - MT[i1, i3]*MT[i10, i7]*MT[i2, i9]*MT[i4, i8]*MT[i5, i6] + \
MT[i1, i9]*MT[i10, i2]*MT[i3, i7]*MT[i4, i8]*MT[i5, i6] - MT[i1, \
i2]*MT[i10, i9]*MT[i3, i7]*MT[i4, i8]*MT[i5, i6] - MT[i1, i10]*MT[i2, \
i9]*MT[i3, i7]*MT[i4, i8]*MT[i5, i6] - MT[i1, i7]*MT[i10, i2]*MT[i3, \
i9]*MT[i4, i8]*MT[i5, i6] + MT[i1, i2]*MT[i10, i7]*MT[i3, i9]*MT[i4, \
i8]*MT[i5, i6] + MT[i1, i10]*MT[i2, i7]*MT[i3, i9]*MT[i4, i8]*MT[i5, \
i6] - MT[i1, i8]*MT[i10, i7]*MT[i2, i3]*MT[i4, i9]*MT[i5, i6] + \
MT[i1, i7]*MT[i10, i8]*MT[i2, i3]*MT[i4, i9]*MT[i5, i6] + MT[i1, \
i8]*MT[i10, i3]*MT[i2, i7]*MT[i4, i9]*MT[i5, i6] - MT[i1, i3]*MT[i10, \
i8]*MT[i2, i7]*MT[i4, i9]*MT[i5, i6] - MT[i1, i7]*MT[i10, i3]*MT[i2, \
i8]*MT[i4, i9]*MT[i5, i6] + MT[i1, i3]*MT[i10, i7]*MT[i2, i8]*MT[i4, \
i9]*MT[i5, i6] - MT[i1, i8]*MT[i10, i2]*MT[i3, i7]*MT[i4, i9]*MT[i5, \
i6] + MT[i1, i2]*MT[i10, i8]*MT[i3, i7]*MT[i4, i9]*MT[i5, i6] + \
MT[i1, i10]*MT[i2, i8]*MT[i3, i7]*MT[i4, i9]*MT[i5, i6] + MT[i1, \
i7]*MT[i10, i2]*MT[i3, i8]*MT[i4, i9]*MT[i5, i6] - MT[i1, i2]*MT[i10, \
i7]*MT[i3, i8]*MT[i4, i9]*MT[i5, i6] - MT[i1, i10]*MT[i2, i7]*MT[i3, \
i8]*MT[i4, i9]*MT[i5, i6] + MT[i1, i9]*MT[i10, i8]*MT[i2, i6]*MT[i3, \
i4]*MT[i5, i7] - MT[i1, i8]*MT[i10, i9]*MT[i2, i6]*MT[i3, i4]*MT[i5, \
i7] - MT[i1, i9]*MT[i10, i6]*MT[i2, i8]*MT[i3, i4]*MT[i5, i7] + \
MT[i1, i6]*MT[i10, i9]*MT[i2, i8]*MT[i3, i4]*MT[i5, i7] + MT[i1, \
i8]*MT[i10, i6]*MT[i2, i9]*MT[i3, i4]*MT[i5, i7] - MT[i1, i6]*MT[i10, \
i8]*MT[i2, i9]*MT[i3, i4]*MT[i5, i7] - MT[i1, i9]*MT[i10, i8]*MT[i2, \
i4]*MT[i3, i6]*MT[i5, i7] + MT[i1, i8]*MT[i10, i9]*MT[i2, i4]*MT[i3, \
i6]*MT[i5, i7] + MT[i1, i9]*MT[i10, i4]*MT[i2, i8]*MT[i3, i6]*MT[i5, \
i7] - MT[i1, i4]*MT[i10, i9]*MT[i2, i8]*MT[i3, i6]*MT[i5, i7] - \
MT[i1, i8]*MT[i10, i4]*MT[i2, i9]*MT[i3, i6]*MT[i5, i7] + MT[i1, \
i4]*MT[i10, i8]*MT[i2, i9]*MT[i3, i6]*MT[i5, i7] + MT[i1, i9]*MT[i10, \
i6]*MT[i2, i4]*MT[i3, i8]*MT[i5, i7] - MT[i1, i6]*MT[i10, i9]*MT[i2, \
i4]*MT[i3, i8]*MT[i5, i7] - MT[i1, i9]*MT[i10, i4]*MT[i2, i6]*MT[i3, \
i8]*MT[i5, i7] + MT[i1, i4]*MT[i10, i9]*MT[i2, i6]*MT[i3, i8]*MT[i5, \
i7] + MT[i1, i6]*MT[i10, i4]*MT[i2, i9]*MT[i3, i8]*MT[i5, i7] - \
MT[i1, i4]*MT[i10, i6]*MT[i2, i9]*MT[i3, i8]*MT[i5, i7] - MT[i1, \
i8]*MT[i10, i6]*MT[i2, i4]*MT[i3, i9]*MT[i5, i7] + MT[i1, i6]*MT[i10, \
i8]*MT[i2, i4]*MT[i3, i9]*MT[i5, i7] + MT[i1, i8]*MT[i10, i4]*MT[i2, \
i6]*MT[i3, i9]*MT[i5, i7] - MT[i1, i4]*MT[i10, i8]*MT[i2, i6]*MT[i3, \
i9]*MT[i5, i7] - MT[i1, i6]*MT[i10, i4]*MT[i2, i8]*MT[i3, i9]*MT[i5, \
i7] + MT[i1, i4]*MT[i10, i6]*MT[i2, i8]*MT[i3, i9]*MT[i5, i7] + \
MT[i1, i9]*MT[i10, i8]*MT[i2, i3]*MT[i4, i6]*MT[i5, i7] - MT[i1, \
i8]*MT[i10, i9]*MT[i2, i3]*MT[i4, i6]*MT[i5, i7] - MT[i1, i9]*MT[i10, \
i3]*MT[i2, i8]*MT[i4, i6]*MT[i5, i7] + MT[i1, i3]*MT[i10, i9]*MT[i2, \
i8]*MT[i4, i6]*MT[i5, i7] + MT[i1, i8]*MT[i10, i3]*MT[i2, i9]*MT[i4, \
i6]*MT[i5, i7] - MT[i1, i3]*MT[i10, i8]*MT[i2, i9]*MT[i4, i6]*MT[i5, \
i7] + MT[i1, i9]*MT[i10, i2]*MT[i3, i8]*MT[i4, i6]*MT[i5, i7] - \
MT[i1, i2]*MT[i10, i9]*MT[i3, i8]*MT[i4, i6]*MT[i5, i7] - MT[i1, \
i10]*MT[i2, i9]*MT[i3, i8]*MT[i4, i6]*MT[i5, i7] - MT[i1, i8]*MT[i10, \
i2]*MT[i3, i9]*MT[i4, i6]*MT[i5, i7] + MT[i1, i2]*MT[i10, i8]*MT[i3, \
i9]*MT[i4, i6]*MT[i5, i7] + MT[i1, i10]*MT[i2, i8]*MT[i3, i9]*MT[i4, \
i6]*MT[i5, i7] - MT[i1, i9]*MT[i10, i6]*MT[i2, i3]*MT[i4, i8]*MT[i5, \
i7] + MT[i1, i6]*MT[i10, i9]*MT[i2, i3]*MT[i4, i8]*MT[i5, i7] + \
MT[i1, i9]*MT[i10, i3]*MT[i2, i6]*MT[i4, i8]*MT[i5, i7] - MT[i1, \
i3]*MT[i10, i9]*MT[i2, i6]*MT[i4, i8]*MT[i5, i7] - MT[i1, i6]*MT[i10, \
i3]*MT[i2, i9]*MT[i4, i8]*MT[i5, i7] + MT[i1, i3]*MT[i10, i6]*MT[i2, \
i9]*MT[i4, i8]*MT[i5, i7] - MT[i1, i9]*MT[i10, i2]*MT[i3, i6]*MT[i4, \
i8]*MT[i5, i7] + MT[i1, i2]*MT[i10, i9]*MT[i3, i6]*MT[i4, i8]*MT[i5, \
i7] + MT[i1, i10]*MT[i2, i9]*MT[i3, i6]*MT[i4, i8]*MT[i5, i7] + \
MT[i1, i6]*MT[i10, i2]*MT[i3, i9]*MT[i4, i8]*MT[i5, i7] - MT[i1, \
i2]*MT[i10, i6]*MT[i3, i9]*MT[i4, i8]*MT[i5, i7] - MT[i1, i10]*MT[i2, \
i6]*MT[i3, i9]*MT[i4, i8]*MT[i5, i7] + MT[i1, i8]*MT[i10, i6]*MT[i2, \
i3]*MT[i4, i9]*MT[i5, i7] - MT[i1, i6]*MT[i10, i8]*MT[i2, i3]*MT[i4, \
i9]*MT[i5, i7] - MT[i1, i8]*MT[i10, i3]*MT[i2, i6]*MT[i4, i9]*MT[i5, \
i7] + MT[i1, i3]*MT[i10, i8]*MT[i2, i6]*MT[i4, i9]*MT[i5, i7] + \
MT[i1, i6]*MT[i10, i3]*MT[i2, i8]*MT[i4, i9]*MT[i5, i7] - MT[i1, \
i3]*MT[i10, i6]*MT[i2, i8]*MT[i4, i9]*MT[i5, i7] + MT[i1, i8]*MT[i10, \
i2]*MT[i3, i6]*MT[i4, i9]*MT[i5, i7] - MT[i1, i2]*MT[i10, i8]*MT[i3, \
i6]*MT[i4, i9]*MT[i5, i7] - MT[i1, i10]*MT[i2, i8]*MT[i3, i6]*MT[i4, \
i9]*MT[i5, i7] - MT[i1, i6]*MT[i10, i2]*MT[i3, i8]*MT[i4, i9]*MT[i5, \
i7] + MT[i1, i2]*MT[i10, i6]*MT[i3, i8]*MT[i4, i9]*MT[i5, i7] + \
MT[i1, i10]*MT[i2, i6]*MT[i3, i8]*MT[i4, i9]*MT[i5, i7] - MT[i1, \
i9]*MT[i10, i7]*MT[i2, i6]*MT[i3, i4]*MT[i5, i8] + MT[i1, i7]*MT[i10, \
i9]*MT[i2, i6]*MT[i3, i4]*MT[i5, i8] + MT[i1, i9]*MT[i10, i6]*MT[i2, \
i7]*MT[i3, i4]*MT[i5, i8] - MT[i1, i6]*MT[i10, i9]*MT[i2, i7]*MT[i3, \
i4]*MT[i5, i8] - MT[i1, i7]*MT[i10, i6]*MT[i2, i9]*MT[i3, i4]*MT[i5, \
i8] + MT[i1, i6]*MT[i10, i7]*MT[i2, i9]*MT[i3, i4]*MT[i5, i8] + \
MT[i1, i9]*MT[i10, i7]*MT[i2, i4]*MT[i3, i6]*MT[i5, i8] - MT[i1, \
i7]*MT[i10, i9]*MT[i2, i4]*MT[i3, i6]*MT[i5, i8] - MT[i1, i9]*MT[i10, \
i4]*MT[i2, i7]*MT[i3, i6]*MT[i5, i8] + MT[i1, i4]*MT[i10, i9]*MT[i2, \
i7]*MT[i3, i6]*MT[i5, i8] + MT[i1, i7]*MT[i10, i4]*MT[i2, i9]*MT[i3, \
i6]*MT[i5, i8] - MT[i1, i4]*MT[i10, i7]*MT[i2, i9]*MT[i3, i6]*MT[i5, \
i8] - MT[i1, i9]*MT[i10, i6]*MT[i2, i4]*MT[i3, i7]*MT[i5, i8] + \
MT[i1, i6]*MT[i10, i9]*MT[i2, i4]*MT[i3, i7]*MT[i5, i8] + MT[i1, \
i9]*MT[i10, i4]*MT[i2, i6]*MT[i3, i7]*MT[i5, i8] - MT[i1, i4]*MT[i10, \
i9]*MT[i2, i6]*MT[i3, i7]*MT[i5, i8] - MT[i1, i6]*MT[i10, i4]*MT[i2, \
i9]*MT[i3, i7]*MT[i5, i8] + MT[i1, i4]*MT[i10, i6]*MT[i2, i9]*MT[i3, \
i7]*MT[i5, i8] + MT[i1, i7]*MT[i10, i6]*MT[i2, i4]*MT[i3, i9]*MT[i5, \
i8] - MT[i1, i6]*MT[i10, i7]*MT[i2, i4]*MT[i3, i9]*MT[i5, i8] - \
MT[i1, i7]*MT[i10, i4]*MT[i2, i6]*MT[i3, i9]*MT[i5, i8] + MT[i1, \
i4]*MT[i10, i7]*MT[i2, i6]*MT[i3, i9]*MT[i5, i8] + MT[i1, i6]*MT[i10, \
i4]*MT[i2, i7]*MT[i3, i9]*MT[i5, i8] - MT[i1, i4]*MT[i10, i6]*MT[i2, \
i7]*MT[i3, i9]*MT[i5, i8] - MT[i1, i9]*MT[i10, i7]*MT[i2, i3]*MT[i4, \
i6]*MT[i5, i8] + MT[i1, i7]*MT[i10, i9]*MT[i2, i3]*MT[i4, i6]*MT[i5, \
i8] + MT[i1, i9]*MT[i10, i3]*MT[i2, i7]*MT[i4, i6]*MT[i5, i8] - \
MT[i1, i3]*MT[i10, i9]*MT[i2, i7]*MT[i4, i6]*MT[i5, i8] - MT[i1, \
i7]*MT[i10, i3]*MT[i2, i9]*MT[i4, i6]*MT[i5, i8] + MT[i1, i3]*MT[i10, \
i7]*MT[i2, i9]*MT[i4, i6]*MT[i5, i8] - MT[i1, i9]*MT[i10, i2]*MT[i3, \
i7]*MT[i4, i6]*MT[i5, i8] + MT[i1, i2]*MT[i10, i9]*MT[i3, i7]*MT[i4, \
i6]*MT[i5, i8] + MT[i1, i10]*MT[i2, i9]*MT[i3, i7]*MT[i4, i6]*MT[i5, \
i8] + MT[i1, i7]*MT[i10, i2]*MT[i3, i9]*MT[i4, i6]*MT[i5, i8] - \
MT[i1, i2]*MT[i10, i7]*MT[i3, i9]*MT[i4, i6]*MT[i5, i8] - MT[i1, \
i10]*MT[i2, i7]*MT[i3, i9]*MT[i4, i6]*MT[i5, i8] + MT[i1, i9]*MT[i10, \
i6]*MT[i2, i3]*MT[i4, i7]*MT[i5, i8] - MT[i1, i6]*MT[i10, i9]*MT[i2, \
i3]*MT[i4, i7]*MT[i5, i8] - MT[i1, i9]*MT[i10, i3]*MT[i2, i6]*MT[i4, \
i7]*MT[i5, i8] + MT[i1, i3]*MT[i10, i9]*MT[i2, i6]*MT[i4, i7]*MT[i5, \
i8] + MT[i1, i6]*MT[i10, i3]*MT[i2, i9]*MT[i4, i7]*MT[i5, i8] - \
MT[i1, i3]*MT[i10, i6]*MT[i2, i9]*MT[i4, i7]*MT[i5, i8] + MT[i1, \
i9]*MT[i10, i2]*MT[i3, i6]*MT[i4, i7]*MT[i5, i8] - MT[i1, i2]*MT[i10, \
i9]*MT[i3, i6]*MT[i4, i7]*MT[i5, i8] - MT[i1, i10]*MT[i2, i9]*MT[i3, \
i6]*MT[i4, i7]*MT[i5, i8] - MT[i1, i6]*MT[i10, i2]*MT[i3, i9]*MT[i4, \
i7]*MT[i5, i8] + MT[i1, i2]*MT[i10, i6]*MT[i3, i9]*MT[i4, i7]*MT[i5, \
i8] + MT[i1, i10]*MT[i2, i6]*MT[i3, i9]*MT[i4, i7]*MT[i5, i8] - \
MT[i1, i7]*MT[i10, i6]*MT[i2, i3]*MT[i4, i9]*MT[i5, i8] + MT[i1, \
i6]*MT[i10, i7]*MT[i2, i3]*MT[i4, i9]*MT[i5, i8] + MT[i1, i7]*MT[i10, \
i3]*MT[i2, i6]*MT[i4, i9]*MT[i5, i8] - MT[i1, i3]*MT[i10, i7]*MT[i2, \
i6]*MT[i4, i9]*MT[i5, i8] - MT[i1, i6]*MT[i10, i3]*MT[i2, i7]*MT[i4, \
i9]*MT[i5, i8] + MT[i1, i3]*MT[i10, i6]*MT[i2, i7]*MT[i4, i9]*MT[i5, \
i8] - MT[i1, i7]*MT[i10, i2]*MT[i3, i6]*MT[i4, i9]*MT[i5, i8] + \
MT[i1, i2]*MT[i10, i7]*MT[i3, i6]*MT[i4, i9]*MT[i5, i8] + MT[i1, \
i10]*MT[i2, i7]*MT[i3, i6]*MT[i4, i9]*MT[i5, i8] + MT[i1, i6]*MT[i10, \
i2]*MT[i3, i7]*MT[i4, i9]*MT[i5, i8] - MT[i1, i2]*MT[i10, i6]*MT[i3, \
i7]*MT[i4, i9]*MT[i5, i8] - MT[i1, i10]*MT[i2, i6]*MT[i3, i7]*MT[i4, \
i9]*MT[i5, i8] + MT[i1, i8]*MT[i10, i7]*MT[i2, i6]*MT[i3, i4]*MT[i5, \
i9] - MT[i1, i7]*MT[i10, i8]*MT[i2, i6]*MT[i3, i4]*MT[i5, i9] - \
MT[i1, i8]*MT[i10, i6]*MT[i2, i7]*MT[i3, i4]*MT[i5, i9] + MT[i1, \
i6]*MT[i10, i8]*MT[i2, i7]*MT[i3, i4]*MT[i5, i9] + MT[i1, i7]*MT[i10, \
i6]*MT[i2, i8]*MT[i3, i4]*MT[i5, i9] - MT[i1, i6]*MT[i10, i7]*MT[i2, \
i8]*MT[i3, i4]*MT[i5, i9] - MT[i1, i8]*MT[i10, i7]*MT[i2, i4]*MT[i3, \
i6]*MT[i5, i9] + MT[i1, i7]*MT[i10, i8]*MT[i2, i4]*MT[i3, i6]*MT[i5, \
i9] + MT[i1, i8]*MT[i10, i4]*MT[i2, i7]*MT[i3, i6]*MT[i5, i9] - \
MT[i1, i4]*MT[i10, i8]*MT[i2, i7]*MT[i3, i6]*MT[i5, i9] - MT[i1, \
i7]*MT[i10, i4]*MT[i2, i8]*MT[i3, i6]*MT[i5, i9] + MT[i1, i4]*MT[i10, \
i7]*MT[i2, i8]*MT[i3, i6]*MT[i5, i9] + MT[i1, i8]*MT[i10, i6]*MT[i2, \
i4]*MT[i3, i7]*MT[i5, i9] - MT[i1, i6]*MT[i10, i8]*MT[i2, i4]*MT[i3, \
i7]*MT[i5, i9] - MT[i1, i8]*MT[i10, i4]*MT[i2, i6]*MT[i3, i7]*MT[i5, \
i9] + MT[i1, i4]*MT[i10, i8]*MT[i2, i6]*MT[i3, i7]*MT[i5, i9] + \
MT[i1, i6]*MT[i10, i4]*MT[i2, i8]*MT[i3, i7]*MT[i5, i9] - MT[i1, \
i4]*MT[i10, i6]*MT[i2, i8]*MT[i3, i7]*MT[i5, i9] - MT[i1, i7]*MT[i10, \
i6]*MT[i2, i4]*MT[i3, i8]*MT[i5, i9] + MT[i1, i6]*MT[i10, i7]*MT[i2, \
i4]*MT[i3, i8]*MT[i5, i9] + MT[i1, i7]*MT[i10, i4]*MT[i2, i6]*MT[i3, \
i8]*MT[i5, i9] - MT[i1, i4]*MT[i10, i7]*MT[i2, i6]*MT[i3, i8]*MT[i5, \
i9] - MT[i1, i6]*MT[i10, i4]*MT[i2, i7]*MT[i3, i8]*MT[i5, i9] + \
MT[i1, i4]*MT[i10, i6]*MT[i2, i7]*MT[i3, i8]*MT[i5, i9] + MT[i1, \
i8]*MT[i10, i7]*MT[i2, i3]*MT[i4, i6]*MT[i5, i9] - MT[i1, i7]*MT[i10, \
i8]*MT[i2, i3]*MT[i4, i6]*MT[i5, i9] - MT[i1, i8]*MT[i10, i3]*MT[i2, \
i7]*MT[i4, i6]*MT[i5, i9] + MT[i1, i3]*MT[i10, i8]*MT[i2, i7]*MT[i4, \
i6]*MT[i5, i9] + MT[i1, i7]*MT[i10, i3]*MT[i2, i8]*MT[i4, i6]*MT[i5, \
i9] - MT[i1, i3]*MT[i10, i7]*MT[i2, i8]*MT[i4, i6]*MT[i5, i9] + \
MT[i1, i8]*MT[i10, i2]*MT[i3, i7]*MT[i4, i6]*MT[i5, i9] - MT[i1, \
i2]*MT[i10, i8]*MT[i3, i7]*MT[i4, i6]*MT[i5, i9] - MT[i1, i10]*MT[i2, \
i8]*MT[i3, i7]*MT[i4, i6]*MT[i5, i9] - MT[i1, i7]*MT[i10, i2]*MT[i3, \
i8]*MT[i4, i6]*MT[i5, i9] + MT[i1, i2]*MT[i10, i7]*MT[i3, i8]*MT[i4, \
i6]*MT[i5, i9] + MT[i1, i10]*MT[i2, i7]*MT[i3, i8]*MT[i4, i6]*MT[i5, \
i9] - MT[i1, i8]*MT[i10, i6]*MT[i2, i3]*MT[i4, i7]*MT[i5, i9] + \
MT[i1, i6]*MT[i10, i8]*MT[i2, i3]*MT[i4, i7]*MT[i5, i9] + MT[i1, \
i8]*MT[i10, i3]*MT[i2, i6]*MT[i4, i7]*MT[i5, i9] - MT[i1, i3]*MT[i10, \
i8]*MT[i2, i6]*MT[i4, i7]*MT[i5, i9] - MT[i1, i6]*MT[i10, i3]*MT[i2, \
i8]*MT[i4, i7]*MT[i5, i9] + MT[i1, i3]*MT[i10, i6]*MT[i2, i8]*MT[i4, \
i7]*MT[i5, i9] - MT[i1, i8]*MT[i10, i2]*MT[i3, i6]*MT[i4, i7]*MT[i5, \
i9] + MT[i1, i2]*MT[i10, i8]*MT[i3, i6]*MT[i4, i7]*MT[i5, i9] + \
MT[i1, i10]*MT[i2, i8]*MT[i3, i6]*MT[i4, i7]*MT[i5, i9] + MT[i1, \
i6]*MT[i10, i2]*MT[i3, i8]*MT[i4, i7]*MT[i5, i9] - MT[i1, i2]*MT[i10, \
i6]*MT[i3, i8]*MT[i4, i7]*MT[i5, i9] - MT[i1, i10]*MT[i2, i6]*MT[i3, \
i8]*MT[i4, i7]*MT[i5, i9] + MT[i1, i7]*MT[i10, i6]*MT[i2, i3]*MT[i4, \
i8]*MT[i5, i9] - MT[i1, i6]*MT[i10, i7]*MT[i2, i3]*MT[i4, i8]*MT[i5, \
i9] - MT[i1, i7]*MT[i10, i3]*MT[i2, i6]*MT[i4, i8]*MT[i5, i9] + \
MT[i1, i3]*MT[i10, i7]*MT[i2, i6]*MT[i4, i8]*MT[i5, i9] + MT[i1, \
i6]*MT[i10, i3]*MT[i2, i7]*MT[i4, i8]*MT[i5, i9] - MT[i1, i3]*MT[i10, \
i6]*MT[i2, i7]*MT[i4, i8]*MT[i5, i9] + MT[i1, i7]*MT[i10, i2]*MT[i3, \
i6]*MT[i4, i8]*MT[i5, i9] - MT[i1, i2]*MT[i10, i7]*MT[i3, i6]*MT[i4, \
i8]*MT[i5, i9] - MT[i1, i10]*MT[i2, i7]*MT[i3, i6]*MT[i4, i8]*MT[i5, \
i9] - MT[i1, i6]*MT[i10, i2]*MT[i3, i7]*MT[i4, i8]*MT[i5, i9] + \
MT[i1, i2]*MT[i10, i6]*MT[i3, i7]*MT[i4, i8]*MT[i5, i9] + MT[i1, \
i10]*MT[i2, i6]*MT[i3, i7]*MT[i4, i8]*MT[i5, i9] - MT[i1, i9]*MT[i10, \
i8]*MT[i2, i5]*MT[i3, i4]*MT[i6, i7] + MT[i1, i8]*MT[i10, i9]*MT[i2, \
i5]*MT[i3, i4]*MT[i6, i7] + MT[i1, i9]*MT[i10, i5]*MT[i2, i8]*MT[i3, \
i4]*MT[i6, i7] - MT[i1, i5]*MT[i10, i9]*MT[i2, i8]*MT[i3, i4]*MT[i6, \
i7] - MT[i1, i8]*MT[i10, i5]*MT[i2, i9]*MT[i3, i4]*MT[i6, i7] + \
MT[i1, i5]*MT[i10, i8]*MT[i2, i9]*MT[i3, i4]*MT[i6, i7] + MT[i1, \
i9]*MT[i10, i8]*MT[i2, i4]*MT[i3, i5]*MT[i6, i7] - MT[i1, i8]*MT[i10, \
i9]*MT[i2, i4]*MT[i3, i5]*MT[i6, i7] - MT[i1, i9]*MT[i10, i4]*MT[i2, \
i8]*MT[i3, i5]*MT[i6, i7] + MT[i1, i4]*MT[i10, i9]*MT[i2, i8]*MT[i3, \
i5]*MT[i6, i7] + MT[i1, i8]*MT[i10, i4]*MT[i2, i9]*MT[i3, i5]*MT[i6, \
i7] - MT[i1, i4]*MT[i10, i8]*MT[i2, i9]*MT[i3, i5]*MT[i6, i7] - \
MT[i1, i9]*MT[i10, i5]*MT[i2, i4]*MT[i3, i8]*MT[i6, i7] + MT[i1, \
i5]*MT[i10, i9]*MT[i2, i4]*MT[i3, i8]*MT[i6, i7] + MT[i1, i9]*MT[i10, \
i4]*MT[i2, i5]*MT[i3, i8]*MT[i6, i7] - MT[i1, i4]*MT[i10, i9]*MT[i2, \
i5]*MT[i3, i8]*MT[i6, i7] - MT[i1, i5]*MT[i10, i4]*MT[i2, i9]*MT[i3, \
i8]*MT[i6, i7] + MT[i1, i4]*MT[i10, i5]*MT[i2, i9]*MT[i3, i8]*MT[i6, \
i7] + MT[i1, i8]*MT[i10, i5]*MT[i2, i4]*MT[i3, i9]*MT[i6, i7] - \
MT[i1, i5]*MT[i10, i8]*MT[i2, i4]*MT[i3, i9]*MT[i6, i7] - MT[i1, \
i8]*MT[i10, i4]*MT[i2, i5]*MT[i3, i9]*MT[i6, i7] + MT[i1, i4]*MT[i10, \
i8]*MT[i2, i5]*MT[i3, i9]*MT[i6, i7] + MT[i1, i5]*MT[i10, i4]*MT[i2, \
i8]*MT[i3, i9]*MT[i6, i7] - MT[i1, i4]*MT[i10, i5]*MT[i2, i8]*MT[i3, \
i9]*MT[i6, i7] - MT[i1, i9]*MT[i10, i8]*MT[i2, i3]*MT[i4, i5]*MT[i6, \
i7] + MT[i1, i8]*MT[i10, i9]*MT[i2, i3]*MT[i4, i5]*MT[i6, i7] + \
MT[i1, i9]*MT[i10, i3]*MT[i2, i8]*MT[i4, i5]*MT[i6, i7] - MT[i1, \
i3]*MT[i10, i9]*MT[i2, i8]*MT[i4, i5]*MT[i6, i7] - MT[i1, i8]*MT[i10, \
i3]*MT[i2, i9]*MT[i4, i5]*MT[i6, i7] + MT[i1, i3]*MT[i10, i8]*MT[i2, \
i9]*MT[i4, i5]*MT[i6, i7] - MT[i1, i9]*MT[i10, i2]*MT[i3, i8]*MT[i4, \
i5]*MT[i6, i7] + MT[i1, i2]*MT[i10, i9]*MT[i3, i8]*MT[i4, i5]*MT[i6, \
i7] + MT[i1, i10]*MT[i2, i9]*MT[i3, i8]*MT[i4, i5]*MT[i6, i7] + \
MT[i1, i8]*MT[i10, i2]*MT[i3, i9]*MT[i4, i5]*MT[i6, i7] - MT[i1, \
i2]*MT[i10, i8]*MT[i3, i9]*MT[i4, i5]*MT[i6, i7] - MT[i1, i10]*MT[i2, \
i8]*MT[i3, i9]*MT[i4, i5]*MT[i6, i7] + MT[i1, i9]*MT[i10, i5]*MT[i2, \
i3]*MT[i4, i8]*MT[i6, i7] - MT[i1, i5]*MT[i10, i9]*MT[i2, i3]*MT[i4, \
i8]*MT[i6, i7] - MT[i1, i9]*MT[i10, i3]*MT[i2, i5]*MT[i4, i8]*MT[i6, \
i7] + MT[i1, i3]*MT[i10, i9]*MT[i2, i5]*MT[i4, i8]*MT[i6, i7] + \
MT[i1, i5]*MT[i10, i3]*MT[i2, i9]*MT[i4, i8]*MT[i6, i7] - MT[i1, \
i3]*MT[i10, i5]*MT[i2, i9]*MT[i4, i8]*MT[i6, i7] + MT[i1, i9]*MT[i10, \
i2]*MT[i3, i5]*MT[i4, i8]*MT[i6, i7] - MT[i1, i2]*MT[i10, i9]*MT[i3, \
i5]*MT[i4, i8]*MT[i6, i7] - MT[i1, i10]*MT[i2, i9]*MT[i3, i5]*MT[i4, \
i8]*MT[i6, i7] - MT[i1, i5]*MT[i10, i2]*MT[i3, i9]*MT[i4, i8]*MT[i6, \
i7] + MT[i1, i2]*MT[i10, i5]*MT[i3, i9]*MT[i4, i8]*MT[i6, i7] + \
MT[i1, i10]*MT[i2, i5]*MT[i3, i9]*MT[i4, i8]*MT[i6, i7] - MT[i1, \
i8]*MT[i10, i5]*MT[i2, i3]*MT[i4, i9]*MT[i6, i7] + MT[i1, i5]*MT[i10, \
i8]*MT[i2, i3]*MT[i4, i9]*MT[i6, i7] + MT[i1, i8]*MT[i10, i3]*MT[i2, \
i5]*MT[i4, i9]*MT[i6, i7] - MT[i1, i3]*MT[i10, i8]*MT[i2, i5]*MT[i4, \
i9]*MT[i6, i7] - MT[i1, i5]*MT[i10, i3]*MT[i2, i8]*MT[i4, i9]*MT[i6, \
i7] + MT[i1, i3]*MT[i10, i5]*MT[i2, i8]*MT[i4, i9]*MT[i6, i7] - \
MT[i1, i8]*MT[i10, i2]*MT[i3, i5]*MT[i4, i9]*MT[i6, i7] + MT[i1, \
i2]*MT[i10, i8]*MT[i3, i5]*MT[i4, i9]*MT[i6, i7] + MT[i1, i10]*MT[i2, \
i8]*MT[i3, i5]*MT[i4, i9]*MT[i6, i7] + MT[i1, i5]*MT[i10, i2]*MT[i3, \
i8]*MT[i4, i9]*MT[i6, i7] - MT[i1, i2]*MT[i10, i5]*MT[i3, i8]*MT[i4, \
i9]*MT[i6, i7] - MT[i1, i10]*MT[i2, i5]*MT[i3, i8]*MT[i4, i9]*MT[i6, \
i7] - MT[i1, i9]*MT[i10, i4]*MT[i2, i3]*MT[i5, i8]*MT[i6, i7] + \
MT[i1, i4]*MT[i10, i9]*MT[i2, i3]*MT[i5, i8]*MT[i6, i7] + MT[i1, \
i9]*MT[i10, i3]*MT[i2, i4]*MT[i5, i8]*MT[i6, i7] - MT[i1, i3]*MT[i10, \
i9]*MT[i2, i4]*MT[i5, i8]*MT[i6, i7] - MT[i1, i4]*MT[i10, i3]*MT[i2, \
i9]*MT[i5, i8]*MT[i6, i7] + MT[i1, i3]*MT[i10, i4]*MT[i2, i9]*MT[i5, \
i8]*MT[i6, i7] - MT[i1, i9]*MT[i10, i2]*MT[i3, i4]*MT[i5, i8]*MT[i6, \
i7] + MT[i1, i2]*MT[i10, i9]*MT[i3, i4]*MT[i5, i8]*MT[i6, i7] + \
MT[i1, i10]*MT[i2, i9]*MT[i3, i4]*MT[i5, i8]*MT[i6, i7] + MT[i1, \
i4]*MT[i10, i2]*MT[i3, i9]*MT[i5, i8]*MT[i6, i7] - MT[i1, i2]*MT[i10, \
i4]*MT[i3, i9]*MT[i5, i8]*MT[i6, i7] - MT[i1, i10]*MT[i2, i4]*MT[i3, \
i9]*MT[i5, i8]*MT[i6, i7] - MT[i1, i3]*MT[i10, i2]*MT[i4, i9]*MT[i5, \
i8]*MT[i6, i7] + MT[i1, i2]*MT[i10, i3]*MT[i4, i9]*MT[i5, i8]*MT[i6, \
i7] + MT[i1, i10]*MT[i2, i3]*MT[i4, i9]*MT[i5, i8]*MT[i6, i7] + \
MT[i1, i8]*MT[i10, i4]*MT[i2, i3]*MT[i5, i9]*MT[i6, i7] - MT[i1, \
i4]*MT[i10, i8]*MT[i2, i3]*MT[i5, i9]*MT[i6, i7] - MT[i1, i8]*MT[i10, \
i3]*MT[i2, i4]*MT[i5, i9]*MT[i6, i7] + MT[i1, i3]*MT[i10, i8]*MT[i2, \
i4]*MT[i5, i9]*MT[i6, i7] + MT[i1, i4]*MT[i10, i3]*MT[i2, i8]*MT[i5, \
i9]*MT[i6, i7] - MT[i1, i3]*MT[i10, i4]*MT[i2, i8]*MT[i5, i9]*MT[i6, \
i7] + MT[i1, i8]*MT[i10, i2]*MT[i3, i4]*MT[i5, i9]*MT[i6, i7] - \
MT[i1, i2]*MT[i10, i8]*MT[i3, i4]*MT[i5, i9]*MT[i6, i7] - MT[i1, \
i10]*MT[i2, i8]*MT[i3, i4]*MT[i5, i9]*MT[i6, i7] - MT[i1, i4]*MT[i10, \
i2]*MT[i3, i8]*MT[i5, i9]*MT[i6, i7] + MT[i1, i2]*MT[i10, i4]*MT[i3, \
i8]*MT[i5, i9]*MT[i6, i7] + MT[i1, i10]*MT[i2, i4]*MT[i3, i8]*MT[i5, \
i9]*MT[i6, i7] + MT[i1, i3]*MT[i10, i2]*MT[i4, i8]*MT[i5, i9]*MT[i6, \
i7] - MT[i1, i2]*MT[i10, i3]*MT[i4, i8]*MT[i5, i9]*MT[i6, i7] - \
MT[i1, i10]*MT[i2, i3]*MT[i4, i8]*MT[i5, i9]*MT[i6, i7] + MT[i1, \
i9]*MT[i10, i7]*MT[i2, i5]*MT[i3, i4]*MT[i6, i8] - MT[i1, i7]*MT[i10, \
i9]*MT[i2, i5]*MT[i3, i4]*MT[i6, i8] - MT[i1, i9]*MT[i10, i5]*MT[i2, \
i7]*MT[i3, i4]*MT[i6, i8] + MT[i1, i5]*MT[i10, i9]*MT[i2, i7]*MT[i3, \
i4]*MT[i6, i8] + MT[i1, i7]*MT[i10, i5]*MT[i2, i9]*MT[i3, i4]*MT[i6, \
i8] - MT[i1, i5]*MT[i10, i7]*MT[i2, i9]*MT[i3, i4]*MT[i6, i8] - \
MT[i1, i9]*MT[i10, i7]*MT[i2, i4]*MT[i3, i5]*MT[i6, i8] + MT[i1, \
i7]*MT[i10, i9]*MT[i2, i4]*MT[i3, i5]*MT[i6, i8] + MT[i1, i9]*MT[i10, \
i4]*MT[i2, i7]*MT[i3, i5]*MT[i6, i8] - MT[i1, i4]*MT[i10, i9]*MT[i2, \
i7]*MT[i3, i5]*MT[i6, i8] - MT[i1, i7]*MT[i10, i4]*MT[i2, i9]*MT[i3, \
i5]*MT[i6, i8] + MT[i1, i4]*MT[i10, i7]*MT[i2, i9]*MT[i3, i5]*MT[i6, \
i8] + MT[i1, i9]*MT[i10, i5]*MT[i2, i4]*MT[i3, i7]*MT[i6, i8] - \
MT[i1, i5]*MT[i10, i9]*MT[i2, i4]*MT[i3, i7]*MT[i6, i8] - MT[i1, \
i9]*MT[i10, i4]*MT[i2, i5]*MT[i3, i7]*MT[i6, i8] + MT[i1, i4]*MT[i10, \
i9]*MT[i2, i5]*MT[i3, i7]*MT[i6, i8] + MT[i1, i5]*MT[i10, i4]*MT[i2, \
i9]*MT[i3, i7]*MT[i6, i8] - MT[i1, i4]*MT[i10, i5]*MT[i2, i9]*MT[i3, \
i7]*MT[i6, i8] - MT[i1, i7]*MT[i10, i5]*MT[i2, i4]*MT[i3, i9]*MT[i6, \
i8] + MT[i1, i5]*MT[i10, i7]*MT[i2, i4]*MT[i3, i9]*MT[i6, i8] + \
MT[i1, i7]*MT[i10, i4]*MT[i2, i5]*MT[i3, i9]*MT[i6, i8] - MT[i1, \
i4]*MT[i10, i7]*MT[i2, i5]*MT[i3, i9]*MT[i6, i8] - MT[i1, i5]*MT[i10, \
i4]*MT[i2, i7]*MT[i3, i9]*MT[i6, i8] + MT[i1, i4]*MT[i10, i5]*MT[i2, \
i7]*MT[i3, i9]*MT[i6, i8] + MT[i1, i9]*MT[i10, i7]*MT[i2, i3]*MT[i4, \
i5]*MT[i6, i8] - MT[i1, i7]*MT[i10, i9]*MT[i2, i3]*MT[i4, i5]*MT[i6, \
i8] - MT[i1, i9]*MT[i10, i3]*MT[i2, i7]*MT[i4, i5]*MT[i6, i8] + \
MT[i1, i3]*MT[i10, i9]*MT[i2, i7]*MT[i4, i5]*MT[i6, i8] + MT[i1, \
i7]*MT[i10, i3]*MT[i2, i9]*MT[i4, i5]*MT[i6, i8] - MT[i1, i3]*MT[i10, \
i7]*MT[i2, i9]*MT[i4, i5]*MT[i6, i8] + MT[i1, i9]*MT[i10, i2]*MT[i3, \
i7]*MT[i4, i5]*MT[i6, i8] - MT[i1, i2]*MT[i10, i9]*MT[i3, i7]*MT[i4, \
i5]*MT[i6, i8] - MT[i1, i10]*MT[i2, i9]*MT[i3, i7]*MT[i4, i5]*MT[i6, \
i8] - MT[i1, i7]*MT[i10, i2]*MT[i3, i9]*MT[i4, i5]*MT[i6, i8] + \
MT[i1, i2]*MT[i10, i7]*MT[i3, i9]*MT[i4, i5]*MT[i6, i8] + MT[i1, \
i10]*MT[i2, i7]*MT[i3, i9]*MT[i4, i5]*MT[i6, i8] - MT[i1, i9]*MT[i10, \
i5]*MT[i2, i3]*MT[i4, i7]*MT[i6, i8] + MT[i1, i5]*MT[i10, i9]*MT[i2, \
i3]*MT[i4, i7]*MT[i6, i8] + MT[i1, i9]*MT[i10, i3]*MT[i2, i5]*MT[i4, \
i7]*MT[i6, i8] - MT[i1, i3]*MT[i10, i9]*MT[i2, i5]*MT[i4, i7]*MT[i6, \
i8] - MT[i1, i5]*MT[i10, i3]*MT[i2, i9]*MT[i4, i7]*MT[i6, i8] + \
MT[i1, i3]*MT[i10, i5]*MT[i2, i9]*MT[i4, i7]*MT[i6, i8] - MT[i1, \
i9]*MT[i10, i2]*MT[i3, i5]*MT[i4, i7]*MT[i6, i8] + MT[i1, i2]*MT[i10, \
i9]*MT[i3, i5]*MT[i4, i7]*MT[i6, i8] + MT[i1, i10]*MT[i2, i9]*MT[i3, \
i5]*MT[i4, i7]*MT[i6, i8] + MT[i1, i5]*MT[i10, i2]*MT[i3, i9]*MT[i4, \
i7]*MT[i6, i8] - MT[i1, i2]*MT[i10, i5]*MT[i3, i9]*MT[i4, i7]*MT[i6, \
i8] - MT[i1, i10]*MT[i2, i5]*MT[i3, i9]*MT[i4, i7]*MT[i6, i8] + \
MT[i1, i7]*MT[i10, i5]*MT[i2, i3]*MT[i4, i9]*MT[i6, i8] - MT[i1, \
i5]*MT[i10, i7]*MT[i2, i3]*MT[i4, i9]*MT[i6, i8] - MT[i1, i7]*MT[i10, \
i3]*MT[i2, i5]*MT[i4, i9]*MT[i6, i8] + MT[i1, i3]*MT[i10, i7]*MT[i2, \
i5]*MT[i4, i9]*MT[i6, i8] + MT[i1, i5]*MT[i10, i3]*MT[i2, i7]*MT[i4, \
i9]*MT[i6, i8] - MT[i1, i3]*MT[i10, i5]*MT[i2, i7]*MT[i4, i9]*MT[i6, \
i8] + MT[i1, i7]*MT[i10, i2]*MT[i3, i5]*MT[i4, i9]*MT[i6, i8] - \
MT[i1, i2]*MT[i10, i7]*MT[i3, i5]*MT[i4, i9]*MT[i6, i8] - MT[i1, \
i10]*MT[i2, i7]*MT[i3, i5]*MT[i4, i9]*MT[i6, i8] - MT[i1, i5]*MT[i10, \
i2]*MT[i3, i7]*MT[i4, i9]*MT[i6, i8] + MT[i1, i2]*MT[i10, i5]*MT[i3, \
i7]*MT[i4, i9]*MT[i6, i8] + MT[i1, i10]*MT[i2, i5]*MT[i3, i7]*MT[i4, \
i9]*MT[i6, i8] + MT[i1, i9]*MT[i10, i4]*MT[i2, i3]*MT[i5, i7]*MT[i6, \
i8] - MT[i1, i4]*MT[i10, i9]*MT[i2, i3]*MT[i5, i7]*MT[i6, i8] - \
MT[i1, i9]*MT[i10, i3]*MT[i2, i4]*MT[i5, i7]*MT[i6, i8] + MT[i1, \
i3]*MT[i10, i9]*MT[i2, i4]*MT[i5, i7]*MT[i6, i8] + MT[i1, i4]*MT[i10, \
i3]*MT[i2, i9]*MT[i5, i7]*MT[i6, i8] - MT[i1, i3]*MT[i10, i4]*MT[i2, \
i9]*MT[i5, i7]*MT[i6, i8] + MT[i1, i9]*MT[i10, i2]*MT[i3, i4]*MT[i5, \
i7]*MT[i6, i8] - MT[i1, i2]*MT[i10, i9]*MT[i3, i4]*MT[i5, i7]*MT[i6, \
i8] - MT[i1, i10]*MT[i2, i9]*MT[i3, i4]*MT[i5, i7]*MT[i6, i8] - \
MT[i1, i4]*MT[i10, i2]*MT[i3, i9]*MT[i5, i7]*MT[i6, i8] + MT[i1, \
i2]*MT[i10, i4]*MT[i3, i9]*MT[i5, i7]*MT[i6, i8] + MT[i1, i10]*MT[i2, \
i4]*MT[i3, i9]*MT[i5, i7]*MT[i6, i8] + MT[i1, i3]*MT[i10, i2]*MT[i4, \
i9]*MT[i5, i7]*MT[i6, i8] - MT[i1, i2]*MT[i10, i3]*MT[i4, i9]*MT[i5, \
i7]*MT[i6, i8] - MT[i1, i10]*MT[i2, i3]*MT[i4, i9]*MT[i5, i7]*MT[i6, \
i8] - MT[i1, i7]*MT[i10, i4]*MT[i2, i3]*MT[i5, i9]*MT[i6, i8] + \
MT[i1, i4]*MT[i10, i7]*MT[i2, i3]*MT[i5, i9]*MT[i6, i8] + MT[i1, \
i7]*MT[i10, i3]*MT[i2, i4]*MT[i5, i9]*MT[i6, i8] - MT[i1, i3]*MT[i10, \
i7]*MT[i2, i4]*MT[i5, i9]*MT[i6, i8] - MT[i1, i4]*MT[i10, i3]*MT[i2, \
i7]*MT[i5, i9]*MT[i6, i8] + MT[i1, i3]*MT[i10, i4]*MT[i2, i7]*MT[i5, \
i9]*MT[i6, i8] - MT[i1, i7]*MT[i10, i2]*MT[i3, i4]*MT[i5, i9]*MT[i6, \
i8] + MT[i1, i2]*MT[i10, i7]*MT[i3, i4]*MT[i5, i9]*MT[i6, i8] + \
MT[i1, i10]*MT[i2, i7]*MT[i3, i4]*MT[i5, i9]*MT[i6, i8] + MT[i1, \
i4]*MT[i10, i2]*MT[i3, i7]*MT[i5, i9]*MT[i6, i8] - MT[i1, i2]*MT[i10, \
i4]*MT[i3, i7]*MT[i5, i9]*MT[i6, i8] - MT[i1, i10]*MT[i2, i4]*MT[i3, \
i7]*MT[i5, i9]*MT[i6, i8] - MT[i1, i3]*MT[i10, i2]*MT[i4, i7]*MT[i5, \
i9]*MT[i6, i8] + MT[i1, i2]*MT[i10, i3]*MT[i4, i7]*MT[i5, i9]*MT[i6, \
i8] + MT[i1, i10]*MT[i2, i3]*MT[i4, i7]*MT[i5, i9]*MT[i6, i8] - \
MT[i1, i8]*MT[i10, i7]*MT[i2, i5]*MT[i3, i4]*MT[i6, i9] + MT[i1, \
i7]*MT[i10, i8]*MT[i2, i5]*MT[i3, i4]*MT[i6, i9] + MT[i1, i8]*MT[i10, \
i5]*MT[i2, i7]*MT[i3, i4]*MT[i6, i9] - MT[i1, i5]*MT[i10, i8]*MT[i2, \
i7]*MT[i3, i4]*MT[i6, i9] - MT[i1, i7]*MT[i10, i5]*MT[i2, i8]*MT[i3, \
i4]*MT[i6, i9] + MT[i1, i5]*MT[i10, i7]*MT[i2, i8]*MT[i3, i4]*MT[i6, \
i9] + MT[i1, i8]*MT[i10, i7]*MT[i2, i4]*MT[i3, i5]*MT[i6, i9] - \
MT[i1, i7]*MT[i10, i8]*MT[i2, i4]*MT[i3, i5]*MT[i6, i9] - MT[i1, \
i8]*MT[i10, i4]*MT[i2, i7]*MT[i3, i5]*MT[i6, i9] + MT[i1, i4]*MT[i10, \
i8]*MT[i2, i7]*MT[i3, i5]*MT[i6, i9] + MT[i1, i7]*MT[i10, i4]*MT[i2, \
i8]*MT[i3, i5]*MT[i6, i9] - MT[i1, i4]*MT[i10, i7]*MT[i2, i8]*MT[i3, \
i5]*MT[i6, i9] - MT[i1, i8]*MT[i10, i5]*MT[i2, i4]*MT[i3, i7]*MT[i6, \
i9] + MT[i1, i5]*MT[i10, i8]*MT[i2, i4]*MT[i3, i7]*MT[i6, i9] + \
MT[i1, i8]*MT[i10, i4]*MT[i2, i5]*MT[i3, i7]*MT[i6, i9] - MT[i1, \
i4]*MT[i10, i8]*MT[i2, i5]*MT[i3, i7]*MT[i6, i9] - MT[i1, i5]*MT[i10, \
i4]*MT[i2, i8]*MT[i3, i7]*MT[i6, i9] + MT[i1, i4]*MT[i10, i5]*MT[i2, \
i8]*MT[i3, i7]*MT[i6, i9] + MT[i1, i7]*MT[i10, i5]*MT[i2, i4]*MT[i3, \
i8]*MT[i6, i9] - MT[i1, i5]*MT[i10, i7]*MT[i2, i4]*MT[i3, i8]*MT[i6, \
i9] - MT[i1, i7]*MT[i10, i4]*MT[i2, i5]*MT[i3, i8]*MT[i6, i9] + \
MT[i1, i4]*MT[i10, i7]*MT[i2, i5]*MT[i3, i8]*MT[i6, i9] + MT[i1, \
i5]*MT[i10, i4]*MT[i2, i7]*MT[i3, i8]*MT[i6, i9] - MT[i1, i4]*MT[i10, \
i5]*MT[i2, i7]*MT[i3, i8]*MT[i6, i9] - MT[i1, i8]*MT[i10, i7]*MT[i2, \
i3]*MT[i4, i5]*MT[i6, i9] + MT[i1, i7]*MT[i10, i8]*MT[i2, i3]*MT[i4, \
i5]*MT[i6, i9] + MT[i1, i8]*MT[i10, i3]*MT[i2, i7]*MT[i4, i5]*MT[i6, \
i9] - MT[i1, i3]*MT[i10, i8]*MT[i2, i7]*MT[i4, i5]*MT[i6, i9] - \
MT[i1, i7]*MT[i10, i3]*MT[i2, i8]*MT[i4, i5]*MT[i6, i9] + MT[i1, \
i3]*MT[i10, i7]*MT[i2, i8]*MT[i4, i5]*MT[i6, i9] - MT[i1, i8]*MT[i10, \
i2]*MT[i3, i7]*MT[i4, i5]*MT[i6, i9] + MT[i1, i2]*MT[i10, i8]*MT[i3, \
i7]*MT[i4, i5]*MT[i6, i9] + MT[i1, i10]*MT[i2, i8]*MT[i3, i7]*MT[i4, \
i5]*MT[i6, i9] + MT[i1, i7]*MT[i10, i2]*MT[i3, i8]*MT[i4, i5]*MT[i6, \
i9] - MT[i1, i2]*MT[i10, i7]*MT[i3, i8]*MT[i4, i5]*MT[i6, i9] - \
MT[i1, i10]*MT[i2, i7]*MT[i3, i8]*MT[i4, i5]*MT[i6, i9] + MT[i1, \
i8]*MT[i10, i5]*MT[i2, i3]*MT[i4, i7]*MT[i6, i9] - MT[i1, i5]*MT[i10, \
i8]*MT[i2, i3]*MT[i4, i7]*MT[i6, i9] - MT[i1, i8]*MT[i10, i3]*MT[i2, \
i5]*MT[i4, i7]*MT[i6, i9] + MT[i1, i3]*MT[i10, i8]*MT[i2, i5]*MT[i4, \
i7]*MT[i6, i9] + MT[i1, i5]*MT[i10, i3]*MT[i2, i8]*MT[i4, i7]*MT[i6, \
i9] - MT[i1, i3]*MT[i10, i5]*MT[i2, i8]*MT[i4, i7]*MT[i6, i9] + \
MT[i1, i8]*MT[i10, i2]*MT[i3, i5]*MT[i4, i7]*MT[i6, i9] - MT[i1, \
i2]*MT[i10, i8]*MT[i3, i5]*MT[i4, i7]*MT[i6, i9] - MT[i1, i10]*MT[i2, \
i8]*MT[i3, i5]*MT[i4, i7]*MT[i6, i9] - MT[i1, i5]*MT[i10, i2]*MT[i3, \
i8]*MT[i4, i7]*MT[i6, i9] + MT[i1, i2]*MT[i10, i5]*MT[i3, i8]*MT[i4, \
i7]*MT[i6, i9] + MT[i1, i10]*MT[i2, i5]*MT[i3, i8]*MT[i4, i7]*MT[i6, \
i9] - MT[i1, i7]*MT[i10, i5]*MT[i2, i3]*MT[i4, i8]*MT[i6, i9] + \
MT[i1, i5]*MT[i10, i7]*MT[i2, i3]*MT[i4, i8]*MT[i6, i9] + MT[i1, \
i7]*MT[i10, i3]*MT[i2, i5]*MT[i4, i8]*MT[i6, i9] - MT[i1, i3]*MT[i10, \
i7]*MT[i2, i5]*MT[i4, i8]*MT[i6, i9] - MT[i1, i5]*MT[i10, i3]*MT[i2, \
i7]*MT[i4, i8]*MT[i6, i9] + MT[i1, i3]*MT[i10, i5]*MT[i2, i7]*MT[i4, \
i8]*MT[i6, i9] - MT[i1, i7]*MT[i10, i2]*MT[i3, i5]*MT[i4, i8]*MT[i6, \
i9] + MT[i1, i2]*MT[i10, i7]*MT[i3, i5]*MT[i4, i8]*MT[i6, i9] + \
MT[i1, i10]*MT[i2, i7]*MT[i3, i5]*MT[i4, i8]*MT[i6, i9] + MT[i1, \
i5]*MT[i10, i2]*MT[i3, i7]*MT[i4, i8]*MT[i6, i9] - MT[i1, i2]*MT[i10, \
i5]*MT[i3, i7]*MT[i4, i8]*MT[i6, i9] - MT[i1, i10]*MT[i2, i5]*MT[i3, \
i7]*MT[i4, i8]*MT[i6, i9] - MT[i1, i8]*MT[i10, i4]*MT[i2, i3]*MT[i5, \
i7]*MT[i6, i9] + MT[i1, i4]*MT[i10, i8]*MT[i2, i3]*MT[i5, i7]*MT[i6, \
i9] + MT[i1, i8]*MT[i10, i3]*MT[i2, i4]*MT[i5, i7]*MT[i6, i9] - \
MT[i1, i3]*MT[i10, i8]*MT[i2, i4]*MT[i5, i7]*MT[i6, i9] - MT[i1, \
i4]*MT[i10, i3]*MT[i2, i8]*MT[i5, i7]*MT[i6, i9] + MT[i1, i3]*MT[i10, \
i4]*MT[i2, i8]*MT[i5, i7]*MT[i6, i9] - MT[i1, i8]*MT[i10, i2]*MT[i3, \
i4]*MT[i5, i7]*MT[i6, i9] + MT[i1, i2]*MT[i10, i8]*MT[i3, i4]*MT[i5, \
i7]*MT[i6, i9] + MT[i1, i10]*MT[i2, i8]*MT[i3, i4]*MT[i5, i7]*MT[i6, \
i9] + MT[i1, i4]*MT[i10, i2]*MT[i3, i8]*MT[i5, i7]*MT[i6, i9] - \
MT[i1, i2]*MT[i10, i4]*MT[i3, i8]*MT[i5, i7]*MT[i6, i9] - MT[i1, \
i10]*MT[i2, i4]*MT[i3, i8]*MT[i5, i7]*MT[i6, i9] - MT[i1, i3]*MT[i10, \
i2]*MT[i4, i8]*MT[i5, i7]*MT[i6, i9] + MT[i1, i2]*MT[i10, i3]*MT[i4, \
i8]*MT[i5, i7]*MT[i6, i9] + MT[i1, i10]*MT[i2, i3]*MT[i4, i8]*MT[i5, \
i7]*MT[i6, i9] + MT[i1, i7]*MT[i10, i4]*MT[i2, i3]*MT[i5, i8]*MT[i6, \
i9] - MT[i1, i4]*MT[i10, i7]*MT[i2, i3]*MT[i5, i8]*MT[i6, i9] - \
MT[i1, i7]*MT[i10, i3]*MT[i2, i4]*MT[i5, i8]*MT[i6, i9] + MT[i1, \
i3]*MT[i10, i7]*MT[i2, i4]*MT[i5, i8]*MT[i6, i9] + MT[i1, i4]*MT[i10, \
i3]*MT[i2, i7]*MT[i5, i8]*MT[i6, i9] - MT[i1, i3]*MT[i10, i4]*MT[i2, \
i7]*MT[i5, i8]*MT[i6, i9] + MT[i1, i7]*MT[i10, i2]*MT[i3, i4]*MT[i5, \
i8]*MT[i6, i9] - MT[i1, i2]*MT[i10, i7]*MT[i3, i4]*MT[i5, i8]*MT[i6, \
i9] - MT[i1, i10]*MT[i2, i7]*MT[i3, i4]*MT[i5, i8]*MT[i6, i9] - \
MT[i1, i4]*MT[i10, i2]*MT[i3, i7]*MT[i5, i8]*MT[i6, i9] + MT[i1, \
i2]*MT[i10, i4]*MT[i3, i7]*MT[i5, i8]*MT[i6, i9] + MT[i1, i10]*MT[i2, \
i4]*MT[i3, i7]*MT[i5, i8]*MT[i6, i9] + MT[i1, i3]*MT[i10, i2]*MT[i4, \
i7]*MT[i5, i8]*MT[i6, i9] - MT[i1, i2]*MT[i10, i3]*MT[i4, i7]*MT[i5, \
i8]*MT[i6, i9] - MT[i1, i10]*MT[i2, i3]*MT[i4, i7]*MT[i5, i8]*MT[i6, \
i9] - MT[i1, i9]*MT[i10, i6]*MT[i2, i5]*MT[i3, i4]*MT[i7, i8] + \
MT[i1, i6]*MT[i10, i9]*MT[i2, i5]*MT[i3, i4]*MT[i7, i8] + MT[i1, \
i9]*MT[i10, i5]*MT[i2, i6]*MT[i3, i4]*MT[i7, i8] - MT[i1, i5]*MT[i10, \
i9]*MT[i2, i6]*MT[i3, i4]*MT[i7, i8] - MT[i1, i6]*MT[i10, i5]*MT[i2, \
i9]*MT[i3, i4]*MT[i7, i8] + MT[i1, i5]*MT[i10, i6]*MT[i2, i9]*MT[i3, \
i4]*MT[i7, i8] + MT[i1, i9]*MT[i10, i6]*MT[i2, i4]*MT[i3, i5]*MT[i7, \
i8] - MT[i1, i6]*MT[i10, i9]*MT[i2, i4]*MT[i3, i5]*MT[i7, i8] - \
MT[i1, i9]*MT[i10, i4]*MT[i2, i6]*MT[i3, i5]*MT[i7, i8] + MT[i1, \
i4]*MT[i10, i9]*MT[i2, i6]*MT[i3, i5]*MT[i7, i8] + MT[i1, i6]*MT[i10, \
i4]*MT[i2, i9]*MT[i3, i5]*MT[i7, i8] - MT[i1, i4]*MT[i10, i6]*MT[i2, \
i9]*MT[i3, i5]*MT[i7, i8] - MT[i1, i9]*MT[i10, i5]*MT[i2, i4]*MT[i3, \
i6]*MT[i7, i8] + MT[i1, i5]*MT[i10, i9]*MT[i2, i4]*MT[i3, i6]*MT[i7, \
i8] + MT[i1, i9]*MT[i10, i4]*MT[i2, i5]*MT[i3, i6]*MT[i7, i8] - \
MT[i1, i4]*MT[i10, i9]*MT[i2, i5]*MT[i3, i6]*MT[i7, i8] - MT[i1, \
i5]*MT[i10, i4]*MT[i2, i9]*MT[i3, i6]*MT[i7, i8] + MT[i1, i4]*MT[i10, \
i5]*MT[i2, i9]*MT[i3, i6]*MT[i7, i8] + MT[i1, i6]*MT[i10, i5]*MT[i2, \
i4]*MT[i3, i9]*MT[i7, i8] - MT[i1, i5]*MT[i10, i6]*MT[i2, i4]*MT[i3, \
i9]*MT[i7, i8] - MT[i1, i6]*MT[i10, i4]*MT[i2, i5]*MT[i3, i9]*MT[i7, \
i8] + MT[i1, i4]*MT[i10, i6]*MT[i2, i5]*MT[i3, i9]*MT[i7, i8] + \
MT[i1, i5]*MT[i10, i4]*MT[i2, i6]*MT[i3, i9]*MT[i7, i8] - MT[i1, \
i4]*MT[i10, i5]*MT[i2, i6]*MT[i3, i9]*MT[i7, i8] - MT[i1, i9]*MT[i10, \
i6]*MT[i2, i3]*MT[i4, i5]*MT[i7, i8] + MT[i1, i6]*MT[i10, i9]*MT[i2, \
i3]*MT[i4, i5]*MT[i7, i8] + MT[i1, i9]*MT[i10, i3]*MT[i2, i6]*MT[i4, \
i5]*MT[i7, i8] - MT[i1, i3]*MT[i10, i9]*MT[i2, i6]*MT[i4, i5]*MT[i7, \
i8] - MT[i1, i6]*MT[i10, i3]*MT[i2, i9]*MT[i4, i5]*MT[i7, i8] + \
MT[i1, i3]*MT[i10, i6]*MT[i2, i9]*MT[i4, i5]*MT[i7, i8] - MT[i1, \
i9]*MT[i10, i2]*MT[i3, i6]*MT[i4, i5]*MT[i7, i8] + MT[i1, i2]*MT[i10, \
i9]*MT[i3, i6]*MT[i4, i5]*MT[i7, i8] + MT[i1, i10]*MT[i2, i9]*MT[i3, \
i6]*MT[i4, i5]*MT[i7, i8] + MT[i1, i6]*MT[i10, i2]*MT[i3, i9]*MT[i4, \
i5]*MT[i7, i8] - MT[i1, i2]*MT[i10, i6]*MT[i3, i9]*MT[i4, i5]*MT[i7, \
i8] - MT[i1, i10]*MT[i2, i6]*MT[i3, i9]*MT[i4, i5]*MT[i7, i8] + \
MT[i1, i9]*MT[i10, i5]*MT[i2, i3]*MT[i4, i6]*MT[i7, i8] - MT[i1, \
i5]*MT[i10, i9]*MT[i2, i3]*MT[i4, i6]*MT[i7, i8] - MT[i1, i9]*MT[i10, \
i3]*MT[i2, i5]*MT[i4, i6]*MT[i7, i8] + MT[i1, i3]*MT[i10, i9]*MT[i2, \
i5]*MT[i4, i6]*MT[i7, i8] + MT[i1, i5]*MT[i10, i3]*MT[i2, i9]*MT[i4, \
i6]*MT[i7, i8] - MT[i1, i3]*MT[i10, i5]*MT[i2, i9]*MT[i4, i6]*MT[i7, \
i8] + MT[i1, i9]*MT[i10, i2]*MT[i3, i5]*MT[i4, i6]*MT[i7, i8] - \
MT[i1, i2]*MT[i10, i9]*MT[i3, i5]*MT[i4, i6]*MT[i7, i8] - MT[i1, \
i10]*MT[i2, i9]*MT[i3, i5]*MT[i4, i6]*MT[i7, i8] - MT[i1, i5]*MT[i10, \
i2]*MT[i3, i9]*MT[i4, i6]*MT[i7, i8] + MT[i1, i2]*MT[i10, i5]*MT[i3, \
i9]*MT[i4, i6]*MT[i7, i8] + MT[i1, i10]*MT[i2, i5]*MT[i3, i9]*MT[i4, \
i6]*MT[i7, i8] - MT[i1, i6]*MT[i10, i5]*MT[i2, i3]*MT[i4, i9]*MT[i7, \
i8] + MT[i1, i5]*MT[i10, i6]*MT[i2, i3]*MT[i4, i9]*MT[i7, i8] + \
MT[i1, i6]*MT[i10, i3]*MT[i2, i5]*MT[i4, i9]*MT[i7, i8] - MT[i1, \
i3]*MT[i10, i6]*MT[i2, i5]*MT[i4, i9]*MT[i7, i8] - MT[i1, i5]*MT[i10, \
i3]*MT[i2, i6]*MT[i4, i9]*MT[i7, i8] + MT[i1, i3]*MT[i10, i5]*MT[i2, \
i6]*MT[i4, i9]*MT[i7, i8] - MT[i1, i6]*MT[i10, i2]*MT[i3, i5]*MT[i4, \
i9]*MT[i7, i8] + MT[i1, i2]*MT[i10, i6]*MT[i3, i5]*MT[i4, i9]*MT[i7, \
i8] + MT[i1, i10]*MT[i2, i6]*MT[i3, i5]*MT[i4, i9]*MT[i7, i8] + \
MT[i1, i5]*MT[i10, i2]*MT[i3, i6]*MT[i4, i9]*MT[i7, i8] - MT[i1, \
i2]*MT[i10, i5]*MT[i3, i6]*MT[i4, i9]*MT[i7, i8] - MT[i1, i10]*MT[i2, \
i5]*MT[i3, i6]*MT[i4, i9]*MT[i7, i8] - MT[i1, i9]*MT[i10, i4]*MT[i2, \
i3]*MT[i5, i6]*MT[i7, i8] + MT[i1, i4]*MT[i10, i9]*MT[i2, i3]*MT[i5, \
i6]*MT[i7, i8] + MT[i1, i9]*MT[i10, i3]*MT[i2, i4]*MT[i5, i6]*MT[i7, \
i8] - MT[i1, i3]*MT[i10, i9]*MT[i2, i4]*MT[i5, i6]*MT[i7, i8] - \
MT[i1, i4]*MT[i10, i3]*MT[i2, i9]*MT[i5, i6]*MT[i7, i8] + MT[i1, \
i3]*MT[i10, i4]*MT[i2, i9]*MT[i5, i6]*MT[i7, i8] - MT[i1, i9]*MT[i10, \
i2]*MT[i3, i4]*MT[i5, i6]*MT[i7, i8] + MT[i1, i2]*MT[i10, i9]*MT[i3, \
i4]*MT[i5, i6]*MT[i7, i8] + MT[i1, i10]*MT[i2, i9]*MT[i3, i4]*MT[i5, \
i6]*MT[i7, i8] + MT[i1, i4]*MT[i10, i2]*MT[i3, i9]*MT[i5, i6]*MT[i7, \
i8] - MT[i1, i2]*MT[i10, i4]*MT[i3, i9]*MT[i5, i6]*MT[i7, i8] - \
MT[i1, i10]*MT[i2, i4]*MT[i3, i9]*MT[i5, i6]*MT[i7, i8] - MT[i1, \
i3]*MT[i10, i2]*MT[i4, i9]*MT[i5, i6]*MT[i7, i8] + MT[i1, i2]*MT[i10, \
i3]*MT[i4, i9]*MT[i5, i6]*MT[i7, i8] + MT[i1, i10]*MT[i2, i3]*MT[i4, \
i9]*MT[i5, i6]*MT[i7, i8] + MT[i1, i6]*MT[i10, i4]*MT[i2, i3]*MT[i5, \
i9]*MT[i7, i8] - MT[i1, i4]*MT[i10, i6]*MT[i2, i3]*MT[i5, i9]*MT[i7, \
i8] - MT[i1, i6]*MT[i10, i3]*MT[i2, i4]*MT[i5, i9]*MT[i7, i8] + \
MT[i1, i3]*MT[i10, i6]*MT[i2, i4]*MT[i5, i9]*MT[i7, i8] + MT[i1, \
i4]*MT[i10, i3]*MT[i2, i6]*MT[i5, i9]*MT[i7, i8] - MT[i1, i3]*MT[i10, \
i4]*MT[i2, i6]*MT[i5, i9]*MT[i7, i8] + MT[i1, i6]*MT[i10, i2]*MT[i3, \
i4]*MT[i5, i9]*MT[i7, i8] - MT[i1, i2]*MT[i10, i6]*MT[i3, i4]*MT[i5, \
i9]*MT[i7, i8] - MT[i1, i10]*MT[i2, i6]*MT[i3, i4]*MT[i5, i9]*MT[i7, \
i8] - MT[i1, i4]*MT[i10, i2]*MT[i3, i6]*MT[i5, i9]*MT[i7, i8] + \
MT[i1, i2]*MT[i10, i4]*MT[i3, i6]*MT[i5, i9]*MT[i7, i8] + MT[i1, \
i10]*MT[i2, i4]*MT[i3, i6]*MT[i5, i9]*MT[i7, i8] + MT[i1, i3]*MT[i10, \
i2]*MT[i4, i6]*MT[i5, i9]*MT[i7, i8] - MT[i1, i2]*MT[i10, i3]*MT[i4, \
i6]*MT[i5, i9]*MT[i7, i8] - MT[i1, i10]*MT[i2, i3]*MT[i4, i6]*MT[i5, \
i9]*MT[i7, i8] - MT[i1, i5]*MT[i10, i4]*MT[i2, i3]*MT[i6, i9]*MT[i7, \
i8] + MT[i1, i4]*MT[i10, i5]*MT[i2, i3]*MT[i6, i9]*MT[i7, i8] + \
MT[i1, i5]*MT[i10, i3]*MT[i2, i4]*MT[i6, i9]*MT[i7, i8] - MT[i1, \
i3]*MT[i10, i5]*MT[i2, i4]*MT[i6, i9]*MT[i7, i8] - MT[i1, i4]*MT[i10, \
i3]*MT[i2, i5]*MT[i6, i9]*MT[i7, i8] + MT[i1, i3]*MT[i10, i4]*MT[i2, \
i5]*MT[i6, i9]*MT[i7, i8] - MT[i1, i5]*MT[i10, i2]*MT[i3, i4]*MT[i6, \
i9]*MT[i7, i8] + MT[i1, i2]*MT[i10, i5]*MT[i3, i4]*MT[i6, i9]*MT[i7, \
i8] + MT[i1, i10]*MT[i2, i5]*MT[i3, i4]*MT[i6, i9]*MT[i7, i8] + \
MT[i1, i4]*MT[i10, i2]*MT[i3, i5]*MT[i6, i9]*MT[i7, i8] - MT[i1, \
i2]*MT[i10, i4]*MT[i3, i5]*MT[i6, i9]*MT[i7, i8] - MT[i1, i10]*MT[i2, \
i4]*MT[i3, i5]*MT[i6, i9]*MT[i7, i8] - MT[i1, i3]*MT[i10, i2]*MT[i4, \
i5]*MT[i6, i9]*MT[i7, i8] + MT[i1, i2]*MT[i10, i3]*MT[i4, i5]*MT[i6, \
i9]*MT[i7, i8] + MT[i1, i10]*MT[i2, i3]*MT[i4, i5]*MT[i6, i9]*MT[i7, \
i8] + MT[i1, i8]*MT[i10, i6]*MT[i2, i5]*MT[i3, i4]*MT[i7, i9] - \
MT[i1, i6]*MT[i10, i8]*MT[i2, i5]*MT[i3, i4]*MT[i7, i9] - MT[i1, \
i8]*MT[i10, i5]*MT[i2, i6]*MT[i3, i4]*MT[i7, i9] + MT[i1, i5]*MT[i10, \
i8]*MT[i2, i6]*MT[i3, i4]*MT[i7, i9] + MT[i1, i6]*MT[i10, i5]*MT[i2, \
i8]*MT[i3, i4]*MT[i7, i9] - MT[i1, i5]*MT[i10, i6]*MT[i2, i8]*MT[i3, \
i4]*MT[i7, i9] - MT[i1, i8]*MT[i10, i6]*MT[i2, i4]*MT[i3, i5]*MT[i7, \
i9] + MT[i1, i6]*MT[i10, i8]*MT[i2, i4]*MT[i3, i5]*MT[i7, i9] + \
MT[i1, i8]*MT[i10, i4]*MT[i2, i6]*MT[i3, i5]*MT[i7, i9] - MT[i1, \
i4]*MT[i10, i8]*MT[i2, i6]*MT[i3, i5]*MT[i7, i9] - MT[i1, i6]*MT[i10, \
i4]*MT[i2, i8]*MT[i3, i5]*MT[i7, i9] + MT[i1, i4]*MT[i10, i6]*MT[i2, \
i8]*MT[i3, i5]*MT[i7, i9] + MT[i1, i8]*MT[i10, i5]*MT[i2, i4]*MT[i3, \
i6]*MT[i7, i9] - MT[i1, i5]*MT[i10, i8]*MT[i2, i4]*MT[i3, i6]*MT[i7, \
i9] - MT[i1, i8]*MT[i10, i4]*MT[i2, i5]*MT[i3, i6]*MT[i7, i9] + \
MT[i1, i4]*MT[i10, i8]*MT[i2, i5]*MT[i3, i6]*MT[i7, i9] + MT[i1, \
i5]*MT[i10, i4]*MT[i2, i8]*MT[i3, i6]*MT[i7, i9] - MT[i1, i4]*MT[i10, \
i5]*MT[i2, i8]*MT[i3, i6]*MT[i7, i9] - MT[i1, i6]*MT[i10, i5]*MT[i2, \
i4]*MT[i3, i8]*MT[i7, i9] + MT[i1, i5]*MT[i10, i6]*MT[i2, i4]*MT[i3, \
i8]*MT[i7, i9] + MT[i1, i6]*MT[i10, i4]*MT[i2, i5]*MT[i3, i8]*MT[i7, \
i9] - MT[i1, i4]*MT[i10, i6]*MT[i2, i5]*MT[i3, i8]*MT[i7, i9] - \
MT[i1, i5]*MT[i10, i4]*MT[i2, i6]*MT[i3, i8]*MT[i7, i9] + MT[i1, \
i4]*MT[i10, i5]*MT[i2, i6]*MT[i3, i8]*MT[i7, i9] + MT[i1, i8]*MT[i10, \
i6]*MT[i2, i3]*MT[i4, i5]*MT[i7, i9] - MT[i1, i6]*MT[i10, i8]*MT[i2, \
i3]*MT[i4, i5]*MT[i7, i9] - MT[i1, i8]*MT[i10, i3]*MT[i2, i6]*MT[i4, \
i5]*MT[i7, i9] + MT[i1, i3]*MT[i10, i8]*MT[i2, i6]*MT[i4, i5]*MT[i7, \
i9] + MT[i1, i6]*MT[i10, i3]*MT[i2, i8]*MT[i4, i5]*MT[i7, i9] - \
MT[i1, i3]*MT[i10, i6]*MT[i2, i8]*MT[i4, i5]*MT[i7, i9] + MT[i1, \
i8]*MT[i10, i2]*MT[i3, i6]*MT[i4, i5]*MT[i7, i9] - MT[i1, i2]*MT[i10, \
i8]*MT[i3, i6]*MT[i4, i5]*MT[i7, i9] - MT[i1, i10]*MT[i2, i8]*MT[i3, \
i6]*MT[i4, i5]*MT[i7, i9] - MT[i1, i6]*MT[i10, i2]*MT[i3, i8]*MT[i4, \
i5]*MT[i7, i9] + MT[i1, i2]*MT[i10, i6]*MT[i3, i8]*MT[i4, i5]*MT[i7, \
i9] + MT[i1, i10]*MT[i2, i6]*MT[i3, i8]*MT[i4, i5]*MT[i7, i9] - \
MT[i1, i8]*MT[i10, i5]*MT[i2, i3]*MT[i4, i6]*MT[i7, i9] + MT[i1, \
i5]*MT[i10, i8]*MT[i2, i3]*MT[i4, i6]*MT[i7, i9] + MT[i1, i8]*MT[i10, \
i3]*MT[i2, i5]*MT[i4, i6]*MT[i7, i9] - MT[i1, i3]*MT[i10, i8]*MT[i2, \
i5]*MT[i4, i6]*MT[i7, i9] - MT[i1, i5]*MT[i10, i3]*MT[i2, i8]*MT[i4, \
i6]*MT[i7, i9] + MT[i1, i3]*MT[i10, i5]*MT[i2, i8]*MT[i4, i6]*MT[i7, \
i9] - MT[i1, i8]*MT[i10, i2]*MT[i3, i5]*MT[i4, i6]*MT[i7, i9] + \
MT[i1, i2]*MT[i10, i8]*MT[i3, i5]*MT[i4, i6]*MT[i7, i9] + MT[i1, \
i10]*MT[i2, i8]*MT[i3, i5]*MT[i4, i6]*MT[i7, i9] + MT[i1, i5]*MT[i10, \
i2]*MT[i3, i8]*MT[i4, i6]*MT[i7, i9] - MT[i1, i2]*MT[i10, i5]*MT[i3, \
i8]*MT[i4, i6]*MT[i7, i9] - MT[i1, i10]*MT[i2, i5]*MT[i3, i8]*MT[i4, \
i6]*MT[i7, i9] + MT[i1, i6]*MT[i10, i5]*MT[i2, i3]*MT[i4, i8]*MT[i7, \
i9] - MT[i1, i5]*MT[i10, i6]*MT[i2, i3]*MT[i4, i8]*MT[i7, i9] - \
MT[i1, i6]*MT[i10, i3]*MT[i2, i5]*MT[i4, i8]*MT[i7, i9] + MT[i1, \
i3]*MT[i10, i6]*MT[i2, i5]*MT[i4, i8]*MT[i7, i9] + MT[i1, i5]*MT[i10, \
i3]*MT[i2, i6]*MT[i4, i8]*MT[i7, i9] - MT[i1, i3]*MT[i10, i5]*MT[i2, \
i6]*MT[i4, i8]*MT[i7, i9] + MT[i1, i6]*MT[i10, i2]*MT[i3, i5]*MT[i4, \
i8]*MT[i7, i9] - MT[i1, i2]*MT[i10, i6]*MT[i3, i5]*MT[i4, i8]*MT[i7, \
i9] - MT[i1, i10]*MT[i2, i6]*MT[i3, i5]*MT[i4, i8]*MT[i7, i9] - \
MT[i1, i5]*MT[i10, i2]*MT[i3, i6]*MT[i4, i8]*MT[i7, i9] + MT[i1, \
i2]*MT[i10, i5]*MT[i3, i6]*MT[i4, i8]*MT[i7, i9] + MT[i1, i10]*MT[i2, \
i5]*MT[i3, i6]*MT[i4, i8]*MT[i7, i9] + MT[i1, i8]*MT[i10, i4]*MT[i2, \
i3]*MT[i5, i6]*MT[i7, i9] - MT[i1, i4]*MT[i10, i8]*MT[i2, i3]*MT[i5, \
i6]*MT[i7, i9] - MT[i1, i8]*MT[i10, i3]*MT[i2, i4]*MT[i5, i6]*MT[i7, \
i9] + MT[i1, i3]*MT[i10, i8]*MT[i2, i4]*MT[i5, i6]*MT[i7, i9] + \
MT[i1, i4]*MT[i10, i3]*MT[i2, i8]*MT[i5, i6]*MT[i7, i9] - MT[i1, \
i3]*MT[i10, i4]*MT[i2, i8]*MT[i5, i6]*MT[i7, i9] + MT[i1, i8]*MT[i10, \
i2]*MT[i3, i4]*MT[i5, i6]*MT[i7, i9] - MT[i1, i2]*MT[i10, i8]*MT[i3, \
i4]*MT[i5, i6]*MT[i7, i9] - MT[i1, i10]*MT[i2, i8]*MT[i3, i4]*MT[i5, \
i6]*MT[i7, i9] - MT[i1, i4]*MT[i10, i2]*MT[i3, i8]*MT[i5, i6]*MT[i7, \
i9] + MT[i1, i2]*MT[i10, i4]*MT[i3, i8]*MT[i5, i6]*MT[i7, i9] + \
MT[i1, i10]*MT[i2, i4]*MT[i3, i8]*MT[i5, i6]*MT[i7, i9] + MT[i1, \
i3]*MT[i10, i2]*MT[i4, i8]*MT[i5, i6]*MT[i7, i9] - MT[i1, i2]*MT[i10, \
i3]*MT[i4, i8]*MT[i5, i6]*MT[i7, i9] - MT[i1, i10]*MT[i2, i3]*MT[i4, \
i8]*MT[i5, i6]*MT[i7, i9] - MT[i1, i6]*MT[i10, i4]*MT[i2, i3]*MT[i5, \
i8]*MT[i7, i9] + MT[i1, i4]*MT[i10, i6]*MT[i2, i3]*MT[i5, i8]*MT[i7, \
i9] + MT[i1, i6]*MT[i10, i3]*MT[i2, i4]*MT[i5, i8]*MT[i7, i9] - \
MT[i1, i3]*MT[i10, i6]*MT[i2, i4]*MT[i5, i8]*MT[i7, i9] - MT[i1, \
i4]*MT[i10, i3]*MT[i2, i6]*MT[i5, i8]*MT[i7, i9] + MT[i1, i3]*MT[i10, \
i4]*MT[i2, i6]*MT[i5, i8]*MT[i7, i9] - MT[i1, i6]*MT[i10, i2]*MT[i3, \
i4]*MT[i5, i8]*MT[i7, i9] + MT[i1, i2]*MT[i10, i6]*MT[i3, i4]*MT[i5, \
i8]*MT[i7, i9] + MT[i1, i10]*MT[i2, i6]*MT[i3, i4]*MT[i5, i8]*MT[i7, \
i9] + MT[i1, i4]*MT[i10, i2]*MT[i3, i6]*MT[i5, i8]*MT[i7, i9] - \
MT[i1, i2]*MT[i10, i4]*MT[i3, i6]*MT[i5, i8]*MT[i7, i9] - MT[i1, \
i10]*MT[i2, i4]*MT[i3, i6]*MT[i5, i8]*MT[i7, i9] - MT[i1, i3]*MT[i10, \
i2]*MT[i4, i6]*MT[i5, i8]*MT[i7, i9] + MT[i1, i2]*MT[i10, i3]*MT[i4, \
i6]*MT[i5, i8]*MT[i7, i9] + MT[i1, i10]*MT[i2, i3]*MT[i4, i6]*MT[i5, \
i8]*MT[i7, i9] + MT[i1, i5]*MT[i10, i4]*MT[i2, i3]*MT[i6, i8]*MT[i7, \
i9] - MT[i1, i4]*MT[i10, i5]*MT[i2, i3]*MT[i6, i8]*MT[i7, i9] - \
MT[i1, i5]*MT[i10, i3]*MT[i2, i4]*MT[i6, i8]*MT[i7, i9] + MT[i1, \
i3]*MT[i10, i5]*MT[i2, i4]*MT[i6, i8]*MT[i7, i9] + MT[i1, i4]*MT[i10, \
i3]*MT[i2, i5]*MT[i6, i8]*MT[i7, i9] - MT[i1, i3]*MT[i10, i4]*MT[i2, \
i5]*MT[i6, i8]*MT[i7, i9] + MT[i1, i5]*MT[i10, i2]*MT[i3, i4]*MT[i6, \
i8]*MT[i7, i9] - MT[i1, i2]*MT[i10, i5]*MT[i3, i4]*MT[i6, i8]*MT[i7, \
i9] - MT[i1, i10]*MT[i2, i5]*MT[i3, i4]*MT[i6, i8]*MT[i7, i9] - \
MT[i1, i4]*MT[i10, i2]*MT[i3, i5]*MT[i6, i8]*MT[i7, i9] + MT[i1, \
i2]*MT[i10, i4]*MT[i3, i5]*MT[i6, i8]*MT[i7, i9] + MT[i1, i10]*MT[i2, \
i4]*MT[i3, i5]*MT[i6, i8]*MT[i7, i9] + MT[i1, i3]*MT[i10, i2]*MT[i4, \
i5]*MT[i6, i8]*MT[i7, i9] - MT[i1, i2]*MT[i10, i3]*MT[i4, i5]*MT[i6, \
i8]*MT[i7, i9] - MT[i1, i10]*MT[i2, i3]*MT[i4, i5]*MT[i6, i8]*MT[i7, \
i9] - MT[i1, i7]*MT[i10, i6]*MT[i2, i5]*MT[i3, i4]*MT[i8, i9] + \
MT[i1, i6]*MT[i10, i7]*MT[i2, i5]*MT[i3, i4]*MT[i8, i9] + MT[i1, \
i7]*MT[i10, i5]*MT[i2, i6]*MT[i3, i4]*MT[i8, i9] - MT[i1, i5]*MT[i10, \
i7]*MT[i2, i6]*MT[i3, i4]*MT[i8, i9] - MT[i1, i6]*MT[i10, i5]*MT[i2, \
i7]*MT[i3, i4]*MT[i8, i9] + MT[i1, i5]*MT[i10, i6]*MT[i2, i7]*MT[i3, \
i4]*MT[i8, i9] + MT[i1, i7]*MT[i10, i6]*MT[i2, i4]*MT[i3, i5]*MT[i8, \
i9] - MT[i1, i6]*MT[i10, i7]*MT[i2, i4]*MT[i3, i5]*MT[i8, i9] - \
MT[i1, i7]*MT[i10, i4]*MT[i2, i6]*MT[i3, i5]*MT[i8, i9] + MT[i1, \
i4]*MT[i10, i7]*MT[i2, i6]*MT[i3, i5]*MT[i8, i9] + MT[i1, i6]*MT[i10, \
i4]*MT[i2, i7]*MT[i3, i5]*MT[i8, i9] - MT[i1, i4]*MT[i10, i6]*MT[i2, \
i7]*MT[i3, i5]*MT[i8, i9] - MT[i1, i7]*MT[i10, i5]*MT[i2, i4]*MT[i3, \
i6]*MT[i8, i9] + MT[i1, i5]*MT[i10, i7]*MT[i2, i4]*MT[i3, i6]*MT[i8, \
i9] + MT[i1, i7]*MT[i10, i4]*MT[i2, i5]*MT[i3, i6]*MT[i8, i9] - \
MT[i1, i4]*MT[i10, i7]*MT[i2, i5]*MT[i3, i6]*MT[i8, i9] - MT[i1, \
i5]*MT[i10, i4]*MT[i2, i7]*MT[i3, i6]*MT[i8, i9] + MT[i1, i4]*MT[i10, \
i5]*MT[i2, i7]*MT[i3, i6]*MT[i8, i9] + MT[i1, i6]*MT[i10, i5]*MT[i2, \
i4]*MT[i3, i7]*MT[i8, i9] - MT[i1, i5]*MT[i10, i6]*MT[i2, i4]*MT[i3, \
i7]*MT[i8, i9] - MT[i1, i6]*MT[i10, i4]*MT[i2, i5]*MT[i3, i7]*MT[i8, \
i9] + MT[i1, i4]*MT[i10, i6]*MT[i2, i5]*MT[i3, i7]*MT[i8, i9] + \
MT[i1, i5]*MT[i10, i4]*MT[i2, i6]*MT[i3, i7]*MT[i8, i9] - MT[i1, \
i4]*MT[i10, i5]*MT[i2, i6]*MT[i3, i7]*MT[i8, i9] - MT[i1, i7]*MT[i10, \
i6]*MT[i2, i3]*MT[i4, i5]*MT[i8, i9] + MT[i1, i6]*MT[i10, i7]*MT[i2, \
i3]*MT[i4, i5]*MT[i8, i9] + MT[i1, i7]*MT[i10, i3]*MT[i2, i6]*MT[i4, \
i5]*MT[i8, i9] - MT[i1, i3]*MT[i10, i7]*MT[i2, i6]*MT[i4, i5]*MT[i8, \
i9] - MT[i1, i6]*MT[i10, i3]*MT[i2, i7]*MT[i4, i5]*MT[i8, i9] + \
MT[i1, i3]*MT[i10, i6]*MT[i2, i7]*MT[i4, i5]*MT[i8, i9] - MT[i1, \
i7]*MT[i10, i2]*MT[i3, i6]*MT[i4, i5]*MT[i8, i9] + MT[i1, i2]*MT[i10, \
i7]*MT[i3, i6]*MT[i4, i5]*MT[i8, i9] + MT[i1, i10]*MT[i2, i7]*MT[i3, \
i6]*MT[i4, i5]*MT[i8, i9] + MT[i1, i6]*MT[i10, i2]*MT[i3, i7]*MT[i4, \
i5]*MT[i8, i9] - MT[i1, i2]*MT[i10, i6]*MT[i3, i7]*MT[i4, i5]*MT[i8, \
i9] - MT[i1, i10]*MT[i2, i6]*MT[i3, i7]*MT[i4, i5]*MT[i8, i9] + \
MT[i1, i7]*MT[i10, i5]*MT[i2, i3]*MT[i4, i6]*MT[i8, i9] - MT[i1, \
i5]*MT[i10, i7]*MT[i2, i3]*MT[i4, i6]*MT[i8, i9] - MT[i1, i7]*MT[i10, \
i3]*MT[i2, i5]*MT[i4, i6]*MT[i8, i9] + MT[i1, i3]*MT[i10, i7]*MT[i2, \
i5]*MT[i4, i6]*MT[i8, i9] + MT[i1, i5]*MT[i10, i3]*MT[i2, i7]*MT[i4, \
i6]*MT[i8, i9] - MT[i1, i3]*MT[i10, i5]*MT[i2, i7]*MT[i4, i6]*MT[i8, \
i9] + MT[i1, i7]*MT[i10, i2]*MT[i3, i5]*MT[i4, i6]*MT[i8, i9] - \
MT[i1, i2]*MT[i10, i7]*MT[i3, i5]*MT[i4, i6]*MT[i8, i9] - MT[i1, \
i10]*MT[i2, i7]*MT[i3, i5]*MT[i4, i6]*MT[i8, i9] - MT[i1, i5]*MT[i10, \
i2]*MT[i3, i7]*MT[i4, i6]*MT[i8, i9] + MT[i1, i2]*MT[i10, i5]*MT[i3, \
i7]*MT[i4, i6]*MT[i8, i9] + MT[i1, i10]*MT[i2, i5]*MT[i3, i7]*MT[i4, \
i6]*MT[i8, i9] - MT[i1, i6]*MT[i10, i5]*MT[i2, i3]*MT[i4, i7]*MT[i8, \
i9] + MT[i1, i5]*MT[i10, i6]*MT[i2, i3]*MT[i4, i7]*MT[i8, i9] + \
MT[i1, i6]*MT[i10, i3]*MT[i2, i5]*MT[i4, i7]*MT[i8, i9] - MT[i1, \
i3]*MT[i10, i6]*MT[i2, i5]*MT[i4, i7]*MT[i8, i9] - MT[i1, i5]*MT[i10, \
i3]*MT[i2, i6]*MT[i4, i7]*MT[i8, i9] + MT[i1, i3]*MT[i10, i5]*MT[i2, \
i6]*MT[i4, i7]*MT[i8, i9] - MT[i1, i6]*MT[i10, i2]*MT[i3, i5]*MT[i4, \
i7]*MT[i8, i9] + MT[i1, i2]*MT[i10, i6]*MT[i3, i5]*MT[i4, i7]*MT[i8, \
i9] + MT[i1, i10]*MT[i2, i6]*MT[i3, i5]*MT[i4, i7]*MT[i8, i9] + \
MT[i1, i5]*MT[i10, i2]*MT[i3, i6]*MT[i4, i7]*MT[i8, i9] - MT[i1, \
i2]*MT[i10, i5]*MT[i3, i6]*MT[i4, i7]*MT[i8, i9] - MT[i1, i10]*MT[i2, \
i5]*MT[i3, i6]*MT[i4, i7]*MT[i8, i9] - MT[i1, i7]*MT[i10, i4]*MT[i2, \
i3]*MT[i5, i6]*MT[i8, i9] + MT[i1, i4]*MT[i10, i7]*MT[i2, i3]*MT[i5, \
i6]*MT[i8, i9] + MT[i1, i7]*MT[i10, i3]*MT[i2, i4]*MT[i5, i6]*MT[i8, \
i9] - MT[i1, i3]*MT[i10, i7]*MT[i2, i4]*MT[i5, i6]*MT[i8, i9] - \
MT[i1, i4]*MT[i10, i3]*MT[i2, i7]*MT[i5, i6]*MT[i8, i9] + MT[i1, \
i3]*MT[i10, i4]*MT[i2, i7]*MT[i5, i6]*MT[i8, i9] - MT[i1, i7]*MT[i10, \
i2]*MT[i3, i4]*MT[i5, i6]*MT[i8, i9] + MT[i1, i2]*MT[i10, i7]*MT[i3, \
i4]*MT[i5, i6]*MT[i8, i9] + MT[i1, i10]*MT[i2, i7]*MT[i3, i4]*MT[i5, \
i6]*MT[i8, i9] + MT[i1, i4]*MT[i10, i2]*MT[i3, i7]*MT[i5, i6]*MT[i8, \
i9] - MT[i1, i2]*MT[i10, i4]*MT[i3, i7]*MT[i5, i6]*MT[i8, i9] - \
MT[i1, i10]*MT[i2, i4]*MT[i3, i7]*MT[i5, i6]*MT[i8, i9] - MT[i1, \
i3]*MT[i10, i2]*MT[i4, i7]*MT[i5, i6]*MT[i8, i9] + MT[i1, i2]*MT[i10, \
i3]*MT[i4, i7]*MT[i5, i6]*MT[i8, i9] + MT[i1, i10]*MT[i2, i3]*MT[i4, \
i7]*MT[i5, i6]*MT[i8, i9] + MT[i1, i6]*MT[i10, i4]*MT[i2, i3]*MT[i5, \
i7]*MT[i8, i9] - MT[i1, i4]*MT[i10, i6]*MT[i2, i3]*MT[i5, i7]*MT[i8, \
i9] - MT[i1, i6]*MT[i10, i3]*MT[i2, i4]*MT[i5, i7]*MT[i8, i9] + \
MT[i1, i3]*MT[i10, i6]*MT[i2, i4]*MT[i5, i7]*MT[i8, i9] + MT[i1, \
i4]*MT[i10, i3]*MT[i2, i6]*MT[i5, i7]*MT[i8, i9] - MT[i1, i3]*MT[i10, \
i4]*MT[i2, i6]*MT[i5, i7]*MT[i8, i9] + MT[i1, i6]*MT[i10, i2]*MT[i3, \
i4]*MT[i5, i7]*MT[i8, i9] - MT[i1, i2]*MT[i10, i6]*MT[i3, i4]*MT[i5, \
i7]*MT[i8, i9] - MT[i1, i10]*MT[i2, i6]*MT[i3, i4]*MT[i5, i7]*MT[i8, \
i9] - MT[i1, i4]*MT[i10, i2]*MT[i3, i6]*MT[i5, i7]*MT[i8, i9] + \
MT[i1, i2]*MT[i10, i4]*MT[i3, i6]*MT[i5, i7]*MT[i8, i9] + MT[i1, \
i10]*MT[i2, i4]*MT[i3, i6]*MT[i5, i7]*MT[i8, i9] + MT[i1, i3]*MT[i10, \
i2]*MT[i4, i6]*MT[i5, i7]*MT[i8, i9] - MT[i1, i2]*MT[i10, i3]*MT[i4, \
i6]*MT[i5, i7]*MT[i8, i9] - MT[i1, i10]*MT[i2, i3]*MT[i4, i6]*MT[i5, \
i7]*MT[i8, i9] - MT[i1, i5]*MT[i10, i4]*MT[i2, i3]*MT[i6, i7]*MT[i8, \
i9] + MT[i1, i4]*MT[i10, i5]*MT[i2, i3]*MT[i6, i7]*MT[i8, i9] + \
MT[i1, i5]*MT[i10, i3]*MT[i2, i4]*MT[i6, i7]*MT[i8, i9] - MT[i1, \
i3]*MT[i10, i5]*MT[i2, i4]*MT[i6, i7]*MT[i8, i9] - MT[i1, i4]*MT[i10, \
i3]*MT[i2, i5]*MT[i6, i7]*MT[i8, i9] + MT[i1, i3]*MT[i10, i4]*MT[i2, \
i5]*MT[i6, i7]*MT[i8, i9] - MT[i1, i5]*MT[i10, i2]*MT[i3, i4]*MT[i6, \
i7]*MT[i8, i9] + MT[i1, i2]*MT[i10, i5]*MT[i3, i4]*MT[i6, i7]*MT[i8, \
i9] + MT[i1, i10]*MT[i2, i5]*MT[i3, i4]*MT[i6, i7]*MT[i8, i9] + \
MT[i1, i4]*MT[i10, i2]*MT[i3, i5]*MT[i6, i7]*MT[i8, i9] - MT[i1, \
i2]*MT[i10, i4]*MT[i3, i5]*MT[i6, i7]*MT[i8, i9] - MT[i1, i10]*MT[i2, \
i4]*MT[i3, i5]*MT[i6, i7]*MT[i8, i9] - MT[i1, i3]*MT[i10, i2]*MT[i4, \
i5]*MT[i6, i7]*MT[i8, i9] + MT[i1, i2]*MT[i10, i3]*MT[i4, i5]*MT[i6, \
i7]*MT[i8, i9] + MT[i1, i10]*MT[i2, i3]*MT[i4, i5]*MT[i6, i7]*MT[i8, \
i9])"}
})
(*--------------------------------------------------------------------------------------------------*)
Tests`Dirac`fcstTRDAllFreeNoGamma5 = {
{"fcstTRDAllFreeNoGamma5-ID1","TR[GAD[i1]]","0"},
{"fcstTRDAllFreeNoGamma5-ID2","TR[GAD[i1,i2]]",
	"ChangeDimension[TR[GA[i1,i2]],D]"},
{"fcstTRDAllFreeNoGamma5-ID3","TR[GAD[i1,i2,i3]]","0"},
{"fcstTRDAllFreeNoGamma5-ID4","TR[GAD[i1,i2,i3,i4]]",
	"ChangeDimension[TR[GA[i1,i2,i3,i4]],D]"},
{"fcstTRDAllFreeNoGamma5-ID5","TR[GAD[i1,i2,i3,i4,i5]]","0"},
{"fcstTRDAllFreeNoGamma5-ID6","TR[GAD[i1,i2,i3,i4,i5,i6]]",
	"ChangeDimension[TR[GA[i1,i2,i3,i4,i5,i6]],D]"},
{"fcstTRDAllFreeNoGamma5-ID7","TR[GAD[i1,i2,i3,i4,i5,i6,i7]]","0"},
{"fcstTRDAllFreeNoGamma5-ID8","TR[GAD[i1,i2,i3,i4,i5,i6,i7,i8]]",
	"ChangeDimension[TR[GA[i1,i2,i3,i4,i5,i6,i7,i8]],D]"},
{"fcstTRDAllFreeNoGamma5-ID9","TR[GAD[i1,i2,i3,i4,i5,i6,i7,i8,i9]]","0"},
{"fcstTRDAllFreeNoGamma5-ID10","TR[GAD[i1,i2,i3,i4,i5,i6,i7,i8,i9,i10]]",
	"ChangeDimension[TR[GA[i1,i2,i3,i4,i5,i6,i7,i8,i9,i10]],D]"},
{"fcstTRDAllFreeNoGamma5-ID11","TR[GAD[i1,i2,i3,i4,i5,i6,i7,i8,i9,i10,i11]]","0"},

{"fcstTRDAllFreeNoGamma5-ID12","TR[GAE[i1]]","0"},
{"fcstTRDAllFreeNoGamma5-ID13","TR[GAE[i1,i2]]",
	"ChangeDimension[TR[GA[i1,i2]],D-4]"},
{"fcstTRDAllFreeNoGamma5-ID14","TR[GAE[i1,i2,i3]]","0"},
{"fcstTRDAllFreeNoGamma5-ID15","TR[GAE[i1,i2,i3,i4]]",
	"ChangeDimension[TR[GA[i1,i2,i3,i4]],D-4]"},
{"fcstTRDAllFreeNoGamma5-ID16","TR[GAE[i1,i2,i3,i4,i5]]","0"},
{"fcstTRDAllFreeNoGamma5-ID17","TR[GAE[i1,i2,i3,i4,i5,i6]]",
	"ChangeDimension[TR[GA[i1,i2,i3,i4,i5,i6]],D-4]"},
{"fcstTRDAllFreeNoGamma5-ID18","TR[GAE[i1,i2,i3,i4,i5,i6,i7]]","0"},
{"fcstTRDAllFreeNoGamma5-ID19","TR[GAE[i1,i2,i3,i4,i5,i6,i7,i8]]",
	"ChangeDimension[TR[GA[i1,i2,i3,i4,i5,i6,i7,i8]],D-4]"},
{"fcstTRDAllFreeNoGamma5-ID20","TR[GAE[i1,i2,i3,i4,i5,i6,i7,i8,i9]]","0"},
{"fcstTRDAllFreeNoGamma5-ID21","TR[GAE[i1,i2,i3,i4,i5,i6,i7,i8,i9,i10]]",
	"ChangeDimension[TR[GA[i1,i2,i3,i4,i5,i6,i7,i8,i9,i10]],D-4]"},
{"fcstTRDAllFreeNoGamma5-ID22","TR[GAE[i1,i2,i3,i4,i5,i6,i7,i8,i9,i10,i11]]","0"}

};
(*--------------------------------------------------------------------------------------------------*)
Tests`Dirac`fcstTR4AllFreeOneGamma5=
({
{"fcstTR4AllFreeOneGamma5-ID1", "TR[GA[i1,5]]//FCE", "0"},
{"fcstTR4AllFreeOneGamma5-ID2", "TR[GA[i1,i2,5]]//FCE", "0"},
{"fcstTR4AllFreeOneGamma5-ID3", "TR[GA[i1,i2,i3,5]]//FCE", "0"},
{"fcstTR4AllFreeOneGamma5-ID4", "TR[GA[i1,i2,i3,i4,5]]//FCE",
"(-4*I)*LC[i1, i2, i3, i4]"},
{"fcstTR4AllFreeOneGamma5-ID5", "TR[GA[i1,i2,i3,i4,i5,5]]//FCE",
"0"},
{"fcstTR4AllFreeOneGamma5-ID6", "TR[GA[i1,i2,i3,i4,i5,i6,5]]//FCE",
"(-4*I)*(LC[i3, i4, i5, i6]*MT[i1, i2] - LC[i2, i4, i5, i6]*MT[i1, \
i3] + LC[i1, i4, i5, i6]*MT[i2, i3] + LC[i1, i2, i3, i6]*MT[i4, i5] - \
LC[i1, i2, i3, i5]*MT[i4, i6] + LC[i1, i2, i3, i4]*MT[i5, i6])"},
{"fcstTR4AllFreeOneGamma5-ID7",
"TR[GA[i1,i2,i3,i4,i5,i6,i7,i8,5]]//FCE",
"(-4*I)*(LC[i5, i6, i7, i8]*MT[i1, i4]*MT[i2, i3] - LC[i4, i6, i7, \
i8]*MT[i1, i5]*MT[i2, i3] - LC[i5, i6, i7, i8]*MT[i1, i3]*MT[i2, i4] \
+ LC[i3, i6, i7, i8]*MT[i1, i5]*MT[i2, i4] + LC[i4, i6, i7, \
i8]*MT[i1, i3]*MT[i2, i5] - LC[i3, i6, i7, i8]*MT[i1, i4]*MT[i2, i5] \
+ LC[i5, i6, i7, i8]*MT[i1, i2]*MT[i3, i4] - LC[i2, i6, i7, \
i8]*MT[i1, i5]*MT[i3, i4] + LC[i1, i6, i7, i8]*MT[i2, i5]*MT[i3, i4] \
- LC[i4, i6, i7, i8]*MT[i1, i2]*MT[i3, i5] + LC[i2, i6, i7, \
i8]*MT[i1, i4]*MT[i3, i5] - LC[i1, i6, i7, i8]*MT[i2, i4]*MT[i3, i5] \
+ LC[i3, i6, i7, i8]*MT[i1, i2]*MT[i4, i5] - LC[i2, i6, i7, \
i8]*MT[i1, i3]*MT[i4, i5] + LC[i1, i6, i7, i8]*MT[i2, i3]*MT[i4, i5] \
+ LC[i3, i4, i5, i8]*MT[i1, i2]*MT[i6, i7] - LC[i2, i4, i5, \
i8]*MT[i1, i3]*MT[i6, i7] + LC[i1, i4, i5, i8]*MT[i2, i3]*MT[i6, i7] \
+ LC[i1, i2, i3, i8]*MT[i4, i5]*MT[i6, i7] - LC[i1, i2, i3, \
i5]*MT[i4, i8]*MT[i6, i7] + LC[i1, i2, i3, i4]*MT[i5, i8]*MT[i6, i7] \
- LC[i3, i4, i5, i7]*MT[i1, i2]*MT[i6, i8] + LC[i2, i4, i5, \
i7]*MT[i1, i3]*MT[i6, i8] - LC[i1, i4, i5, i7]*MT[i2, i3]*MT[i6, i8] \
- LC[i1, i2, i3, i7]*MT[i4, i5]*MT[i6, i8] + LC[i1, i2, i3, \
i5]*MT[i4, i7]*MT[i6, i8] - LC[i1, i2, i3, i4]*MT[i5, i7]*MT[i6, i8] \
+ LC[i3, i4, i5, i6]*MT[i1, i2]*MT[i7, i8] - LC[i2, i4, i5, \
i6]*MT[i1, i3]*MT[i7, i8] + LC[i1, i4, i5, i6]*MT[i2, i3]*MT[i7, i8] \
+ LC[i1, i2, i3, i6]*MT[i4, i5]*MT[i7, i8] - LC[i1, i2, i3, \
i5]*MT[i4, i6]*MT[i7, i8] + LC[i1, i2, i3, i4]*MT[i5, i6]*MT[i7, \
i8])"},
{"fcstTR4AllFreeOneGamma5-ID8",
"TR[GA[i1,i2,i3,i4,i5,i6,i7,i8,i9,5]]//FCE", "0"},
{"fcstTR4AllFreeOneGamma5-ID9",
"TR[GA[i1,i2,i3,i4,i5,i6,i7,i8,i9,i10,5]]//FCE",
"4*(I*LC[i5, i6, i7, i9]*MT[i1, i4]*MT[i10, i8]*MT[i2, i3] - I*LC[i4, i6, i7, i9]*MT[i1, i5]*MT[i10, i8]*MT[i2, i3] - I*LC[i5, i6, i7, i8]*MT[i1, i4]*MT[i10, i9]*MT[i2, i3] + I*LC[i4, i6, i7, i8]*MT[i1, i5]*MT[i10, i9]*MT[i2, i3] - I*LC[i5, i6, i7, i9]*MT[i1, i3]*MT[i10, i8]*MT[i2, i4] + I*LC[i3, i6, i7, i9]*MT[i1, i5]*MT[i10, i8]*MT[i2, i4] + I*LC[i5, i6, i7, i8]*MT[i1, i3]*MT[i10, i9]*MT[i2, i4] - I*LC[i3, i6, i7, i8]*MT[i1, i5]*MT[i10, i9]*MT[i2, i4] + I*LC[i4, i6, i7, i9]*MT[i1, i3]*MT[i10, i8]*MT[i2, i5] - I*LC[i3, i6, i7, i9]*MT[i1, i4]*MT[i10, i8]*MT[i2, i5] - I*LC[i4, i6, i7, i8]*MT[i1, i3]*MT[i10, i9]*MT[i2, i5] + I*LC[i3, i6, i7, i8]*MT[i1, i4]*MT[i10, i9]*MT[i2, i5] + I*LC[i5, i6, i7, i9]*MT[i1, i2]*MT[i10, i8]*MT[i3, i4] - I*LC[i2, i6, i7, i9]*MT[i1, i5]*MT[i10, i8]*MT[i3, i4] - I*LC[i5, i6, i7, i8]*MT[i1, i2]*MT[i10, i9]*MT[i3, i4] + I*LC[i2, i6, i7, i8]*MT[i1, i5]*MT[i10, i9]*MT[i3, i4] + I*LC[i10, i7, i8, i9]*MT[i1, i6]*MT[i2, i5]*MT[i3, i4] - I*LC[i10, i6, i8, i9]*MT[i1, i7]*MT[i2, i5]*MT[i3, i4] + I*LC[i1, i6, i7, i9]*MT[i10, i8]*MT[i2, i5]*MT[i3, i4] - I*LC[i1, i6, i7, i8]*MT[i10, i9]*MT[i2, i5]*MT[i3, i4] - I*LC[i10, i7, i8, i9]*MT[i1, i5]*MT[i2, i6]*MT[i3, i4] + I*LC[i10, i5, i8, i9]*MT[i1, i7]*MT[i2, i6]*MT[i3, i4] + I*LC[i10, i6, i8, i9]*MT[i1, i5]*MT[i2, i7]*MT[i3, i4] - I*LC[i10, i5, i8, i9]*MT[i1, i6]*MT[i2, i7]*MT[i3, i4] - I*LC[i4, i6, i7, i9]*MT[i1, i2]*MT[i10, i8]*MT[i3, i5] + I*LC[i2, i6, i7, i9]*MT[i1, i4]*MT[i10, i8]*MT[i3, i5] + I*LC[i4, i6, i7, i8]*MT[i1, i2]*MT[i10, i9]*MT[i3, i5] - I*LC[i2, i6, i7, i8]*MT[i1, i4]*MT[i10, i9]*MT[i3, i5] - I*LC[i10, i7, i8, i9]*MT[i1, i6]*MT[i2, i4]*MT[i3, i5] + I*LC[i10, i6, i8, i9]*MT[i1, i7]*MT[i2, i4]*MT[i3, i5] - I*LC[i1, i6, i7, i9]*MT[i10, i8]*MT[i2, i4]*MT[i3, i5] + I*LC[i1, i6, i7, i8]*MT[i10, i9]*MT[i2, i4]*MT[i3, i5] + I*LC[i10, i7, i8, i9]*MT[i1, i4]*MT[i2, i6]*MT[i3, i5] - I*LC[i10, i4, i8, i9]*MT[i1, i7]*MT[i2, i6]*MT[i3, i5] - I*LC[i10, i6, i8, i9]*MT[i1, i4]*MT[i2, i7]*MT[i3, i5] + I*LC[i10, i4, i8, i9]*MT[i1, i6]*MT[i2, i7]*MT[i3, i5] + I*LC[i10, i7, i8, i9]*MT[i1, i5]*MT[i2, i4]*MT[i3, i6] - I*LC[i10, i5, i8, i9]*MT[i1, i7]*MT[i2, i4]*MT[i3, i6] - I*LC[i10, i7, i8, i9]*MT[i1, i4]*MT[i2, i5]*MT[i3, i6] + I*LC[i10, i4, i8, i9]*MT[i1, i7]*MT[i2, i5]*MT[i3, i6] + I*LC[i10, i5, i8, i9]*MT[i1, i4]*MT[i2, i7]*MT[i3, i6] - I*LC[i10, i4, i8, i9]*MT[i1, i5]*MT[i2, i7]*MT[i3, i6] - I*LC[i10, i6, i8, i9]*MT[i1, i5]*MT[i2, i4]*MT[i3, i7] + I*LC[i10, i5, i8, i9]*MT[i1, i6]*MT[i2, i4]*MT[i3, i7] + I*LC[i10, i6, i8, i9]*MT[i1, i4]*MT[i2, i5]*MT[i3, i7] - I*LC[i10, i4, i8, i9]*MT[i1, i6]*MT[i2, i5]*MT[i3, i7] - I*LC[i10, i5, i8, i9]*MT[i1, i4]*MT[i2, i6]*MT[i3, i7] + I*LC[i10, i4, i8, i9]*MT[i1, i5]*MT[i2, i6]*MT[i3, i7] + I*LC[i3, i6, i7, i9]*MT[i1, i2]*MT[i10, i8]*MT[i4, i5] - I*LC[i2, i6, i7, i9]*MT[i1, i3]*MT[i10, i8]*MT[i4, i5] - I*LC[i3, i6, i7, i8]*MT[i1, i2]*MT[i10, i9]*MT[i4, i5] + I*LC[i2, i6, i7, i8]*MT[i1, i3]*MT[i10, i9]*MT[i4, i5] + I*LC[i10, i7, i8, i9]*MT[i1, i6]*MT[i2, i3]*MT[i4, i5] - I*LC[i10, i6, i8, i9]*MT[i1, i7]*MT[i2, i3]*MT[i4, i5] + I*LC[i1, i6, i7, i9]*MT[i10, i8]*MT[i2, i3]*MT[i4, i5] - I*LC[i1, i6, i7, i8]*MT[i10, i9]*MT[i2, i3]*MT[i4, i5] - I*LC[i10, i7, i8, i9]*MT[i1, i3]*MT[i2, i6]*MT[i4, i5] + I*LC[i10, i3, i8, i9]*MT[i1, i7]*MT[i2, i6]*MT[i4, i5] + I*LC[i10, i6, i8, i9]*MT[i1, i3]*MT[i2, i7]*MT[i4, i5] - I*LC[i10, i3, i8, i9]*MT[i1, i6]*MT[i2, i7]*MT[i4, i5] + I*LC[i10, i7, i8, i9]*MT[i1, i2]*MT[i3, i6]*MT[i4, i5] - I*LC[i10, i2, i8, i9]*MT[i1, i7]*MT[i3, i6]*MT[i4, i5] - I*LC[i1, i10, i8, i9]*MT[i2, i7]*MT[i3, i6]*MT[i4, i5] - I*LC[i10, i6, i8, i9]*MT[i1, i2]*MT[i3, i7]*MT[i4, i5] + I*LC[i10, i2, i8, i9]*MT[i1, i6]*MT[i3, i7]*MT[i4, i5] + I*LC[i1, i10, i8, i9]*MT[i2, i6]*MT[i3, i7]*MT[i4, i5] - I*LC[i10, i7, i8, i9]*MT[i1, i5]*MT[i2, i3]*MT[i4, i6] + I*LC[i10, i5, i8, i9]*MT[i1, i7]*MT[i2, i3]*MT[i4, i6] + I*LC[i10, i7, i8, i9]*MT[i1, i3]*MT[i2, i5]*MT[i4, i6] - I*LC[i10, i3, i8, i9]*MT[i1, i7]*MT[i2, i5]*MT[i4, i6] - I*LC[i10, i5, i8, i9]*MT[i1, i3]*MT[i2, i7]*MT[i4, i6] + I*LC[i10, i3, i8, i9]*MT[i1, i5]*MT[i2, i7]*MT[i4, i6] - I*LC[i10, i7, i8, i9]*MT[i1, i2]*MT[i3, i5]*MT[i4, i6] + I*LC[i10, i2, i8, i9]*MT[i1, i7]*MT[i3, i5]*MT[i4, i6] + I*LC[i1, i10, i8, i9]*MT[i2, i7]*MT[i3, i5]*MT[i4, i6] + I*LC[i10, i5, i8, i9]*MT[i1, i2]*MT[i3, i7]*MT[i4, i6] - I*LC[i10, i2, i8, i9]*MT[i1, i5]*MT[i3, i7]*MT[i4, i6] - I*LC[i1, i10, i8, i9]*MT[i2, i5]*MT[i3, i7]*MT[i4, i6] + I*LC[i10, i6, i8, i9]*MT[i1, i5]*MT[i2, i3]*MT[i4, i7] - I*LC[i10, i5, i8, i9]*MT[i1, i6]*MT[i2, i3]*MT[i4, i7] - I*LC[i10, i6, i8, i9]*MT[i1, i3]*MT[i2, i5]*MT[i4, i7] + I*LC[i10, i3, i8, i9]*MT[i1, i6]*MT[i2, i5]*MT[i4, i7] + I*LC[i10, i5, i8, i9]*MT[i1, i3]*MT[i2, i6]*MT[i4, i7] - I*LC[i10, i3, i8, i9]*MT[i1, i5]*MT[i2, i6]*MT[i4, i7] + I*LC[i10, i6, i8, i9]*MT[i1, i2]*MT[i3, i5]*MT[i4, i7] - I*LC[i10, i2, i8, i9]*MT[i1, i6]*MT[i3, i5]*MT[i4, i7] - I*LC[i1, i10, i8, i9]*MT[i2, i6]*MT[i3, i5]*MT[i4, i7] - I*LC[i10, i5, i8, i9]*MT[i1, i2]*MT[i3, i6]*MT[i4, i7] + I*LC[i10, i2, i8, i9]*MT[i1, i5]*MT[i3, i6]*MT[i4, i7] + I*LC[i1, i10, i8, i9]*MT[i2, i5]*MT[i3, i6]*MT[i4, i7] + I*LC[i10, i7, i8, i9]*MT[i1, i4]*MT[i2, i3]*MT[i5, i6] - I*LC[i10, i4, i8, i9]*MT[i1, i7]*MT[i2, i3]*MT[i5, i6] - I*LC[i10, i7, i8, i9]*MT[i1, i3]*MT[i2, i4]*MT[i5, i6] + I*LC[i10, i3, i8, i9]*MT[i1, i7]*MT[i2, i4]*MT[i5, i6] + I*LC[i10, i4, i8, i9]*MT[i1, i3]*MT[i2, i7]*MT[i5, i6] - I*LC[i10, i3, i8, i9]*MT[i1, i4]*MT[i2, i7]*MT[i5, i6] + I*LC[i10, i7, i8, i9]*MT[i1, i2]*MT[i3, i4]*MT[i5, i6] - I*LC[i10, i2, i8, i9]*MT[i1, i7]*MT[i3, i4]*MT[i5, i6] - I*LC[i1, i10, i8, i9]*MT[i2, i7]*MT[i3, i4]*MT[i5, i6] - I*LC[i10, i4, i8, i9]*MT[i1, i2]*MT[i3, i7]*MT[i5, i6] + I*LC[i10, i2, i8, i9]*MT[i1, i4]*MT[i3, i7]*MT[i5, i6] + I*LC[i1, i10, i8, i9]*MT[i2, i4]*MT[i3, i7]*MT[i5, i6] + I*LC[i10, i3, i8, i9]*MT[i1, i2]*MT[i4, i7]*MT[i5, i6] - I*LC[i10, i2, i8, i9]*MT[i1, i3]*MT[i4, i7]*MT[i5, i6] - I*LC[i1, i10, i8, i9]*MT[i2, i3]*MT[i4, i7]*MT[i5, i6] - I*LC[i10, i6, i8, i9]*MT[i1, i4]*MT[i2, i3]*MT[i5, i7] + I*LC[i10, i4, i8, i9]*MT[i1, i6]*MT[i2, i3]*MT[i5, i7] + I*LC[i10, i6, i8, i9]*MT[i1, i3]*MT[i2, i4]*MT[i5, i7] - I*LC[i10, i3, i8, i9]*MT[i1, i6]*MT[i2, i4]*MT[i5, i7] - I*LC[i10, i4, i8, i9]*MT[i1, i3]*MT[i2, i6]*MT[i5, i7] + I*LC[i10, i3, i8, i9]*MT[i1, i4]*MT[i2, i6]*MT[i5, i7] - I*LC[i10, i6, i8, i9]*MT[i1, i2]*MT[i3, i4]*MT[i5, i7] + I*LC[i10, i2, i8, i9]*MT[i1, i6]*MT[i3, i4]*MT[i5, i7] + I*LC[i1, i10, i8, i9]*MT[i2, i6]*MT[i3, i4]*MT[i5, i7] + I*LC[i10, i4, i8, i9]*MT[i1, i2]*MT[i3, i6]*MT[i5, i7] - I*LC[i10, i2, i8, i9]*MT[i1, i4]*MT[i3, i6]*MT[i5, i7] - I*LC[i1, i10, i8, i9]*MT[i2, i4]*MT[i3, i6]*MT[i5, i7] - I*LC[i10, i3, i8, i9]*MT[i1, i2]*MT[i4, i6]*MT[i5, i7] + I*LC[i10, i2, i8, i9]*MT[i1, i3]*MT[i4, i6]*MT[i5, i7] + I*LC[i1, i10, i8, i9]*MT[i2, i3]*MT[i4, i6]*MT[i5, i7] + I*LC[i3, i4, i5, i9]*MT[i1, i2]*MT[i10, i8]*MT[i6, i7] - I*LC[i2, i4, i5, i9]*MT[i1, i3]*MT[i10, i8]*MT[i6, i7] - I*LC[i3, i4, i5, i8]*MT[i1, i2]*MT[i10, i9]*MT[i6, i7] + I*LC[i2, i4, i5, i8]*MT[i1, i3]*MT[i10, i9]*MT[i6, i7] + I*LC[i10, i5, i8, i9]*MT[i1, i4]*MT[i2, i3]*MT[i6, i7] - I*LC[i10, i4, i8, i9]*MT[i1, i5]*MT[i2, i3]*MT[i6, i7] + I*LC[i1, i4, i5, i9]*MT[i10, i8]*MT[i2, i3]*MT[i6, i7] - I*LC[i1, i4, i5, i8]*MT[i10, i9]*MT[i2, i3]*MT[i6, i7] - I*LC[i10, i5, i8, i9]*MT[i1, i3]*MT[i2, i4]*MT[i6, i7] + I*LC[i10, i3, i8, i9]*MT[i1, i5]*MT[i2, i4]*MT[i6, i7] + I*LC[i10, i4, i8, i9]*MT[i1, i3]*MT[i2, i5]*MT[i6, i7] - I*LC[i10, i3, i8, i9]*MT[i1, i4]*MT[i2, i5]*MT[i6, i7] + I*LC[i10, i5, i8, i9]*MT[i1, i2]*MT[i3, i4]*MT[i6, i7] - I*LC[i10, i2, i8, i9]*MT[i1, i5]*MT[i3, i4]*MT[i6, i7] - I*LC[i1, i10, i8, i9]*MT[i2, i5]*MT[i3, i4]*MT[i6, i7] - I*LC[i10, i4, i8, i9]*MT[i1, i2]*MT[i3, i5]*MT[i6, i7] + I*LC[i10, i2, i8, i9]*MT[i1, i4]*MT[i3, i5]*MT[i6, i7] + I*LC[i1, i10, i8, i9]*MT[i2, i4]*MT[i3, i5]*MT[i6, i7] + I*LC[i10, i3, i8, i9]*MT[i1, i2]*MT[i4, i5]*MT[i6, i7] - I*LC[i10, i2, i8, i9]*MT[i1, i3]*MT[i4, i5]*MT[i6, i7] + I*LC[i1, i2, i3, i9]*MT[i10, i8]*MT[i4, i5]*MT[i6, i7] - I*LC[i1, i2, i3, i8]*MT[i10, i9]*MT[i4, i5]*MT[i6, i7] - I*LC[i1, i10, i8, i9]*MT[i2, i3]*MT[i4, i5]*MT[i6, i7] + I*LC[i1, i2, i3, i5]*MT[i10, i9]*MT[i4, i8]*MT[i6, i7] - I*LC[i1, i2, i3, i5]*MT[i10, i8]*MT[i4, i9]*MT[i6, i7] - I*LC[i1, i2, i3, i4]*MT[i10, i9]*MT[i5, i8]*MT[i6, i7] + I*LC[i1, i2, i3, i4]*MT[i10, i8]*MT[i5, i9]*MT[i6, i7] + I*LC[i3, i4, i5, i7]*MT[i1, i2]*MT[i10, i9]*MT[i6, i8] - I*LC[i2, i4, i5, i7]*MT[i1, i3]*MT[i10, i9]*MT[i6, i8] + I*LC[i1, i4, i5, i7]*MT[i10, i9]*MT[i2, i3]*MT[i6, i8] + I*LC[i1, i2, i3, i7]*MT[i10, i9]*MT[i4, i5]*MT[i6, i8] - I*LC[i1, i2, i3, i5]*MT[i10, i9]*MT[i4, i7]*MT[i6, i8] + I*LC[i1, i2, i3, i4]*MT[i10, i9]*MT[i5, i7]*MT[i6, i8] - I*LC[i3, i4, i5, i7]*MT[i1, i2]*MT[i10, i8]*MT[i6, i9] + I*LC[i2, i4, i5, i7]*MT[i1, i3]*MT[i10, i8]*MT[i6, i9] - I*LC[i1, i4, i5, i7]*MT[i10, i8]*MT[i2, i3]*MT[i6, i9] - I*LC[i1, i2, i3, i7]*MT[i10, i8]*MT[i4, i5]*MT[i6, i9] + I*LC[i1, i2, i3, i5]*MT[i10, i8]*MT[i4, i7]*MT[i6, i9] - I*LC[i1, i2, i3, i4]*MT[i10, i8]*MT[i5, i7]*MT[i6, i9] - I*LC[i3, i4, i5, i6]*MT[i1, i2]*MT[i10, i9]*MT[i7, i8] + I*LC[i2, i4, i5, i6]*MT[i1, i3]*MT[i10, i9]*MT[i7, i8] - I*LC[i1, i4, i5, i6]*MT[i10, i9]*MT[i2, i3]*MT[i7, i8] - I*LC[i1, i2, i3, i6]*MT[i10, i9]*MT[i4, i5]*MT[i7, i8] + I*LC[i1, i2, i3, i5]*MT[i10, i9]*MT[i4, i6]*MT[i7, i8] - I*LC[i1, i2, i3, i4]*MT[i10, i9]*MT[i5, i6]*MT[i7, i8] + I*LC[i3, i4, i5, i6]*MT[i1, i2]*MT[i10, i8]*MT[i7, i9] - I*LC[i2, i4, i5, i6]*MT[i1, i3]*MT[i10, i8]*MT[i7, i9] + I*LC[i1, i4, i5, i6]*MT[i10, i8]*MT[i2, i3]*MT[i7, i9] + I*LC[i1, i2, i3, i6]*MT[i10, i8]*MT[i4, i5]*MT[i7, i9] - I*LC[i1, i2, i3, i5]*MT[i10, i8]*MT[i4, i6]*MT[i7, i9] + I*LC[i1, i2, i3, i4]*MT[i10, i8]*MT[i5, i6]*MT[i7, i9] + I*LC[i3, i4, i5, i7]*MT[i1, i2]*MT[i10, i6]*MT[i8, i9] - I*LC[i2, i4, i5, i7]*MT[i1, i3]*MT[i10, i6]*MT[i8, i9] - I*LC[i3, i4, i5, i6]*MT[i1, i2]*MT[i10, i7]*MT[i8, i9] + I*LC[i2, i4, i5, i6]*MT[i1, i3]*MT[i10, i7]*MT[i8, i9] + I*LC[i10, i5, i6, i7]*MT[i1, i4]*MT[i2, i3]*MT[i8, i9] - I*LC[i10, i4, i6, i7]*MT[i1, i5]*MT[i2, i3]*MT[i8, i9] + I*LC[i1, i4, i5, i7]*MT[i10, i6]*MT[i2, i3]*MT[i8, i9] - I*LC[i1, i4, i5, i6]*MT[i10, i7]*MT[i2, i3]*MT[i8, i9] - I*LC[i10, i5, i6, i7]*MT[i1, i3]*MT[i2, i4]*MT[i8, i9] + I*LC[i10, i3, i6, i7]*MT[i1, i5]*MT[i2, i4]*MT[i8, i9] + I*LC[i10, i4, i6, i7]*MT[i1, i3]*MT[i2, i5]*MT[i8, i9] - I*LC[i10, i3, i6, i7]*MT[i1, i4]*MT[i2, i5]*MT[i8, i9] + I*LC[i10, i5, i6, i7]*MT[i1, i2]*MT[i3, i4]*MT[i8, i9] - I*LC[i10, i2, i6, i7]*MT[i1, i5]*MT[i3, i4]*MT[i8, i9] - I*LC[i1, i10, i6, i7]*MT[i2, i5]*MT[i3, i4]*MT[i8, i9] - I*LC[i10, i4, i6, i7]*MT[i1, i2]*MT[i3, i5]*MT[i8, i9] + I*LC[i10, i2, i6, i7]*MT[i1, i4]*MT[i3, i5]*MT[i8, i9] + I*LC[i1, i10, i6, i7]*MT[i2, i4]*MT[i3, i5]*MT[i8, i9] + I*LC[i10, i3, i6, i7]*MT[i1, i2]*MT[i4, i5]*MT[i8, i9] - I*LC[i10, i2, i6, i7]*MT[i1, i3]*MT[i4, i5]*MT[i8, i9] + I*LC[i1, i2, i3, i7]*MT[i10, i6]*MT[i4, i5]*MT[i8, i9] - I*LC[i1, i2, i3, i6]*MT[i10, i7]*MT[i4, i5]*MT[i8, i9] - I*LC[i1, i10, i6, i7]*MT[i2, i3]*MT[i4, i5]*MT[i8, i9] + I*LC[i1, i2, i3, i5]*MT[i10, i7]*MT[i4, i6]*MT[i8, i9] - I*LC[i1, i2, i3, i5]*MT[i10, i6]*MT[i4, i7]*MT[i8, i9] - I*LC[i1, i2, i3, i4]*MT[i10, i7]*MT[i5, i6]*MT[i8, i9] + I*LC[i1, i2, i3, i4]*MT[i10, i6]*MT[i5, i7]*MT[i8, i9] + I*LC[i10, i3, i4, i5]*MT[i1, i2]*MT[i6, i7]*MT[i8, i9] - I*LC[i10, i2, i4, i5]*MT[i1, i3]*MT[i6, i7]*MT[i8, i9] + I*LC[i1, i2, i3, i5]*MT[i10, i4]*MT[i6, i7]*MT[i8, i9] - I*LC[i1, i2, i3, i4]*MT[i10, i5]*MT[i6, i7]*MT[i8, i9] - I*LC[i1, i10, i4, i5]*MT[i2, i3]*MT[i6, i7]*MT[i8, i9] - I*LC[i1, i10, i2, i3]*MT[i4, i5]*MT[i6, i7]*MT[i8, i9])"}
})

Tests`Dirac`fcstTRLarin = {
{"fcstTRLarin-ID1",
	"TR[GAD[i1, i2, i3, i4].GA[5]] // FCE", "-4 I LCD[i1, i2, i3, i4]"},
{"fcstTRLarin-ID2",
	"TR[GSD[p2].GAD[n1].GSD[p1].GAD[mu2].GA[5]] // FCE", "4 I LCD[mu2, n1][p1, p2]"},
{"fcstTRLarin-ID3",
	"TR[GAD[i1, i2, i3, i4].GA[5], TRaceOfOne -> tt] // FCE", "-I tt LCD[i1, i2, i3, i4]"}
};
