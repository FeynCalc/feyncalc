

(* :Title: DiracGammaCombine.test											*)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 1990-2023 Rolf Mertig
	Copyright (C) 1997-2023 Frederik Orellana
	Copyright (C) 2014-2023 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for DiracGammaCombine			*)

(* ------------------------------------------------------------------------ *)

Tests`Dirac`fcstDiracGammaCombine =
({
{"fcstDiracGammaCombine-ID1",
"DiracGammaCombine[GS[p]+GS[q],FCE\[Rule]True]", "GS[p + q]"},
{"fcstDiracGammaCombine-ID2",
"DiracGammaCombine[GS[p]+GSD[q],FCE\[Rule]True]", "GS[p] + GSD[q]"},
{"fcstDiracGammaCombine-ID3",
"DiracGammaCombine[GS[p]+GS[q]+m,FCE\[Rule]True]", "m + GS[p + q]"},
{"fcstDiracGammaCombine-ID4",
"DiracGammaCombine[GA[i].(GS[p]+GS[q]+m).GA[j],FCE\[Rule]True]",
"GA[i] . (m + GS[p + q]) . GA[j]"},
{"fcstDiracGammaCombine-ID5",
"DiracGammaCombine[GA[i].(2GS[p]+3GS[q]+m).GA[j],FCE\[Rule]True]",
"GA[i] . (m + GS[2*p + 3*q]) . GA[j]"},
{"fcstDiracGammaCombine-ID6",
"DiracGammaCombine[GA[i].(2GS[p]+3GS[p]+m).GA[j],FCE\[Rule]True]",
"GA[i] . (m + 5*GS[p]) . GA[j]"},
{"fcstDiracGammaCombine-ID7",
"DiracGammaCombine[CGS[p] + CGS[q], FCE -> True]", "CGS[p + q]"},
{"fcstDiracGammaCombine-ID8",
"DiracGammaCombine[CGS[p] + CGSD[q], FCE -> True]", "CGS[p] + CGSD[q]"},
{"fcstDiracGammaCombine-ID9",
"DiracGammaCombine[CGS[p] + CGS[q] + m, FCE -> True]", "m + CGS[p + q]"},
{"fcstDiracGammaCombine-ID10",
"DiracGammaCombine[CGA[i].(CGS[p] + CGS[q] + m).CGA[j], FCE -> True]", "CGA[i].(m + CGS[p + q]).CGA[j]"},
{"fcstDiracGammaCombine-ID11",
"DiracGammaCombine[CGA[i].(2 CGS[p] + 3 CGS[q] + m).CGA[j],
FCE -> True]", "CGA[i].(m + CGS[2 p + 3 q]).CGA[j]"},
{"fcstDiracGammaCombine-ID12",
"DiracGammaCombine[CGA[i].(2 CGS[p] + 3 CGS[p] + m).CGA[j],
FCE -> True]", "CGA[i].(m + 5 CGS[p]).CGA[j]"},
{"fcstDiracGammaCombine-ID13", "DiracGammaCombine[GS[p] + GS[q] == x, FCE -> True]",
"GS[p + q] == x"},
{"fcstDiracGammaCombine-ID14", "DiracGammaCombine[{GS[p] + GS[q], GS[r] + GS[s]}, FCE -> True]",
"{GS[p + q], GS[r + s]}"},
{"fcstDiracGammaCombine-ID15", "DiracGammaCombine[GSLR[p, n, nb] + GSLR[q, n, nb], FCE -> True]",
"GSLR[p + q, n, nb]"},
{"fcstDiracGammaCombine-ID16", "DiracGammaCombine[GSLRD[p, n, nb] + GSLRD[q, n, nb], FCE -> True]",
"GSLRD[p + q, n, nb]"}
});
