(* :Title: Collect2.test														*)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 1990-2021 Rolf Mertig
	Copyright (C) 1997-2021 Frederik Orellana
	Copyright (C) 2014-2021 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for Collect2					*)

(* ------------------------------------------------------------------------ *)

Tests`Shared`fcstCollect2 = {
{"fcstCollect2-ID1","Collect2[a + r a + k^2 f[a] - k f[a] + x/2 - y/w, a]",
	"a (1 + r) + (w x - 2 y)/(2 w) + (-1 + k) k f[a]"},
{"fcstCollect2-ID2","Collect2[a + r a + k^2 f[a] - k f[a] + x/2 - y/w, a,
Factoring -> False]",
	"a (1 + r) + x/2 - y/w + (-k + k^2) f[a]"},
{"fcstCollect2-ID3","Collect2[a + r a + k^2 f[a] - k f[a] + x/2 - y/w, a,
Factoring -> Factor]",
	"a (1 + r) + (w x - 2 y)/(2 w) + (-1 + k) k f[a]"},
{"fcstCollect2-ID4","Collect2[2 a (b - a) (h - 1) - b^2 (e a - c) + b^2, {a, b}]",
	"-2 a^2 (h-1)-a b^2 e+2 a b (h-1)+b^2 (c+1)"},
{"fcstCollect2-ID5","Collect2[Expand[(a - b - c - d)^5], a,
IsolateNames -> L] // FRH",
	"a^5-5 a^4 (b+c+d)+10 a^3 (b+c+d)^2-10 a^2 (b+c+d)^3+5 a (b+c+d)^4-(b+c+d)^5"},
{"fcstCollect2-ID6","Collect2[Expand[(a - b - c)^3], a, Factoring -> fun] /.
fun -> FactorTerms",
	"a^3-3 a^2 (b+c)+3 a (b^2+2 b c+c^2)-b^3-3 b^2 c-3 b c^2-c^3"},
{"fcstCollect2-ID7","Collect2[(Hold[a*b] + Hold[c*d]) (e + f) + (Hold[a*b] +
	Hold[c*d]) (e + 3 f), {e, f}]",
	"2*e*(Hold[a*b] + Hold[c*d]) + 4*f*(Hold[a*b] + Hold[c*d])"},
{"fcstCollect2-ID8","Collect2[1/(x + t (x + c)^2 + d) + x + a (x + d), x,Denominator -> True]",
	"a d + (1 + a) x + 1/(d + c^2 t + (1 + 2 c t) x + t x^2)"},
{"fcstCollect2-ID9","Collect2[a (-m^2 - p^2) + b + c, {a, b, c}]",
	"b + c - a (m^2 + p^2)"},
{"fcstCollect2-ID10","Collect2[Expand[(a + b + c)^2 (b + d)^3], {a, d}, Head -> hh]",
	"b^3 (b + c)^2 + 2 b^3 (b + c) hh[a] + b^3 hh[a^2] +
3 b^2 (b + c)^2 hh[d] + 6 b^2 (b + c) hh[a d] + 3 b^2 hh[a^2 d] +
3 b (b + c)^2 hh[d^2] + 6 b (b + c) hh[a d^2] +
3 b hh[a^2 d^2] + (b + c)^2 hh[d^3] + 2 (b + c) hh[a d^3] +
hh[a^2 d^3]"},
{"fcstCollect2-ID11","MatchQ[Collect2[
yy (xx*Sum[p[i] i^2, {i, 1, 100000}] + abc) + abc2, {abc, abc2},
Factoring -> False, Factoring -> False],
yy (xx*Sum[p[i] i^2, {i, 1, 100000}]) + abc yy + abc2]",
	"True"},
{"fcstCollect2-ID12","MatchQ[Collect2[
Sum[xa[i], {i, 1, 10}] + VAR Sum[xb[i], {i, 1, 10}] +
	VAR Sum[xx[i], {i, 1, 10}] + VAR^2 Sum[xy[i], {i, 1, 10}] +
	VAR^2 Sum[xz[i], {i, 1, 10}], VAR, Factoring -> False,
IsolateFast -> True, IsolateNames -> KK] // FRH,
Sum[xa[i], {i, 1, 10}] +
VAR (Sum[xb[i], {i, 1, 10}] + Sum[xx[i], {i, 1, 10}]) +
VAR^2 (Sum[xy[i], {i, 1, 10}] + Sum[xz[i], {i, 1, 10}])]",
	"True"},
{"fcstCollect2-ID13","Collect2[Together[a (1 + x) + 4 b (1 + y)],
	{a, b}, FCFactorOut -> 4]",
	"4 (1/4 a (x+1)+b (y+1))"},
{"fcstCollect2-ID14","Collect2[a PolyLog[2, z] +
s^2 PolyLog[2, z] + (1 - z) Log[2] + (2 + Pi^2) Log[1/(1 - z)] +
f Log[1/(1 - z)], Log[1/(1 - z)], PolyLog[2, z],Factoring->hold]",
	"hold[(1 - z)*Log[2]] + hold[2 + f + Pi^2]*Log[(1 - z)^(-1)] + hold[a + s^2]*PolyLog[2, z]"},
{"fcstCollect2-ID15","Collect2[a PolyLog[2, z] +
s^2 PolyLog[2, z] + (1 - z) Log[2] + (2 + Pi^2) Log[1/(1 - z)] +
f Log[1/(1 - z)], Log[1/(1 - z)], PolyLog[2, z], Head -> {h1, h2},Factoring->hold]",
	"h2[hold[2 + f + Pi^2], h1[Log[(1 - z)^(-1)]]] + h2[hold[a + s^2], h1[PolyLog[2, z]]] + h2[hold[(1 - z)*Log[2]], 1]"},
{"fcstCollect2-ID16","Collect2[(a - b)^2 - a^2 - b^2, a, b, InitialFunction -> fu]",
	"fu[-a^2 + (a - b)^2 - b^2]"},
{"fcstCollect2-ID17","Collect2[(a - b)^2 - a^2 - b^2, a, b,
InitialFunction -> {fu1, fu2, fu3}]",
	"fu1[fu2[fu3[-a^2 + (a - b)^2 - b^2]]]"},
{"fcstCollect2-ID18","Collect2[(a - b)^2 - a^2 - b^2, a, b,
IntermediateSubstitutions -> {a - b -> c}]",
	"-a^2 - b^2 + c^2"},
{"fcstCollect2-ID19","MatchQ[FCE[
Collect2[Isolate[
	FCI[Isolate[(a + b + c + d)*FVD[p, mu]*FVD[p, nu]*FAD[p, {p, m}] +
			(e + f + g)*FVD[p, mu]*FVD[p, nu]*FAD[{p, m}], p]], p,
	IsolateNames -> loopisolate], FeynAmpDenominator[__]]],
FAD[{p, m}]*FVD[p, mu]*FVD[p, nu]*HoldForm[KK[a_]] +
FAD[p, {p, m}]*FVD[p, mu]*FVD[p, nu]*HoldForm[KK[b_]]]",
	"True"},
{"fcstCollect2-ID19","Collect2[a^2 + 2 a b + b^2, c]",
	"(a + b)^2"},
{"fcstCollect2-ID20","Collect2[(x1 a^2 + y 1 a^2 + 2 a b + x2 b^2 + y2 b^2)/(a + b + c^2 +
2 c d + d^2), a, b, Numerator -> True]",
"(2 a b + a^2 (x1 + y) + b^2 (x2 + y2))/(a + b + c^2 + 2 c d + d^2)"},
{"fcstCollect2-ID21","Collect2[(x1 a^2 + y 1 a^2 + 2 a b + x2 b^2 + y2 b^2)/(a + b + c^2 +
	2 c d + d^2), a, b, Numerator->True, FactoringDenominator -> Simplify]",
"(2 a b + a^2 (x1 + y) + b^2 (x2 + y2))/(a + b + (c + d)^2)"},
{"fcstCollect2-ID22","Collect2[{x1 -> a^2 + (2 a^2 + 3 b^2)/4 + 5 b^2}, a, b, c, d]",
"{x1 -> (3 a^2)/2 + (23 b^2)/4}"},
{"fcstCollect2-ID23","Collect2[{x1 -> a^2 + (2 a^2 + 3 b^2)/4 + 5 b^2,
x2 -> c^2 + (c^2 + 4 d^2)/7 + 6 d^2}, a, b, c, d]",
"{x1 -> (3 a^2)/2 + (23 b^2)/4, x2 -> (8 c^2)/7 + (46 d^2)/7}"},
{"fcstCollect2-ID24","Collect2[{x1 :> a^2 + (2 a^2 + 3 b^2)/4 + 5 b^2,
x2 -> c^2 + (c^2 + 4 d^2)/7 + 6 d^2}, a, b, c, d]/.RuleDelayed->rd",
"{rd[x1 , (3*a^2)/2 + (23*b^2)/4], x2 -> (8*c^2)/7 + (46*d^2)/7}"},
{"fcstCollect2-ID25","Collect2[{{x1 -> a^2 + (2 a^2 + 3 b^2)/4 + 5 b^2,
x2 -> c^2 + (c^2 + 4 d^2)/7 + 6 d^2}}, a, b, c, d]",
"{{x1 -> (3 a^2)/2 + (23 b^2)/4, x2 -> (8 c^2)/7 + (46 d^2)/7}}"},


{"fcstCollect2-ID26","Collect2[Sum[a b[i, c1 + c2, c3 + c4], {i, 1, 50}],  d,
Factoring -> {Factor2, 400}]",
"a b[1, c1 + c2, c3 + c4] + a b[2, c1 + c2, c3 + c4] +
a b[3, c1 + c2, c3 + c4] + a b[4, c1 + c2, c3 + c4] +
a b[5, c1 + c2, c3 + c4] + a b[6, c1 + c2, c3 + c4] +
a b[7, c1 + c2, c3 + c4] + a b[8, c1 + c2, c3 + c4] +
a b[9, c1 + c2, c3 + c4] + a b[10, c1 + c2, c3 + c4] +
a b[11, c1 + c2, c3 + c4] + a b[12, c1 + c2, c3 + c4] +
a b[13, c1 + c2, c3 + c4] + a b[14, c1 + c2, c3 + c4] +
a b[15, c1 + c2, c3 + c4] + a b[16, c1 + c2, c3 + c4] +
a b[17, c1 + c2, c3 + c4] + a b[18, c1 + c2, c3 + c4] +
a b[19, c1 + c2, c3 + c4] + a b[20, c1 + c2, c3 + c4] +
a b[21, c1 + c2, c3 + c4] + a b[22, c1 + c2, c3 + c4] +
a b[23, c1 + c2, c3 + c4] + a b[24, c1 + c2, c3 + c4] +
a b[25, c1 + c2, c3 + c4] + a b[26, c1 + c2, c3 + c4] +
a b[27, c1 + c2, c3 + c4] + a b[28, c1 + c2, c3 + c4] +
a b[29, c1 + c2, c3 + c4] + a b[30, c1 + c2, c3 + c4] +
a b[31, c1 + c2, c3 + c4] + a b[32, c1 + c2, c3 + c4] +
a b[33, c1 + c2, c3 + c4] + a b[34, c1 + c2, c3 + c4] +
a b[35, c1 + c2, c3 + c4] + a b[36, c1 + c2, c3 + c4] +
a b[37, c1 + c2, c3 + c4] + a b[38, c1 + c2, c3 + c4] +
a b[39, c1 + c2, c3 + c4] + a b[40, c1 + c2, c3 + c4] +
a b[41, c1 + c2, c3 + c4] + a b[42, c1 + c2, c3 + c4] +
a b[43, c1 + c2, c3 + c4] + a b[44, c1 + c2, c3 + c4] +
a b[45, c1 + c2, c3 + c4] + a b[46, c1 + c2, c3 + c4] +
a b[47, c1 + c2, c3 + c4] + a b[48, c1 + c2, c3 + c4] +
a b[49, c1 + c2, c3 + c4] + a b[50, c1 + c2, c3 + c4]"},
{"fcstCollect2-ID27","Collect2[Sum[a b[i, c1 + c2, c3 + c4], {i, 1, 50}],  d,
Factoring -> {Factor2, 600}]","a (b[1, c1 + c2, c3 + c4] + b[2, c1 + c2, c3 + c4] +
b[3, c1 + c2, c3 + c4] + b[4, c1 + c2, c3 + c4] +
b[5, c1 + c2, c3 + c4] + b[6, c1 + c2, c3 + c4] +
b[7, c1 + c2, c3 + c4] + b[8, c1 + c2, c3 + c4] +
b[9, c1 + c2, c3 + c4] + b[10, c1 + c2, c3 + c4] +
b[11, c1 + c2, c3 + c4] + b[12, c1 + c2, c3 + c4] +
b[13, c1 + c2, c3 + c4] + b[14, c1 + c2, c3 + c4] +
b[15, c1 + c2, c3 + c4] + b[16, c1 + c2, c3 + c4] +
b[17, c1 + c2, c3 + c4] + b[18, c1 + c2, c3 + c4] +
b[19, c1 + c2, c3 + c4] + b[20, c1 + c2, c3 + c4] +
b[21, c1 + c2, c3 + c4] + b[22, c1 + c2, c3 + c4] +
b[23, c1 + c2, c3 + c4] + b[24, c1 + c2, c3 + c4] +
b[25, c1 + c2, c3 + c4] + b[26, c1 + c2, c3 + c4] +
b[27, c1 + c2, c3 + c4] + b[28, c1 + c2, c3 + c4] +
b[29, c1 + c2, c3 + c4] + b[30, c1 + c2, c3 + c4] +
b[31, c1 + c2, c3 + c4] + b[32, c1 + c2, c3 + c4] +
b[33, c1 + c2, c3 + c4] + b[34, c1 + c2, c3 + c4] +
b[35, c1 + c2, c3 + c4] + b[36, c1 + c2, c3 + c4] +
b[37, c1 + c2, c3 + c4] + b[38, c1 + c2, c3 + c4] +
b[39, c1 + c2, c3 + c4] + b[40, c1 + c2, c3 + c4] +
b[41, c1 + c2, c3 + c4] + b[42, c1 + c2, c3 + c4] +
b[43, c1 + c2, c3 + c4] + b[44, c1 + c2, c3 + c4] +
b[45, c1 + c2, c3 + c4] + b[46, c1 + c2, c3 + c4] +
b[47, c1 + c2, c3 + c4] + b[48, c1 + c2, c3 + c4] +
b[49, c1 + c2, c3 + c4] + b[50, c1 + c2, c3 + c4])"},
{"fcstCollect2-ID27","Collect2[Expand[(a - b - c - d)^5], a, Head -> {Identity, h2}]",
"h2[1, a^5] + h2[-5*(b + c + d), a^4] + h2[10*(b + c + d)^2, a^3] +
h2[-10*(b + c + d)^3, a^2] + h2[5*(b + c + d)^4, a] + h2[-(b + c + d)^5, 1]"}
};
