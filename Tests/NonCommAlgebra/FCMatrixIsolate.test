(* :Title: FCMatrixIsolate.test												*)

(*
	This software is covered by the GNU General Public License 3.
	Copyright (C) 1990-2021 Rolf Mertig
	Copyright (C) 1997-2021 Frederik Orellana
	Copyright (C) 2014-2021 Vladyslav Shtabovenko
*)

(* :Summary:  Framework independent unit tests for FCMatrixIsolate			*)

(* ------------------------------------------------------------------------ *)

Tests`NonCommAlgebra`fcstFCMatrixIsolate =
({
{"fcstFCMatrixIsolate-ID1", "FCMatrixIsolate[0]", "0"},
{"fcstFCMatrixIsolate-ID2", "FCMatrixIsolate[1]", "1"},
{"fcstFCMatrixIsolate-ID3", "FCMatrixIsolate[1,Head\[Rule]re]",
"re[1]"},
{"fcstFCMatrixIsolate-ID4",
"FCMatrixIsolate[x1 \
SpinorUBar[p1,m1].GA[mu].(GS[p]+m).GA[nu].SpinorV[p2,m2]+\
\[IndentingNewLine]x2 \
SpinorUBar[p1,m1].GA[rho].(GS[p]+m).GA[si,5].SpinorV[p2,m2],\
FCDiracIsolate\[Rule]{dch},FCE\[Rule]True]",
"x1*dch[Spinor[Momentum[p1], m1, 1] . GA[mu] . (m + GS[p]) . \
GA[nu] . Spinor[-Momentum[p2], m2, 1]] + x2*dch[Spinor[Momentum[p1], \
m1, 1] . GA[rho] . (m + GS[p]) . GA[si] . GA[5] . \
Spinor[-Momentum[p2], m2, 1]]"},
{"fcstFCMatrixIsolate-ID5",
"FCMatrixIsolate[x1 SUNT[a] \
SpinorUBar[p1,m1].GA[mu].(GS[p]+m).GA[nu].SpinorV[p2,m2]+\
\[IndentingNewLine]x2 \
SpinorUBar[p1,m1].GA[rho].(GS[p]+m).GA[si,5].SpinorV[p2,m2],\
FCDiracIsolate\[Rule]{dch},FCColorIsolate\[Rule]{cch},FCE\[Rule]True]\
", "x1*cch[SUNT[a]]*dch[Spinor[Momentum[p1], m1, 1] . GA[mu] . (m + \
GS[p]) . GA[nu] . Spinor[-Momentum[p2], m2, 1]] + \
x2*dch[Spinor[Momentum[p1], m1, 1] . GA[rho] . (m + GS[p]) . GA[si] . \
GA[5] . Spinor[-Momentum[p2], m2, 1]]"},
{"fcstFCMatrixIsolate-ID6",
"FCMatrixIsolate[x1 SUNT[a] \
SpinorUBar[p1,m1].GA[mu].(GS[p]+m).GA[nu].SpinorV[p2,m2]+\
\[IndentingNewLine]x2 SI[i,j] \
SpinorUBar[p1,m1].GA[rho].(GS[p]+m).GA[si,5].SpinorV[p2,m2],\
FCDiracIsolate\[Rule]{dch},FCColorIsolate\[Rule]{cch},FCPauliIsolate\
\[Rule]{pch},FCE\[Rule]True]",
"x1*cch[SUNT[a]]*dch[Spinor[Momentum[p1], m1, 1] . GA[mu] . (m + \
GS[p]) . GA[nu] . Spinor[-Momentum[p2], m2, 1]] + \
x2*dch[Spinor[Momentum[p1], m1, 1] . GA[rho] . (m + GS[p]) . GA[si] . \
GA[5] . Spinor[-Momentum[p2], m2, 1]]*pch[SI[i] . SI[j]]"},
{"fcstFCMatrixIsolate-ID7",
"FCMatrixIsolate[x1 SUNT[a] \
SpinorUBar[p1,m1].GA[mu].(GS[p]+m).GA[nu].SpinorV[p2,m2]+\
\[IndentingNewLine]x2 SI[i,j] \
SpinorUBar[p1,m1].GA[rho].(GS[p]+m).GA[si,5].SpinorV[p2,m2],\
FCDiracIsolate\[Rule]{dch},FCColorIsolate\[Rule]{cch},FCPauliIsolate\
\[Rule]{pch},FCE\[Rule]True,Ordering\[Rule]{FCPauliIsolate}]",
"x2*Spinor[Momentum[p1], m1, 1] . GA[rho] . (m + GS[p]) . GA[si] . \
GA[5] . Spinor[-Momentum[p2], m2, 1]*pch[SI[i] . SI[j]] + \
x1*Spinor[Momentum[p1], m1, 1] . GA[mu] . (m + GS[p]) . GA[nu] . \
Spinor[-Momentum[p2], m2, 1]*SUNT[a]"},
{"fcstFCMatrixIsolate-ID8",
"FCMatrixIsolate[x1 SUNT[a] \
SpinorUBar[p1,m1].GA[mu].(GS[p]+m).GA[nu].SpinorV[p2,m2]+\
\[IndentingNewLine]x2 SI[i,j] \
SpinorUBar[p1,m1].GA[rho].(GS[p]+m).GA[si,5].SpinorV[p2,m2],\
FCDiracIsolate\[Rule]{dch},FCColorIsolate\[Rule]{cch},FCPauliIsolate\
\[Rule]{pch},FCE\[Rule]True,Ordering\[Rule]{FCDiracIsolate}]",
"x2*dch[Spinor[Momentum[p1], m1, 1] . GA[rho] . (m + GS[p]) . \
GA[si] . GA[5] . Spinor[-Momentum[p2], m2, 1]]*SI[i] . SI[j] + \
x1*dch[Spinor[Momentum[p1], m1, 1] . GA[mu] . (m + GS[p]) . GA[nu] . \
Spinor[-Momentum[p2], m2, 1]]*SUNT[a]"},
{"fcstFCMatrixIsolate-ID9",
"FCMatrixIsolate[x1 SUNT[a] \
SpinorUBar[p1,m1].GA[mu].(GS[p]+m).GA[nu].SpinorV[p2,m2]+\
\[IndentingNewLine]x2 SI[i,j] \
SpinorUBar[p1,m1].GA[rho].(GS[p]+m).GA[si,5].SpinorV[p2,m2],\
FCDiracIsolate\[Rule]{dch},FCColorIsolate\[Rule]{cch},FCPauliIsolate\
\[Rule]{pch},FCE\[Rule]True,Ordering\[Rule]{FCColorIsolate}]",
"x1*cch[SUNT[a]]*Spinor[Momentum[p1], m1, 1] . GA[mu] . (m + \
GS[p]) . GA[nu] . Spinor[-Momentum[p2], m2, 1] + x2*SI[i] . \
SI[j]*Spinor[Momentum[p1], m1, 1] . GA[rho] . (m + GS[p]) . GA[si] . \
GA[5] . Spinor[-Momentum[p2], m2, 1]"},
{"fcstFCMatrixIsolate-ID10",
"FCMatrixIsolate[x1 SUNT[a] \
SpinorUBar[p1,m1].GA[mu].(GS[p]+m).GA[nu].SpinorV[p2,m2]+\
\[IndentingNewLine]x2 SI[i,j] \
SpinorUBar[p1,m1].GA[rho].(GS[p]+m).GA[si,5].SpinorV[p2,m2],\
FCDiracIsolate\[Rule]{dch},FCColorIsolate\[Rule]{cch},FCPauliIsolate\
\[Rule]{pch},FCE\[Rule]True,Ordering\[Rule]{FCColorIsolate,\
FCPauliIsolate,FCDiracIsolate}]",
"x1*cch[SUNT[a]]*dch[Spinor[Momentum[p1], m1, 1] . GA[mu] . (m + \
GS[p]) . GA[nu] . Spinor[-Momentum[p2], m2, 1]] + \
x2*dch[Spinor[Momentum[p1], m1, 1] . GA[rho] . (m + GS[p]) . GA[si] . \
GA[5] . Spinor[-Momentum[p2], m2, 1]]*pch[SI[i] . SI[j]]"},
{"fcstFCMatrixIsolate-ID11",
"FCMatrixIsolate[-e eQ gs \
Spinor[Momentum[k2],mu,1].GS[Polarization[k1,-\[ImaginaryI],\
Transversality\[Rule]True]].(mu+GS[k1+k2]).GS[Polarization[p2,\
\[ImaginaryI]]].Spinor[Momentum[p1],mu,1] FAD[{-k1-k2,mu},Dimension\
\[Rule]4] SUNTF[{Glu3},Col4,Col1]-e eQ gs \
Spinor[Momentum[k2],mu,1].GS[Polarization[p2,\[ImaginaryI]]].(mu+GS[\
k2-p2]).GS[Polarization[k1,-\[ImaginaryI],Transversality\[Rule]True]].\
Spinor[Momentum[p1],mu,1] FAD[{-k2+p2,mu},Dimension\[Rule]4] \
SUNTF[{Glu3},Col4,Col1],FCDiracIsolate\[Rule]{dch},\[IndentingNewLine]\
FCColorIsolate\[Rule]{cch},FCPauliIsolate\[Rule]{pch},Head\[Rule]re,\
FCE\[Rule]True]",
"cch[SUNTF[{Glu3}, Col4, Col1]]*dch[Spinor[Momentum[k2], mu, 1] . \
GS[Polarization[k1, -I, Transversality -> True]] . (mu + GS[k1 + k2]) \
. GS[Polarization[p2, I]] . Spinor[Momentum[p1], mu, \
1]]*re[-(e*eQ*gs*FAD[{-k1 - k2, mu}, Dimension -> 4])] + \
cch[SUNTF[{Glu3}, Col4, Col1]]*dch[Spinor[Momentum[k2], mu, 1] . \
GS[Polarization[p2, I]] . (mu + GS[k2 - p2]) . GS[Polarization[k1, \
-I, Transversality -> True]] . Spinor[Momentum[p1], mu, \
1]]*re[-(e*eQ*gs*FAD[{-k2 + p2, mu}, Dimension -> 4])]"},
{"fcstFCMatrixIsolate-ID12", "FCMatrixIsolate[-e eQ gs Spinor[Momentum[k2], mu, 1].GS[
	Polarization[k1, -I, Transversality -> True]].(mu +
	GS[k1 + k2]).GS[Polarization[p2, I]].Spinor[Momentum[p1], mu,
	1] FAD[{-k1 - k2, mu}, Dimension -> 4] SUNTF[{Glu3}, Col4,
	Col1] - e eQ gs DCHN[Spinor[Momentum[k2], mu, 1], i] DCHN[
	GS[Polarization[p2, I]].(mu + GS[k2 - p2]).GS[
	Polarization[k1, -I, Transversality -> True]], i, j] DCHN[
	Spinor[Momentum[p1], mu, 1], j] FAD[{-k2 + p2, mu},
	Dimension -> 4] SUNTF[{Glu3}, Col4, Col1], FCDiracIsolate -> {dch},
FCColorIsolate -> {cch}, FCPauliIsolate -> {pch}, Head -> re,
FCE -> True]", "cch[SUNTF[{Glu3}, Col4, Col1]] dch[
Spinor[Momentum[k2], mu, 1].GS[
	Polarization[k1, -I, Transversality -> True]].(mu +
	GS[k1 + k2]).GS[Polarization[p2, I]].Spinor[Momentum[p1], mu,
	1]] re[-e eQ gs FAD[{-k1 - k2, mu}, Dimension -> 4]] +
cch[SUNTF[{Glu3}, Col4, Col1]] dch[
DCHN[Spinor[Momentum[k2], mu, 1], i] DCHN[
	Spinor[Momentum[p1], mu, 1], j] DCHN[
	GS[Polarization[p2, I]].(mu + GS[k2 - p2]).GS[
	Polarization[k1, -I, Transversality -> True]], i,
	j]] re[-e eQ gs FAD[{-k2 + p2, mu}, Dimension -> 4]]"},
{"fcstFCMatrixIsolate-ID12", "FCMatrixIsolate[{GA[mu], SI[j], SUNT[a]},
FCColorIsolate -> {col},
FCDiracIsolate -> {di},
FCPauliIsolate -> {pau},
FCE -> True]", "{di[GA[mu]], pau[SI[j]], col[SUNT[a]]}"}
});
