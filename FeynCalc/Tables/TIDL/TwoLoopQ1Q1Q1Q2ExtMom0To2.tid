{
tidl[{{q1_,mu_},{q1_,nu_},{q1_,rho_},{q2_,si_}},{},n_]/; q1=!=q2 :>
		Block[{encli, m1, m2, m3, m4, m5, m6, s1, t1, t2},
		encli={(m3*m4*t1*t2)/(n*s1)+(m2*m5*t1*t2)/(n*s1)+(m1*m6*t1*t2)/(n*s1),
		{s1->2+n},{t1->SP[q1,q1],t2->SP[q1,q2],m1->MT[mu,nu],
		m2->MT[mu,rho],m3->MT[mu,si],m4->MT[nu,rho],m5->MT[nu,si],
		m6->MT[rho,si]}};
		scpexp[encli,n]],
tidl[{{q1_,mu_},{q1_,nu_},{q1_,rho_},{q2_,si_}},{p1_},n_]/; q1=!=q2 :>
		Block[{encli, m1, m2, m3, m4, m5, m6, s1, s2, s3, s4, s5, s6, s7, t1, t2, t3, t4, t5, v1, v2, v3, v4},
		encli={(m3*m4*s3*s6)/(s1*s2*t1^2)+(m2*m5*s3*s6)/(s1*s2*t1^2)+
		(m1*m6*s3*s6)/(s1*s2*t1^2)+(m6*s5*s6*v1*v2)/(s1*s2*t1^3)+
		(m5*s5*s6*v1*v3)/(s1*s2*t1^3)+(m3*s5*s6*v2*v3)/(s1*s2*t1^3)+
		(m4*s3*s4*v1*v4)/(s1*s2*t1^3)+(m2*s3*s4*v2*v4)/(s1*s2*t1^3)+
		(m1*s3*s4*v3*v4)/(s1*s2*t1^3)+(s7*v1*v2*v3*v4)/(s1*s2*t1^4),
		{s1->-1+n,s2->1+n,s3->-t2^2+t1*t4,
		s4->2*t2*t3+n*t2*t3-t1*t5,s5->2*t2^2+n*t2^2-t1*t4,
		s6->-(t2*t3)+t1*t5,s7->8*t2^3*t3+6*n*t2^3*t3+n^2*t2^3*t3-
		6*t1*t2*t3*t4-3*n*t1*t2*t3*t4-6*t1*t2^2*t5-3*n*t1*t2^2*t5+
		3*t1^2*t4*t5},{t1->SP[p1,p1],t2->SP[p1,q1],t3->SP[p1,q2],
		t4->SP[q1,q1],t5->SP[q1,q2],t1->SP[p1,p1],v1->FV[p1,mu],
		v2->FV[p1,nu],v3->FV[p1,rho],v4->FV[p1,si],m1->MT[mu,nu],
		m2->MT[mu,rho],m3->MT[mu,si],m4->MT[nu,rho],m5->MT[nu,si],
		m6->MT[rho,si]}};
		scpexp[encli,n]],
tidl[{{q1_,mu_},{q1_,nu_},{q1_,rho_},{q2_,si_}},{p1_, p2_},n_]/; q1=!=q2 :>
		Block[{encli, m1, m2, m3, m4, m5, m6, s1, s10, s11, s12, s13, s14, s15, s16, s17, s18, s19, s2, s3, s4, s5, s6, s7, s8, s9, t1, t2, t3, t4, t5, t6, t7, t8, t9, v1, v2, v3, v4, v5, v6, v7, v8},
encli={(m3*m4*s3*s4)/(n*s1*s2^2)+(m2*m5*s3*s4)/(n*s1*s2^2)+
(m1*m6*s3*s4)/(n*s1*s2^2)+(m6*s4*s7*v1*v2)/(n*s1*s2^3)+
(m5*s4*s7*v1*v3)/(n*s1*s2^3)+(m3*s4*s7*v2*v3)/(n*s1*s2^3)+
(m4*s11*s3*v1*v4)/(n*s1*s2^3)+(m2*s11*s3*v2*v4)/(n*s1*s2^3)+
(m1*s11*s3*v3*v4)/(n*s1*s2^3)+(s19*v1*v2*v3*v4)/(n*s1*s2^4)+
(m6*s4*s6*v2*v5)/(n*s1*s2^3)+(m5*s4*s6*v3*v5)/(n*s1*s2^3)+
(m4*s3*s9*v4*v5)/(n*s1*s2^3)+(s18*v2*v3*v4*v5)/(n*s1*s2^4)+
(m6*s4*s6*v1*v6)/(n*s1*s2^3)+(m3*s4*s6*v3*v6)/(n*s1*s2^3)+
(m2*s3*s9*v4*v6)/(n*s1*s2^3)+(s18*v1*v3*v4*v6)/(n*s1*s2^4)+
(m6*s4*s5*v5*v6)/(n*s1*s2^3)+(s16*v3*v4*v5*v6)/(n*s1*s2^4)+
(m5*s4*s6*v1*v7)/(n*s1*s2^3)+(m3*s4*s6*v2*v7)/(n*s1*s2^3)+
(m1*s3*s9*v4*v7)/(n*s1*s2^3)+(s18*v1*v2*v4*v7)/(n*s1*s2^4)+
(m5*s4*s5*v5*v7)/(n*s1*s2^3)+(s16*v2*v4*v5*v7)/(n*s1*s2^4)+
(m3*s4*s5*v6*v7)/(n*s1*s2^3)+(s16*v1*v4*v6*v7)/(n*s1*s2^4)+
(s13*v4*v5*v6*v7)/(n*s1*s2^4)+(m4*s10*s3*v1*v8)/(n*s1*s2^3)+
(m2*s10*s3*v2*v8)/(n*s1*s2^3)+(m1*s10*s3*v3*v8)/(n*s1*s2^3)+
(s17*v1*v2*v3*v8)/(n*s1*s2^4)+(m4*s3*s8*v5*v8)/(n*s1*s2^3)+
(s15*v2*v3*v5*v8)/(n*s1*s2^4)+(m2*s3*s8*v6*v8)/(n*s1*s2^3)+
(s15*v1*v3*v6*v8)/(n*s1*s2^4)+(s14*v3*v5*v6*v8)/(n*s1*s2^4)+
(m1*s3*s8*v7*v8)/(n*s1*s2^3)+(s15*v1*v2*v7*v8)/(n*s1*s2^4)+
(s14*v2*v5*v7*v8)/(n*s1*s2^4)+(s14*v1*v6*v7*v8)/(n*s1*s2^4)+
(s12*v5*v6*v7*v8)/(n*s1*s2^4),{s1->-2+n,s2->t2^2-t1*t5,
s3->t3^2*t5-2*t2*t3*t6+t1*t6^2+t2^2*t8-t1*t5*t8,
s4->t3*t4*t5-t2*t4*t6-t2*t3*t7+t1*t6*t7+t2^2*t9-t1*t5*t9,
s5->n*t2^2*t3^2+t1*t3^2*t5-2*t1*t2*t3*t6-2*n*t1*t2*t3*t6+
t1^2*t6^2+n*t1^2*t6^2+t1*t2^2*t8-t1^2*t5*t8,
s6->-(t2*t3^2*t5)-n*t2*t3^2*t5+2*t2^2*t3*t6+n*t2^2*t3*t6+
n*t1*t3*t5*t6-t1*t2*t6^2-n*t1*t2*t6^2-t2^3*t8+t1*t2*t5*t8,
s7->t3^2*t5^2+n*t3^2*t5^2-2*t2*t3*t5*t6-2*n*t2*t3*t5*t6+
n*t2^2*t6^2+t1*t5*t6^2+t2^2*t5*t8-t1*t5^2*t8,
s8->n*t2^2*t3*t4+t1*t3*t4*t5-t1*t2*t4*t6-n*t1*t2*t4*t6-
t1*t2*t3*t7-n*t1*t2*t3*t7+t1^2*t6*t7+n*t1^2*t6*t7+t1*t2^2*t9-
t1^2*t5*t9,s9->-(t2*t3*t4*t5)-n*t2*t3*t4*t5+t2^2*t4*t6+
n*t1*t4*t5*t6+t2^2*t3*t7+n*t2^2*t3*t7-t1*t2*t6*t7-n*t1*t2*t6*t7-
t2^3*t9+t1*t2*t5*t9,s10->-(t2*t3*t4*t5)-n*t2*t3*t4*t5+
t2^2*t4*t6+n*t2^2*t4*t6+t2^2*t3*t7+n*t1*t3*t5*t7-t1*t2*t6*t7-
n*t1*t2*t6*t7-t2^3*t9+t1*t2*t5*t9,
s11->t3*t4*t5^2+n*t3*t4*t5^2-t2*t4*t5*t6-n*t2*t4*t5*t6-
t2*t3*t5*t7-n*t2*t3*t5*t7+n*t2^2*t6*t7+t1*t5*t6*t7+t2^2*t5*t9-
t1*t5^2*t9,s12->-2*n*t2^4*t3^3*t4+n^2*t2^4*t3^3*t4+
6*n*t1*t2^2*t3^3*t4*t5+3*t1^2*t3^3*t4*t5^2-3*n*t1*t2^3*t3^2*t4*t6-
3*n^2*t1*t2^3*t3^2*t4*t6-9*t1^2*t2*t3^2*t4*t5*t6-
9*n*t1^2*t2*t3^2*t4*t5*t6+6*t1^2*t2^2*t3*t4*t6^2+
9*n*t1^2*t2^2*t3*t4*t6^2+3*n^2*t1^2*t2^2*t3*t4*t6^2+
3*t1^3*t3*t4*t5*t6^2+3*n*t1^3*t3*t4*t5*t6^2-3*t1^3*t2*t4*t6^3-
4*n*t1^3*t2*t4*t6^3-n^2*t1^3*t2*t4*t6^3-n*t1*t2^3*t3^3*t7-
n^2*t1*t2^3*t3^3*t7-3*t1^2*t2*t3^3*t5*t7-3*n*t1^2*t2*t3^3*t5*t7+
6*t1^2*t2^2*t3^2*t6*t7+9*n*t1^2*t2^2*t3^2*t6*t7+
3*n^2*t1^2*t2^2*t3^2*t6*t7+3*t1^3*t3^2*t5*t6*t7+
3*n*t1^3*t3^2*t5*t6*t7-9*t1^3*t2*t3*t6^2*t7-12*n*t1^3*t2*t3*t6^2*t7-
3*n^2*t1^3*t2*t3*t6^2*t7+3*t1^4*t6^3*t7+4*n*t1^4*t6^3*t7+
n^2*t1^4*t6^3*t7+3*n*t1*t2^4*t3*t4*t8+3*t1^2*t2^2*t3*t4*t5*t8-
3*n*t1^2*t2^2*t3*t4*t5*t8-3*t1^3*t3*t4*t5^2*t8-3*t1^2*t2^3*t4*t6*t8-
3*n*t1^2*t2^3*t4*t6*t8+3*t1^3*t2*t4*t5*t6*t8+
3*n*t1^3*t2*t4*t5*t6*t8-3*t1^2*t2^3*t3*t7*t8-3*n*t1^2*t2^3*t3*t7*t8+
3*t1^3*t2*t3*t5*t7*t8+3*n*t1^3*t2*t3*t5*t7*t8+3*t1^3*t2^2*t6*t7*t8+
3*n*t1^3*t2^2*t6*t7*t8-3*t1^4*t5*t6*t7*t8-3*n*t1^4*t5*t6*t7*t8+
3*n*t1*t2^4*t3^2*t9+3*t1^2*t2^2*t3^2*t5*t9-3*n*t1^2*t2^2*t3^2*t5*t9-
3*t1^3*t3^2*t5^2*t9-6*t1^2*t2^3*t3*t6*t9-6*n*t1^2*t2^3*t3*t6*t9+
6*t1^3*t2*t3*t5*t6*t9+6*n*t1^3*t2*t3*t5*t6*t9+3*t1^3*t2^2*t6^2*t9+
3*n*t1^3*t2^2*t6^2*t9-3*t1^4*t5*t6^2*t9-3*n*t1^4*t5*t6^2*t9+
3*t1^2*t2^4*t8*t9-6*t1^3*t2^2*t5*t8*t9+3*t1^4*t5^2*t8*t9,
s13->-(n*t2^3*t3^3*t4*t5)-n^2*t2^3*t3^3*t4*t5-3*t1*t2*t3^3*t4*t5^2-
3*n*t1*t2*t3^3*t4*t5^2+3*n*t2^4*t3^2*t4*t6+9*t1*t2^2*t3^2*t4*t5*t6+
6*n*t1*t2^2*t3^2*t4*t5*t6+3*n^2*t1*t2^2*t3^2*t4*t5*t6+
3*n*t1^2*t3^2*t4*t5^2*t6-6*t1*t2^3*t3*t4*t6^2-
6*n*t1*t2^3*t3*t4*t6^2-3*t1^2*t2*t3*t4*t5*t6^2-
6*n*t1^2*t2*t3*t4*t5*t6^2-3*n^2*t1^2*t2*t3*t4*t5*t6^2+
3*t1^2*t2^2*t4*t6^3+3*n*t1^2*t2^2*t4*t6^3+n*t1^3*t4*t5*t6^3+
n^2*t1^3*t4*t5*t6^3+n*t2^4*t3^3*t7+n^2*t2^4*t3^3*t7+
3*t1*t2^2*t3^3*t5*t7+3*n*t1*t2^2*t3^3*t5*t7-6*t1*t2^3*t3^2*t6*t7-
9*n*t1*t2^3*t3^2*t6*t7-3*n^2*t1*t2^3*t3^2*t6*t7-
3*t1^2*t2*t3^2*t5*t6*t7-3*n*t1^2*t2*t3^2*t5*t6*t7+
9*t1^2*t2^2*t3*t6^2*t7+12*n*t1^2*t2^2*t3*t6^2*t7+
3*n^2*t1^2*t2^2*t3*t6^2*t7-3*t1^3*t2*t6^3*t7-4*n*t1^3*t2*t6^3*t7-
n^2*t1^3*t2*t6^3*t7-3*t1*t2^3*t3*t4*t5*t8-3*n*t1*t2^3*t3*t4*t5*t8+
3*t1^2*t2*t3*t4*t5^2*t8+3*n*t1^2*t2*t3*t4*t5^2*t8+
3*t1*t2^4*t4*t6*t8-3*t1^2*t2^2*t4*t5*t6*t8+
3*n*t1^2*t2^2*t4*t5*t6*t8-3*n*t1^3*t4*t5^2*t6*t8+3*t1*t2^4*t3*t7*t8+
3*n*t1*t2^4*t3*t7*t8-3*t1^2*t2^2*t3*t5*t7*t8-
3*n*t1^2*t2^2*t3*t5*t7*t8-3*t1^2*t2^3*t6*t7*t8-
3*n*t1^2*t2^3*t6*t7*t8+3*t1^3*t2*t5*t6*t7*t8+
3*n*t1^3*t2*t5*t6*t7*t8-3*n*t2^5*t3^2*t9-3*t1*t2^3*t3^2*t5*t9+
3*n*t1*t2^3*t3^2*t5*t9+3*t1^2*t2*t3^2*t5^2*t9+6*t1*t2^4*t3*t6*t9+
6*n*t1*t2^4*t3*t6*t9-6*t1^2*t2^2*t3*t5*t6*t9-
6*n*t1^2*t2^2*t3*t5*t6*t9-3*t1^2*t2^3*t6^2*t9-3*n*t1^2*t2^3*t6^2*t9+
3*t1^3*t2*t5*t6^2*t9+3*n*t1^3*t2*t5*t6^2*t9-3*t1*t2^5*t8*t9+
6*t1^2*t2^3*t5*t8*t9-3*t1^3*t2*t5^2*t8*t9,
s14->-(n*t2^3*t3^3*t4*t5)-n^2*t2^3*t3^3*t4*t5-3*t1*t2*t3^3*t4*t5^2-
3*n*t1*t2*t3^3*t4*t5^2+3*n*t2^4*t3^2*t4*t6+n^2*t2^4*t3^2*t4*t6+
9*t1*t2^2*t3^2*t4*t5*t6+7*n*t1*t2^2*t3^2*t4*t5*t6+
2*n^2*t1*t2^2*t3^2*t4*t5*t6+2*n*t1^2*t3^2*t4*t5^2*t6-
6*t1*t2^3*t3*t4*t6^2-8*n*t1*t2^3*t3*t4*t6^2-
2*n^2*t1*t2^3*t3*t4*t6^2-3*t1^2*t2*t3*t4*t5*t6^2-
4*n*t1^2*t2*t3*t4*t5*t6^2-n^2*t1^2*t2*t3*t4*t5*t6^2+
3*t1^2*t2^2*t4*t6^3+4*n*t1^2*t2^2*t4*t6^3+n^2*t1^2*t2^2*t4*t6^3+
n*t2^4*t3^3*t7+3*t1*t2^2*t3^3*t5*t7+2*n*t1*t2^2*t3^3*t5*t7+
n^2*t1*t2^2*t3^3*t5*t7+n*t1^2*t3^3*t5^2*t7-6*t1*t2^3*t3^2*t6*t7-
7*n*t1*t2^3*t3^2*t6*t7-n^2*t1*t2^3*t3^2*t6*t7-
3*t1^2*t2*t3^2*t5*t6*t7-5*n*t1^2*t2*t3^2*t5*t6*t7-
2*n^2*t1^2*t2*t3^2*t5*t6*t7+9*t1^2*t2^2*t3*t6^2*t7+
11*n*t1^2*t2^2*t3*t6^2*t7+2*n^2*t1^2*t2^2*t3*t6^2*t7+
n*t1^3*t3*t5*t6^2*t7+n^2*t1^3*t3*t5*t6^2*t7-3*t1^3*t2*t6^3*t7-
4*n*t1^3*t2*t6^3*t7-n^2*t1^3*t2*t6^3*t7-2*n*t2^5*t3*t4*t8-
3*t1*t2^3*t3*t4*t5*t8+n*t1*t2^3*t3*t4*t5*t8+3*t1^2*t2*t3*t4*t5^2*t8+
n*t1^2*t2*t3*t4*t5^2*t8+3*t1*t2^4*t4*t6*t8+3*n*t1*t2^4*t4*t6*t8-
3*t1^2*t2^2*t4*t5*t6*t8-3*n*t1^2*t2^2*t4*t5*t6*t8+
3*t1*t2^4*t3*t7*t8+2*n*t1*t2^4*t3*t7*t8-3*t1^2*t2^2*t3*t5*t7*t8-
n*t1^2*t2^2*t3*t5*t7*t8-n*t1^3*t3*t5^2*t7*t8-3*t1^2*t2^3*t6*t7*t8-
3*n*t1^2*t2^3*t6*t7*t8+3*t1^3*t2*t5*t6*t7*t8+
3*n*t1^3*t2*t5*t6*t7*t8-n*t2^5*t3^2*t9-3*t1*t2^3*t3^2*t5*t9-
n*t1*t2^3*t3^2*t5*t9+3*t1^2*t2*t3^2*t5^2*t9+
2*n*t1^2*t2*t3^2*t5^2*t9+6*t1*t2^4*t3*t6*t9+4*n*t1*t2^4*t3*t6*t9-
6*t1^2*t2^2*t3*t5*t6*t9-2*n*t1^2*t2^2*t3*t5*t6*t9-
2*n*t1^3*t3*t5^2*t6*t9-3*t1^2*t2^3*t6^2*t9-3*n*t1^2*t2^3*t6^2*t9+
3*t1^3*t2*t5*t6^2*t9+3*n*t1^3*t2*t5*t6^2*t9-3*t1*t2^5*t8*t9+
6*t1^2*t2^3*t5*t8*t9-3*t1^3*t2*t5^2*t8*t9,
s15->2*t2^2*t3^3*t4*t5^2+3*n*t2^2*t3^3*t4*t5^2+
n^2*t2^2*t3^3*t4*t5^2+t1*t3^3*t4*t5^3+n*t1*t3^3*t4*t5^3-
6*t2^3*t3^2*t4*t5*t6-8*n*t2^3*t3^2*t4*t5*t6-
2*n^2*t2^3*t3^2*t4*t5*t6-3*t1*t2*t3^2*t4*t5^2*t6-
4*n*t1*t2*t3^2*t4*t5^2*t6-n^2*t1*t2*t3^2*t4*t5^2*t6+
4*t2^4*t3*t4*t6^2+4*n*t2^4*t3*t4*t6^2+n^2*t2^4*t3*t4*t6^2+
4*t1*t2^2*t3*t4*t5*t6^2+8*n*t1*t2^2*t3*t4*t5*t6^2+
2*n^2*t1*t2^2*t3*t4*t5*t6^2+t1^2*t3*t4*t5^2*t6^2-2*t1*t2^3*t4*t6^3-
3*n*t1*t2^3*t4*t6^3-n^2*t1*t2^3*t4*t6^3-t1^2*t2*t4*t5*t6^3-
n*t1^2*t2*t4*t5*t6^3-2*t2^3*t3^3*t5*t7-2*n*t2^3*t3^3*t5*t7-
t1*t2*t3^3*t5^2*t7-2*n*t1*t2*t3^3*t5^2*t7-n^2*t1*t2*t3^3*t5^2*t7+
4*t2^4*t3^2*t6*t7+2*n*t2^4*t3^2*t6*t7+4*t1*t2^2*t3^2*t5*t6*t7+
10*n*t1*t2^2*t3^2*t5*t6*t7+2*n^2*t1*t2^2*t3^2*t5*t6*t7+
t1^2*t3^2*t5^2*t6*t7+n^2*t1^2*t3^2*t5^2*t6*t7-6*t1*t2^3*t3*t6^2*t7-
7*n*t1*t2^3*t3*t6^2*t7-n^2*t1*t2^3*t3*t6^2*t7-
3*t1^2*t2*t3*t5*t6^2*t7-5*n*t1^2*t2*t3*t5*t6^2*t7-
2*n^2*t1^2*t2*t3*t5*t6^2*t7+2*t1^2*t2^2*t6^3*t7+
3*n*t1^2*t2^2*t6^3*t7+n^2*t1^2*t2^2*t6^3*t7+t1^3*t5*t6^3*t7+
n*t1^3*t5*t6^3*t7+2*t2^4*t3*t4*t5*t8+3*n*t2^4*t3*t4*t5*t8-
t1*t2^2*t3*t4*t5^2*t8-3*n*t1*t2^2*t3*t4*t5^2*t8-t1^2*t3*t4*t5^3*t8-
2*t2^5*t4*t6*t8-2*n*t2^5*t4*t6*t8+t1*t2^3*t4*t5*t6*t8+
n*t1*t2^3*t4*t5*t6*t8+t1^2*t2*t4*t5^2*t6*t8+n*t1^2*t2*t4*t5^2*t6*t8-
2*t2^5*t3*t7*t8+t1*t2^3*t3*t5*t7*t8-3*n*t1*t2^3*t3*t5*t7*t8+
t1^2*t2*t3*t5^2*t7*t8+3*n*t1^2*t2*t3*t5^2*t7*t8+2*t1*t2^4*t6*t7*t8+
2*n*t1*t2^4*t6*t7*t8-t1^2*t2^2*t5*t6*t7*t8-n*t1^2*t2^2*t5*t6*t7*t8-
t1^3*t5^2*t6*t7*t8-n*t1^3*t5^2*t6*t7*t8+2*t2^4*t3^2*t5*t9+
2*n*t2^4*t3^2*t5*t9-t1*t2^2*t3^2*t5^2*t9-n*t1*t2^2*t3^2*t5^2*t9-
t1^2*t3^2*t5^3*t9-n*t1^2*t3^2*t5^3*t9-4*t2^5*t3*t6*t9-
2*n*t2^5*t3*t6*t9+2*t1*t2^3*t3*t5*t6*t9-2*n*t1*t2^3*t3*t5*t6*t9+
2*t1^2*t2*t3*t5^2*t6*t9+4*n*t1^2*t2*t3*t5^2*t6*t9+2*t1*t2^4*t6^2*t9+
3*n*t1*t2^4*t6^2*t9-t1^2*t2^2*t5*t6^2*t9-3*n*t1^2*t2^2*t5*t6^2*t9-
t1^3*t5^2*t6^2*t9+2*t2^6*t8*t9-3*t1*t2^4*t5*t8*t9+t1^3*t5^3*t8*t9,
s16->2*t2^2*t3^3*t4*t5^2+3*n*t2^2*t3^3*t4*t5^2+
n^2*t2^2*t3^3*t4*t5^2+t1*t3^3*t4*t5^3+n*t1*t3^3*t4*t5^3-
6*t2^3*t3^2*t4*t5*t6-7*n*t2^3*t3^2*t4*t5*t6-n^2*t2^3*t3^2*t4*t5*t6-
3*t1*t2*t3^2*t4*t5^2*t6-5*n*t1*t2*t3^2*t4*t5^2*t6-
2*n^2*t1*t2*t3^2*t4*t5^2*t6+4*t2^4*t3*t4*t6^2+2*n*t2^4*t3*t4*t6^2+
4*t1*t2^2*t3*t4*t5*t6^2+10*n*t1*t2^2*t3*t4*t5*t6^2+
2*n^2*t1*t2^2*t3*t4*t5*t6^2+t1^2*t3*t4*t5^2*t6^2+
n^2*t1^2*t3*t4*t5^2*t6^2-2*t1*t2^3*t4*t6^3-2*n*t1*t2^3*t4*t6^3-
t1^2*t2*t4*t5*t6^3-2*n*t1^2*t2*t4*t5*t6^3-n^2*t1^2*t2*t4*t5*t6^3-
2*t2^3*t3^3*t5*t7-3*n*t2^3*t3^3*t5*t7-n^2*t2^3*t3^3*t5*t7-
t1*t2*t3^3*t5^2*t7-n*t1*t2*t3^3*t5^2*t7+4*t2^4*t3^2*t6*t7+
4*n*t2^4*t3^2*t6*t7+n^2*t2^4*t3^2*t6*t7+4*t1*t2^2*t3^2*t5*t6*t7+
8*n*t1*t2^2*t3^2*t5*t6*t7+2*n^2*t1*t2^2*t3^2*t5*t6*t7+
t1^2*t3^2*t5^2*t6*t7-6*t1*t2^3*t3*t6^2*t7-8*n*t1*t2^3*t3*t6^2*t7-
2*n^2*t1*t2^3*t3*t6^2*t7-3*t1^2*t2*t3*t5*t6^2*t7-
4*n*t1^2*t2*t3*t5*t6^2*t7-n^2*t1^2*t2*t3*t5*t6^2*t7+
2*t1^2*t2^2*t6^3*t7+3*n*t1^2*t2^2*t6^3*t7+n^2*t1^2*t2^2*t6^3*t7+
t1^3*t5*t6^3*t7+n*t1^3*t5*t6^3*t7+2*t2^4*t3*t4*t5*t8+
2*n*t2^4*t3*t4*t5*t8-t1*t2^2*t3*t4*t5^2*t8-n*t1*t2^2*t3*t4*t5^2*t8-
t1^2*t3*t4*t5^3*t8-n*t1^2*t3*t4*t5^3*t8-2*t2^5*t4*t6*t8+
t1*t2^3*t4*t5*t6*t8-3*n*t1*t2^3*t4*t5*t6*t8+t1^2*t2*t4*t5^2*t6*t8+
3*n*t1^2*t2*t4*t5^2*t6*t8-2*t2^5*t3*t7*t8-2*n*t2^5*t3*t7*t8+
t1*t2^3*t3*t5*t7*t8+n*t1*t2^3*t3*t5*t7*t8+t1^2*t2*t3*t5^2*t7*t8+
n*t1^2*t2*t3*t5^2*t7*t8+2*t1*t2^4*t6*t7*t8+3*n*t1*t2^4*t6*t7*t8-
t1^2*t2^2*t5*t6*t7*t8-3*n*t1^2*t2^2*t5*t6*t7*t8-t1^3*t5^2*t6*t7*t8+
2*t2^4*t3^2*t5*t9+3*n*t2^4*t3^2*t5*t9-t1*t2^2*t3^2*t5^2*t9-
3*n*t1*t2^2*t3^2*t5^2*t9-t1^2*t3^2*t5^3*t9-4*t2^5*t3*t6*t9-
2*n*t2^5*t3*t6*t9+2*t1*t2^3*t3*t5*t6*t9-2*n*t1*t2^3*t3*t5*t6*t9+
2*t1^2*t2*t3*t5^2*t6*t9+4*n*t1^2*t2*t3*t5^2*t6*t9+2*t1*t2^4*t6^2*t9+
2*n*t1*t2^4*t6^2*t9-t1^2*t2^2*t5*t6^2*t9-n*t1^2*t2^2*t5*t6^2*t9-
t1^3*t5^2*t6^2*t9-n*t1^3*t5^2*t6^2*t9+2*t2^6*t8*t9-
3*t1*t2^4*t5*t8*t9+t1^3*t5^3*t8*t9,
s17->-3*t2*t3^3*t4*t5^3-4*n*t2*t3^3*t4*t5^3-n^2*t2*t3^3*t4*t5^3+
9*t2^2*t3^2*t4*t5^2*t6+12*n*t2^2*t3^2*t4*t5^2*t6+
3*n^2*t2^2*t3^2*t4*t5^2*t6-6*t2^3*t3*t4*t5*t6^2-
9*n*t2^3*t3*t4*t5*t6^2-3*n^2*t2^3*t3*t4*t5*t6^2-
3*t1*t2*t3*t4*t5^2*t6^2-3*n*t1*t2*t3*t4*t5^2*t6^2+n*t2^4*t4*t6^3+
n^2*t2^4*t4*t6^3+3*t1*t2^2*t4*t5*t6^3+3*n*t1*t2^2*t4*t5*t6^3+
3*t2^2*t3^3*t5^2*t7+3*n*t2^2*t3^3*t5^2*t7+n*t1*t3^3*t5^3*t7+
n^2*t1*t3^3*t5^3*t7-6*t2^3*t3^2*t5*t6*t7-6*n*t2^3*t3^2*t5*t6*t7-
3*t1*t2*t3^2*t5^2*t6*t7-6*n*t1*t2*t3^2*t5^2*t6*t7-
3*n^2*t1*t2*t3^2*t5^2*t6*t7+3*n*t2^4*t3*t6^2*t7+
9*t1*t2^2*t3*t5*t6^2*t7+6*n*t1*t2^2*t3*t5*t6^2*t7+
3*n^2*t1*t2^2*t3*t5*t6^2*t7+3*n*t1^2*t3*t5^2*t6^2*t7-
n*t1*t2^3*t6^3*t7-n^2*t1*t2^3*t6^3*t7-3*t1^2*t2*t5*t6^3*t7-
3*n*t1^2*t2*t5*t6^3*t7-3*t2^3*t3*t4*t5^2*t8-3*n*t2^3*t3*t4*t5^2*t8+
3*t1*t2*t3*t4*t5^3*t8+3*n*t1*t2*t3*t4*t5^3*t8+3*t2^4*t4*t5*t6*t8+
3*n*t2^4*t4*t5*t6*t8-3*t1*t2^2*t4*t5^2*t6*t8-
3*n*t1*t2^2*t4*t5^2*t6*t8+3*t2^4*t3*t5*t7*t8-
3*t1*t2^2*t3*t5^2*t7*t8+3*n*t1*t2^2*t3*t5^2*t7*t8-
3*n*t1^2*t3*t5^3*t7*t8-3*t1*t2^3*t5*t6*t7*t8-
3*n*t1*t2^3*t5*t6*t7*t8+3*t1^2*t2*t5^2*t6*t7*t8+
3*n*t1^2*t2*t5^2*t6*t7*t8-3*t2^3*t3^2*t5^2*t9-3*n*t2^3*t3^2*t5^2*t9+
3*t1*t2*t3^2*t5^3*t9+3*n*t1*t2*t3^2*t5^3*t9+6*t2^4*t3*t5*t6*t9+
6*n*t2^4*t3*t5*t6*t9-6*t1*t2^2*t3*t5^2*t6*t9-
6*n*t1*t2^2*t3*t5^2*t6*t9-3*n*t2^5*t6^2*t9-3*t1*t2^3*t5*t6^2*t9+
3*n*t1*t2^3*t5*t6^2*t9+3*t1^2*t2*t5^2*t6^2*t9-3*t2^5*t5*t8*t9+
6*t1*t2^3*t5^2*t8*t9-3*t1^2*t2*t5^3*t8*t9,
s18->-3*t2*t3^3*t4*t5^3-4*n*t2*t3^3*t4*t5^3-n^2*t2*t3^3*t4*t5^3+
9*t2^2*t3^2*t4*t5^2*t6+11*n*t2^2*t3^2*t4*t5^2*t6+
2*n^2*t2^2*t3^2*t4*t5^2*t6+n*t1*t3^2*t4*t5^3*t6+
n^2*t1*t3^2*t4*t5^3*t6-6*t2^3*t3*t4*t5*t6^2-7*n*t2^3*t3*t4*t5*t6^2-
n^2*t2^3*t3*t4*t5*t6^2-3*t1*t2*t3*t4*t5^2*t6^2-
5*n*t1*t2*t3*t4*t5^2*t6^2-2*n^2*t1*t2*t3*t4*t5^2*t6^2+
n*t2^4*t4*t6^3+3*t1*t2^2*t4*t5*t6^3+2*n*t1*t2^2*t4*t5*t6^3+
n^2*t1*t2^2*t4*t5*t6^3+n*t1^2*t4*t5^2*t6^3+3*t2^2*t3^3*t5^2*t7+
4*n*t2^2*t3^3*t5^2*t7+n^2*t2^2*t3^3*t5^2*t7-6*t2^3*t3^2*t5*t6*t7-
8*n*t2^3*t3^2*t5*t6*t7-2*n^2*t2^3*t3^2*t5*t6*t7-
3*t1*t2*t3^2*t5^2*t6*t7-4*n*t1*t2*t3^2*t5^2*t6*t7-
n^2*t1*t2*t3^2*t5^2*t6*t7+3*n*t2^4*t3*t6^2*t7+n^2*t2^4*t3*t6^2*t7+
9*t1*t2^2*t3*t5*t6^2*t7+7*n*t1*t2^2*t3*t5*t6^2*t7+
2*n^2*t1*t2^2*t3*t5*t6^2*t7+2*n*t1^2*t3*t5^2*t6^2*t7-
n*t1*t2^3*t6^3*t7-n^2*t1*t2^3*t6^3*t7-3*t1^2*t2*t5*t6^3*t7-
3*n*t1^2*t2*t5*t6^3*t7-3*t2^3*t3*t4*t5^2*t8-3*n*t2^3*t3*t4*t5^2*t8+
3*t1*t2*t3*t4*t5^3*t8+3*n*t1*t2*t3*t4*t5^3*t8+3*t2^4*t4*t5*t6*t8+
2*n*t2^4*t4*t5*t6*t8-3*t1*t2^2*t4*t5^2*t6*t8-
n*t1*t2^2*t4*t5^2*t6*t8-n*t1^2*t4*t5^3*t6*t8+3*t2^4*t3*t5*t7*t8+
3*n*t2^4*t3*t5*t7*t8-3*t1*t2^2*t3*t5^2*t7*t8-
3*n*t1*t2^2*t3*t5^2*t7*t8-2*n*t2^5*t6*t7*t8-3*t1*t2^3*t5*t6*t7*t8+
n*t1*t2^3*t5*t6*t7*t8+3*t1^2*t2*t5^2*t6*t7*t8+
n*t1^2*t2*t5^2*t6*t7*t8-3*t2^3*t3^2*t5^2*t9-3*n*t2^3*t3^2*t5^2*t9+
3*t1*t2*t3^2*t5^3*t9+3*n*t1*t2*t3^2*t5^3*t9+6*t2^4*t3*t5*t6*t9+
4*n*t2^4*t3*t5*t6*t9-6*t1*t2^2*t3*t5^2*t6*t9-
2*n*t1*t2^2*t3*t5^2*t6*t9-2*n*t1^2*t3*t5^3*t6*t9-n*t2^5*t6^2*t9-
3*t1*t2^3*t5*t6^2*t9-n*t1*t2^3*t5*t6^2*t9+3*t1^2*t2*t5^2*t6^2*t9+
2*n*t1^2*t2*t5^2*t6^2*t9-3*t2^5*t5*t8*t9+6*t1*t2^3*t5^2*t8*t9-
3*t1^2*t2*t5^3*t8*t9,s19->3*t3^3*t4*t5^4+4*n*t3^3*t4*t5^4+
n^2*t3^3*t4*t5^4-9*t2*t3^2*t4*t5^3*t6-12*n*t2*t3^2*t4*t5^3*t6-
3*n^2*t2*t3^2*t4*t5^3*t6+6*t2^2*t3*t4*t5^2*t6^2+
9*n*t2^2*t3*t4*t5^2*t6^2+3*n^2*t2^2*t3*t4*t5^2*t6^2+
3*t1*t3*t4*t5^3*t6^2+3*n*t1*t3*t4*t5^3*t6^2-n*t2^3*t4*t5*t6^3-
n^2*t2^3*t4*t5*t6^3-3*t1*t2*t4*t5^2*t6^3-3*n*t1*t2*t4*t5^2*t6^3-
3*t2*t3^3*t5^3*t7-4*n*t2*t3^3*t5^3*t7-n^2*t2*t3^3*t5^3*t7+
6*t2^2*t3^2*t5^2*t6*t7+9*n*t2^2*t3^2*t5^2*t6*t7+
3*n^2*t2^2*t3^2*t5^2*t6*t7+3*t1*t3^2*t5^3*t6*t7+
3*n*t1*t3^2*t5^3*t6*t7-3*n*t2^3*t3*t5*t6^2*t7-
3*n^2*t2^3*t3*t5*t6^2*t7-9*t1*t2*t3*t5^2*t6^2*t7-
9*n*t1*t2*t3*t5^2*t6^2*t7-2*n*t2^4*t6^3*t7+n^2*t2^4*t6^3*t7+
6*n*t1*t2^2*t5*t6^3*t7+3*t1^2*t5^2*t6^3*t7+3*t2^2*t3*t4*t5^3*t8+
3*n*t2^2*t3*t4*t5^3*t8-3*t1*t3*t4*t5^4*t8-3*n*t1*t3*t4*t5^4*t8-
3*t2^3*t4*t5^2*t6*t8-3*n*t2^3*t4*t5^2*t6*t8+3*t1*t2*t4*t5^3*t6*t8+
3*n*t1*t2*t4*t5^3*t6*t8-3*t2^3*t3*t5^2*t7*t8-3*n*t2^3*t3*t5^2*t7*t8+
3*t1*t2*t3*t5^3*t7*t8+3*n*t1*t2*t3*t5^3*t7*t8+3*n*t2^4*t5*t6*t7*t8+
3*t1*t2^2*t5^2*t6*t7*t8-3*n*t1*t2^2*t5^2*t6*t7*t8-
3*t1^2*t5^3*t6*t7*t8+3*t2^2*t3^2*t5^3*t9+3*n*t2^2*t3^2*t5^3*t9-
3*t1*t3^2*t5^4*t9-3*n*t1*t3^2*t5^4*t9-6*t2^3*t3*t5^2*t6*t9-
6*n*t2^3*t3*t5^2*t6*t9+6*t1*t2*t3*t5^3*t6*t9+
6*n*t1*t2*t3*t5^3*t6*t9+3*n*t2^4*t5*t6^2*t9+3*t1*t2^2*t5^2*t6^2*t9-
3*n*t1*t2^2*t5^2*t6^2*t9-3*t1^2*t5^3*t6^2*t9+3*t2^4*t5^2*t8*t9-
6*t1*t2^2*t5^3*t8*t9+3*t1^2*t5^4*t8*t9},
{t1->SP[p1,p1],t2->SP[p1,p2],t3->SP[p1,q1],t4->SP[p1,q2],
t5->SP[p2,p2],t6->SP[p2,q1],t7->SP[p2,q2],t8->SP[q1,q1],
t9->SP[q1,q2],v1->FV[p1,mu],v2->FV[p1,nu],v3->FV[p1,rho],
v4->FV[p1,si],v5->FV[p2,mu],v6->FV[p2,nu],v7->FV[p2,rho],
v8->FV[p2,si],m1->MT[mu,nu],m2->MT[mu,rho],m3->MT[mu,si],
m4->MT[nu,rho],m5->MT[nu,si],m6->MT[rho,si]}};
scpexp[encli,n]]
}
